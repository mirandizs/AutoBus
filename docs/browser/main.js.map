{"version":3,"sources":["node_modules/file-saver/dist/FileSaver.min.js","node_modules/@angular/common/fesm2022/dom_tokens-rA0ACyx7.mjs","node_modules/@angular/common/fesm2022/location-DpBxd_aX.mjs","node_modules/@angular/common/fesm2022/common_module-CBrzkrmd.mjs","node_modules/@angular/common/fesm2022/xhr-BfNfxNDv.mjs","node_modules/@angular/common/fesm2022/common.mjs","node_modules/@angular/platform-browser/fesm2022/dom_renderer-DGKzginR.mjs","node_modules/@angular/platform-browser/fesm2022/browser-X3l5Bmdq.mjs","node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs","node_modules/@angular/router/fesm2022/router-B-Y85L0c.mjs","node_modules/@angular/router/fesm2022/router_module-CbmfhtZA.mjs","src/app/Componentes/ServicoMensagens/Mensagens.service.ts","src/app/Services/Http.service.ts","src/app/Definicoes.ts","src/app/Services/Autenticacao.service.ts","src/app/Componentes/Footer/footer.ts","src/app/Componentes/Footer/footer.html","src/app/Paginas/Definicoes/definicoes.ts","src/app/Paginas/Definicoes/definicoes.html","src/app/Componentes/Carregamento/carregamento.ts","src/app/Componentes/Carregamento/carregamento.html","node_modules/@angular/forms/fesm2022/forms.mjs","src/app/Componentes/Topbar/topbar.ts","src/app/Componentes/Topbar/topbar.html","src/app/Componentes/FormPesquisaViagens/pesquisa-viagens.ts","src/app/Componentes/FormPesquisaViagens/pesquisa-viagens.html","src/app/Componentes/ButaoVoltar/butao-voltar.ts","src/app/Componentes/ButaoVoltar/butao-voltar.html","src/app/Paginas/Inicial/inicial.ts","src/app/Paginas/Inicial/inicial.html","src/app/Paginas/Viagens/viagens.ts","src/app/Paginas/Viagens/viagens.html","src/app/Services/Validadores.ts","src/app/Componentes/SeletorImagens/seletor-imagens.ts","src/app/Componentes/SeletorImagens/seletor-imagens.html","src/app/Componentes/ModalVerificacao/modal-verificacao.ts","src/app/Componentes/ModalVerificacao/modal-verificacao.html","src/app/Paginas/CriarConta/criar_conta.ts","src/app/Paginas/CriarConta/criar_conta.html","src/app/Paginas/Compras/compras.ts","src/app/Paginas/Compras/compras.html","src/app/Paginas/Carrinho/carrinho.ts","src/app/Paginas/Carrinho/carrinho.html","node_modules/@angular/google-maps/fesm2022/google-maps.mjs","src/app/Componentes/Mapa/polygon-portugal.ts","src/app/Componentes/Mapa/mapa.ts","src/app/Componentes/Mapa/mapa.html","src/app/Paginas/Localidades/localidades.ts","src/app/Paginas/Localidades/localidades.html","src/app/Paginas/Contacto/contacto.ts","src/app/Paginas/Contacto/contacto.html","src/app/Paginas/Sobre/sobre.ts","src/app/Paginas/Sobre/sobre.html","src/app/Paginas/Definicoes/Privacidade/privacidade.ts","src/app/Paginas/Definicoes/Privacidade/privacidade.html","src/app/Paginas/Definicoes/MinhaConta/minha-conta.ts","src/app/Paginas/Definicoes/MinhaConta/minha-conta.html","src/app/Paginas/Definicoes/GerirUtilizadores/utilizadores.ts","src/app/Paginas/Definicoes/GerirUtilizadores/utilizadores.html","src/app/Paginas/Definicoes/EditarUtilizadores/editar-utilizador.ts","src/app/Paginas/Definicoes/EditarUtilizadores/editar-utilizador.html","src/app/app.routes.ts","node_modules/@angular/platform-browser/fesm2022/animations/async.mjs","src/app/app.config.ts","src/app/Componentes/ServicoMensagens/mensagem.componente.ts","src/app/Componentes/ServicoMensagens/container-mensagens.ts","src/app/app.component.ts","src/app/app.component.html","src/main.ts"],"sourcesContent":["(function (a, b) {\n  if (\"function\" == typeof define && define.amd) define([], b);else if (\"undefined\" != typeof exports) b();else {\n    b(), a.FileSaver = {\n      exports: {}\n    }.exports;\n  }\n})(this, function () {\n  \"use strict\";\n\n  function b(a, b) {\n    return \"undefined\" == typeof b ? b = {\n      autoBom: !1\n    } : \"object\" != typeof b && (console.warn(\"Deprecated: Expected third argument to be a object\"), b = {\n      autoBom: !b\n    }), b.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type) ? new Blob([\"\\uFEFF\", a], {\n      type: a.type\n    }) : a;\n  }\n  function c(a, b, c) {\n    var d = new XMLHttpRequest();\n    d.open(\"GET\", a), d.responseType = \"blob\", d.onload = function () {\n      g(d.response, b, c);\n    }, d.onerror = function () {\n      console.error(\"could not download file\");\n    }, d.send();\n  }\n  function d(a) {\n    var b = new XMLHttpRequest();\n    b.open(\"HEAD\", a, !1);\n    try {\n      b.send();\n    } catch (a) {}\n    return 200 <= b.status && 299 >= b.status;\n  }\n  function e(a) {\n    try {\n      a.dispatchEvent(new MouseEvent(\"click\"));\n    } catch (c) {\n      var b = document.createEvent(\"MouseEvents\");\n      b.initMouseEvent(\"click\", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), a.dispatchEvent(b);\n    }\n  }\n  var f = \"object\" == typeof window && window.window === window ? window : \"object\" == typeof self && self.self === self ? self : \"object\" == typeof global && global.global === global ? global : void 0,\n    a = f.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent),\n    g = f.saveAs || (\"object\" != typeof window || window !== f ? function () {} : \"download\" in HTMLAnchorElement.prototype && !a ? function (b, g, h) {\n      var i = f.URL || f.webkitURL,\n        j = document.createElement(\"a\");\n      g = g || b.name || \"download\", j.download = g, j.rel = \"noopener\", \"string\" == typeof b ? (j.href = b, j.origin === location.origin ? e(j) : d(j.href) ? c(b, g, h) : e(j, j.target = \"_blank\")) : (j.href = i.createObjectURL(b), setTimeout(function () {\n        i.revokeObjectURL(j.href);\n      }, 4E4), setTimeout(function () {\n        e(j);\n      }, 0));\n    } : \"msSaveOrOpenBlob\" in navigator ? function (f, g, h) {\n      if (g = g || f.name || \"download\", \"string\" != typeof f) navigator.msSaveOrOpenBlob(b(f, h), g);else if (d(f)) c(f, g, h);else {\n        var i = document.createElement(\"a\");\n        i.href = f, i.target = \"_blank\", setTimeout(function () {\n          e(i);\n        });\n      }\n    } : function (b, d, e, g) {\n      if (g = g || open(\"\", \"_blank\"), g && (g.document.title = g.document.body.innerText = \"downloading...\"), \"string\" == typeof b) return c(b, d, e);\n      var h = \"application/octet-stream\" === b.type,\n        i = /constructor/i.test(f.HTMLElement) || f.safari,\n        j = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n      if ((j || h && i || a) && \"undefined\" != typeof FileReader) {\n        var k = new FileReader();\n        k.onloadend = function () {\n          var a = k.result;\n          a = j ? a : a.replace(/^data:[^;]*;/, \"data:attachment/file;\"), g ? g.location.href = a : location = a, g = null;\n        }, k.readAsDataURL(b);\n      } else {\n        var l = f.URL || f.webkitURL,\n          m = l.createObjectURL(b);\n        g ? g.location = m : location.href = m, g = null, setTimeout(function () {\n          l.revokeObjectURL(m);\n        }, 4E4);\n      }\n    });\n  f.saveAs = g.saveAs = g, \"undefined\" != typeof module && (module.exports = g);\n});\n\n","/**\n * @license Angular v19.2.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { InjectionToken } from '@angular/core';\n\n/**\n * A DI Token representing the main rendering context.\n * In a browser and SSR this is the DOM Document.\n * When using SSR, that document is created by [Domino](https://github.com/angular/domino).\n *\n * @publicApi\n */\nconst DOCUMENT = /*#__PURE__*/new InjectionToken(ngDevMode ? 'DocumentToken' : '');\nexport { DOCUMENT };\n","/**\n * @license Angular v19.2.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injectable, Optional, Inject, ɵɵinject as __inject } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { DOCUMENT } from './dom_tokens-rA0ACyx7.mjs';\nlet _DOM = null;\nfunction getDOM() {\n  return _DOM;\n}\nfunction setRootDomAdapter(adapter) {\n  _DOM ??= adapter;\n}\n/**\n * Provides DOM operations in an environment-agnostic way.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass DomAdapter {}\n\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n *\n * `PlatformLocation` encapsulates all calls to DOM APIs, which allows the Router to be\n * platform-agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms that Angular supports. For example, `@angular/platform-browser` provides an\n * implementation specific to the browser environment, while `@angular/platform-server` provides\n * one suitable for use with server-side rendering.\n *\n * The `PlatformLocation` class is used directly by all implementations of {@link LocationStrategy}\n * when they need to interact with the DOM APIs like pushState, popState, etc.\n *\n * {@link LocationStrategy} in turn is used by the {@link Location} service which is used directly\n * by the {@link /api/router/Router Router} in order to navigate between routes. Since all interactions between\n * {@link /api/router/Router Router} /\n * {@link Location} / {@link LocationStrategy} and DOM APIs flow through the `PlatformLocation`\n * class, they are all platform-agnostic.\n *\n * @publicApi\n */\nlet PlatformLocation = /*#__PURE__*/(() => {\n  class PlatformLocation {\n    historyGo(relativePosition) {\n      throw new Error(ngDevMode ? 'Not implemented' : '');\n    }\n    static ɵfac = function PlatformLocation_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PlatformLocation)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: PlatformLocation,\n      factory: () => (() => inject(BrowserPlatformLocation))(),\n      providedIn: 'platform'\n    });\n  }\n  return PlatformLocation;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Indicates when a location is initialized.\n *\n * @publicApi\n */\nconst LOCATION_INITIALIZED = /*#__PURE__*/new InjectionToken(ngDevMode ? 'Location Initialized' : '');\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {@link Location}.\n *\n * @publicApi\n */\nlet BrowserPlatformLocation = /*#__PURE__*/(() => {\n  class BrowserPlatformLocation extends PlatformLocation {\n    _location;\n    _history;\n    _doc = inject(DOCUMENT);\n    constructor() {\n      super();\n      this._location = window.location;\n      this._history = window.history;\n    }\n    getBaseHrefFromDOM() {\n      return getDOM().getBaseHref(this._doc);\n    }\n    onPopState(fn) {\n      const window = getDOM().getGlobalEventTarget(this._doc, 'window');\n      window.addEventListener('popstate', fn, false);\n      return () => window.removeEventListener('popstate', fn);\n    }\n    onHashChange(fn) {\n      const window = getDOM().getGlobalEventTarget(this._doc, 'window');\n      window.addEventListener('hashchange', fn, false);\n      return () => window.removeEventListener('hashchange', fn);\n    }\n    get href() {\n      return this._location.href;\n    }\n    get protocol() {\n      return this._location.protocol;\n    }\n    get hostname() {\n      return this._location.hostname;\n    }\n    get port() {\n      return this._location.port;\n    }\n    get pathname() {\n      return this._location.pathname;\n    }\n    get search() {\n      return this._location.search;\n    }\n    get hash() {\n      return this._location.hash;\n    }\n    set pathname(newPath) {\n      this._location.pathname = newPath;\n    }\n    pushState(state, title, url) {\n      this._history.pushState(state, title, url);\n    }\n    replaceState(state, title, url) {\n      this._history.replaceState(state, title, url);\n    }\n    forward() {\n      this._history.forward();\n    }\n    back() {\n      this._history.back();\n    }\n    historyGo(relativePosition = 0) {\n      this._history.go(relativePosition);\n    }\n    getState() {\n      return this._history.state;\n    }\n    static ɵfac = function BrowserPlatformLocation_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrowserPlatformLocation)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: BrowserPlatformLocation,\n      factory: () => (() => new BrowserPlatformLocation())(),\n      providedIn: 'platform'\n    });\n  }\n  return BrowserPlatformLocation;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Joins two parts of a URL with a slash if needed.\n *\n * @param start  URL string\n * @param end    URL string\n *\n *\n * @returns The joined URL string.\n */\nfunction joinWithSlash(start, end) {\n  // If `start` is an empty string, return `end` as the result.\n  if (!start) return end;\n  // If `end` is an empty string, return `start` as the result.\n  if (!end) return start;\n  // If `start` ends with a slash, remove the leading slash from `end`.\n  if (start.endsWith('/')) {\n    return end.startsWith('/') ? start + end.slice(1) : start + end;\n  }\n  // If `start` doesn't end with a slash, add one if `end` doesn't start with a slash.\n  return end.startsWith('/') ? start + end : `${start}/${end}`;\n}\n/**\n * Removes a trailing slash from a URL string if needed.\n * Looks for the first occurrence of either `#`, `?`, or the end of the\n * line as `/` characters and removes the trailing slash if one exists.\n *\n * @param url URL string.\n *\n * @returns The URL string, modified if needed.\n */\nfunction stripTrailingSlash(url) {\n  // Find the index of the first occurrence of `#`, `?`, or the end of the string.\n  // This marks the start of the query string, fragment, or the end of the URL path.\n  const pathEndIdx = url.search(/#|\\?|$/);\n  // Check if the character before `pathEndIdx` is a trailing slash.\n  // If it is, remove the trailing slash and return the modified URL.\n  // Otherwise, return the URL as is.\n  return url[pathEndIdx - 1] === '/' ? url.slice(0, pathEndIdx - 1) + url.slice(pathEndIdx) : url;\n}\n/**\n * Normalizes URL parameters by prepending with `?` if needed.\n *\n * @param  params String of URL parameters.\n *\n * @returns The normalized URL parameters string.\n */\nfunction normalizeQueryParams(params) {\n  return params && params[0] !== '?' ? `?${params}` : params;\n}\n\n/**\n * Enables the `Location` service to read route state from the browser's URL.\n * Angular provides two strategies:\n * `HashLocationStrategy` and `PathLocationStrategy`.\n *\n * Applications should use the `Router` or `Location` services to\n * interact with application route state.\n *\n * For instance, `HashLocationStrategy` produces URLs like\n * <code class=\"no-auto-link\">http://example.com/#/foo</code>,\n * and `PathLocationStrategy` produces\n * <code class=\"no-auto-link\">http://example.com/foo</code> as an equivalent URL.\n *\n * See these two classes for more.\n *\n * @publicApi\n */\nlet LocationStrategy = /*#__PURE__*/(() => {\n  class LocationStrategy {\n    historyGo(relativePosition) {\n      throw new Error(ngDevMode ? 'Not implemented' : '');\n    }\n    static ɵfac = function LocationStrategy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LocationStrategy)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: LocationStrategy,\n      factory: () => (() => inject(PathLocationStrategy))(),\n      providedIn: 'root'\n    });\n  }\n  return LocationStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A predefined DI token for the base href\n * to be used with the `PathLocationStrategy`.\n * The base href is the URL prefix that should be preserved when generating\n * and recognizing URLs.\n *\n * @usageNotes\n *\n * The following example shows how to use this token to configure the root app injector\n * with a base href value, so that the DI framework can supply the dependency anywhere in the app.\n *\n * ```ts\n * import {NgModule} from '@angular/core';\n * import {APP_BASE_HREF} from '@angular/common';\n *\n * @NgModule({\n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n * })\n * class AppModule {}\n * ```\n *\n * @publicApi\n */\nconst APP_BASE_HREF = /*#__PURE__*/new InjectionToken(ngDevMode ? 'appBaseHref' : '');\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n *\n * If you're using `PathLocationStrategy`, you may provide a {@link APP_BASE_HREF}\n * or add a `<base href>` element to the document to override the default.\n *\n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app/'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`. To ensure all relative URIs resolve correctly,\n * the `<base href>` and/or `APP_BASE_HREF` should end with a `/`.\n *\n * Similarly, if you add `<base href='/my/app/'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * Note that when using `PathLocationStrategy`, neither the query nor\n * the fragment in the `<base href>` will be preserved, as outlined\n * by the [RFC](https://tools.ietf.org/html/rfc3986#section-5.2.2).\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nlet PathLocationStrategy = /*#__PURE__*/(() => {\n  class PathLocationStrategy extends LocationStrategy {\n    _platformLocation;\n    _baseHref;\n    _removeListenerFns = [];\n    constructor(_platformLocation, href) {\n      super();\n      this._platformLocation = _platformLocation;\n      this._baseHref = href ?? this._platformLocation.getBaseHrefFromDOM() ?? inject(DOCUMENT).location?.origin ?? '';\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      while (this._removeListenerFns.length) {\n        this._removeListenerFns.pop()();\n      }\n    }\n    onPopState(fn) {\n      this._removeListenerFns.push(this._platformLocation.onPopState(fn), this._platformLocation.onHashChange(fn));\n    }\n    getBaseHref() {\n      return this._baseHref;\n    }\n    prepareExternalUrl(internal) {\n      return joinWithSlash(this._baseHref, internal);\n    }\n    path(includeHash = false) {\n      const pathname = this._platformLocation.pathname + normalizeQueryParams(this._platformLocation.search);\n      const hash = this._platformLocation.hash;\n      return hash && includeHash ? `${pathname}${hash}` : pathname;\n    }\n    pushState(state, title, url, queryParams) {\n      const externalUrl = this.prepareExternalUrl(url + normalizeQueryParams(queryParams));\n      this._platformLocation.pushState(state, title, externalUrl);\n    }\n    replaceState(state, title, url, queryParams) {\n      const externalUrl = this.prepareExternalUrl(url + normalizeQueryParams(queryParams));\n      this._platformLocation.replaceState(state, title, externalUrl);\n    }\n    forward() {\n      this._platformLocation.forward();\n    }\n    back() {\n      this._platformLocation.back();\n    }\n    getState() {\n      return this._platformLocation.getState();\n    }\n    historyGo(relativePosition = 0) {\n      this._platformLocation.historyGo?.(relativePosition);\n    }\n    static ɵfac = function PathLocationStrategy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PathLocationStrategy)(i0.ɵɵinject(PlatformLocation), i0.ɵɵinject(APP_BASE_HREF, 8));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: PathLocationStrategy,\n      factory: PathLocationStrategy.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return PathLocationStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @description\n *\n * A service that applications can use to interact with a browser's URL.\n *\n * Depending on the `LocationStrategy` used, `Location` persists\n * to the URL's path or the URL's hash segment.\n *\n * @usageNotes\n *\n * It's better to use the `Router.navigate()` service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n *\n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n *\n * ### Example\n *\n * {@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nlet Location = /*#__PURE__*/(() => {\n  class Location {\n    /** @internal */\n    _subject = new Subject();\n    /** @internal */\n    _basePath;\n    /** @internal */\n    _locationStrategy;\n    /** @internal */\n    _urlChangeListeners = [];\n    /** @internal */\n    _urlChangeSubscription = null;\n    constructor(locationStrategy) {\n      this._locationStrategy = locationStrategy;\n      const baseHref = this._locationStrategy.getBaseHref();\n      // Note: This class's interaction with base HREF does not fully follow the rules\n      // outlined in the spec https://www.freesoft.org/CIE/RFC/1808/18.htm.\n      // Instead of trying to fix individual bugs with more and more code, we should\n      // investigate using the URL constructor and providing the base as a second\n      // argument.\n      // https://developer.mozilla.org/en-US/docs/Web/API/URL/URL#parameters\n      this._basePath = _stripOrigin(stripTrailingSlash(_stripIndexHtml(baseHref)));\n      this._locationStrategy.onPopState(ev => {\n        this._subject.next({\n          'url': this.path(true),\n          'pop': true,\n          'state': ev.state,\n          'type': ev.type\n        });\n      });\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this._urlChangeSubscription?.unsubscribe();\n      this._urlChangeListeners = [];\n    }\n    /**\n     * Normalizes the URL path for this location.\n     *\n     * @param includeHash True to include an anchor fragment in the path.\n     *\n     * @returns The normalized URL path.\n     */\n    // TODO: vsavkin. Remove the boolean flag and always include hash once the deprecated router is\n    // removed.\n    path(includeHash = false) {\n      return this.normalize(this._locationStrategy.path(includeHash));\n    }\n    /**\n     * Reports the current state of the location history.\n     * @returns The current value of the `history.state` object.\n     */\n    getState() {\n      return this._locationStrategy.getState();\n    }\n    /**\n     * Normalizes the given path and compares to the current normalized path.\n     *\n     * @param path The given URL path.\n     * @param query Query parameters.\n     *\n     * @returns True if the given URL path is equal to the current normalized path, false\n     * otherwise.\n     */\n    isCurrentPathEqualTo(path, query = '') {\n      return this.path() == this.normalize(path + normalizeQueryParams(query));\n    }\n    /**\n     * Normalizes a URL path by stripping any trailing slashes.\n     *\n     * @param url String representing a URL.\n     *\n     * @returns The normalized URL string.\n     */\n    normalize(url) {\n      return Location.stripTrailingSlash(_stripBasePath(this._basePath, _stripIndexHtml(url)));\n    }\n    /**\n     * Normalizes an external URL path.\n     * If the given URL doesn't begin with a leading slash (`'/'`), adds one\n     * before normalizing. Adds a hash if `HashLocationStrategy` is\n     * in use, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n     *\n     * @param url String representing a URL.\n     *\n     * @returns  A normalized platform-specific URL.\n     */\n    prepareExternalUrl(url) {\n      if (url && url[0] !== '/') {\n        url = '/' + url;\n      }\n      return this._locationStrategy.prepareExternalUrl(url);\n    }\n    // TODO: rename this method to pushState\n    /**\n     * Changes the browser's URL to a normalized version of a given URL, and pushes a\n     * new item onto the platform's history.\n     *\n     * @param path  URL path to normalize.\n     * @param query Query parameters.\n     * @param state Location history state.\n     *\n     */\n    go(path, query = '', state = null) {\n      this._locationStrategy.pushState(state, '', path, query);\n      this._notifyUrlChangeListeners(this.prepareExternalUrl(path + normalizeQueryParams(query)), state);\n    }\n    /**\n     * Changes the browser's URL to a normalized version of the given URL, and replaces\n     * the top item on the platform's history stack.\n     *\n     * @param path  URL path to normalize.\n     * @param query Query parameters.\n     * @param state Location history state.\n     */\n    replaceState(path, query = '', state = null) {\n      this._locationStrategy.replaceState(state, '', path, query);\n      this._notifyUrlChangeListeners(this.prepareExternalUrl(path + normalizeQueryParams(query)), state);\n    }\n    /**\n     * Navigates forward in the platform's history.\n     */\n    forward() {\n      this._locationStrategy.forward();\n    }\n    /**\n     * Navigates back in the platform's history.\n     */\n    back() {\n      this._locationStrategy.back();\n    }\n    /**\n     * Navigate to a specific page from session history, identified by its relative position to the\n     * current page.\n     *\n     * @param relativePosition  Position of the target page in the history relative to the current\n     *     page.\n     * A negative value moves backwards, a positive value moves forwards, e.g. `location.historyGo(2)`\n     * moves forward two pages and `location.historyGo(-2)` moves back two pages. When we try to go\n     * beyond what's stored in the history session, we stay in the current page. Same behaviour occurs\n     * when `relativePosition` equals 0.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/History_API#Moving_to_a_specific_point_in_history\n     */\n    historyGo(relativePosition = 0) {\n      this._locationStrategy.historyGo?.(relativePosition);\n    }\n    /**\n     * Registers a URL change listener. Use to catch updates performed by the Angular\n     * framework that are not detectible through \"popstate\" or \"hashchange\" events.\n     *\n     * @param fn The change handler function, which take a URL and a location history state.\n     * @returns A function that, when executed, unregisters a URL change listener.\n     */\n    onUrlChange(fn) {\n      this._urlChangeListeners.push(fn);\n      this._urlChangeSubscription ??= this.subscribe(v => {\n        this._notifyUrlChangeListeners(v.url, v.state);\n      });\n      return () => {\n        const fnIndex = this._urlChangeListeners.indexOf(fn);\n        this._urlChangeListeners.splice(fnIndex, 1);\n        if (this._urlChangeListeners.length === 0) {\n          this._urlChangeSubscription?.unsubscribe();\n          this._urlChangeSubscription = null;\n        }\n      };\n    }\n    /** @internal */\n    _notifyUrlChangeListeners(url = '', state) {\n      this._urlChangeListeners.forEach(fn => fn(url, state));\n    }\n    /**\n     * Subscribes to the platform's `popState` events.\n     *\n     * Note: `Location.go()` does not trigger the `popState` event in the browser. Use\n     * `Location.onUrlChange()` to subscribe to URL changes instead.\n     *\n     * @param value Event that is triggered when the state history changes.\n     * @param exception The exception to throw.\n     *\n     * @see [onpopstate](https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate)\n     *\n     * @returns Subscribed events.\n     */\n    subscribe(onNext, onThrow, onReturn) {\n      return this._subject.subscribe({\n        next: onNext,\n        error: onThrow ?? undefined,\n        complete: onReturn ?? undefined\n      });\n    }\n    /**\n     * Normalizes URL parameters by prepending with `?` if needed.\n     *\n     * @param  params String of URL parameters.\n     *\n     * @returns The normalized URL parameters string.\n     */\n    static normalizeQueryParams = normalizeQueryParams;\n    /**\n     * Joins two parts of a URL with a slash if needed.\n     *\n     * @param start  URL string\n     * @param end    URL string\n     *\n     *\n     * @returns The joined URL string.\n     */\n    static joinWithSlash = joinWithSlash;\n    /**\n     * Removes a trailing slash from a URL string if needed.\n     * Looks for the first occurrence of either `#`, `?`, or the end of the\n     * line as `/` characters and removes the trailing slash if one exists.\n     *\n     * @param url URL string.\n     *\n     * @returns The URL string, modified if needed.\n     */\n    static stripTrailingSlash = stripTrailingSlash;\n    static ɵfac = function Location_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Location)(i0.ɵɵinject(LocationStrategy));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Location,\n      factory: () => createLocation(),\n      providedIn: 'root'\n    });\n  }\n  return Location;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction createLocation() {\n  return new Location(__inject(LocationStrategy));\n}\nfunction _stripBasePath(basePath, url) {\n  if (!basePath || !url.startsWith(basePath)) {\n    return url;\n  }\n  const strippedUrl = url.substring(basePath.length);\n  if (strippedUrl === '' || ['/', ';', '?', '#'].includes(strippedUrl[0])) {\n    return strippedUrl;\n  }\n  return url;\n}\nfunction _stripIndexHtml(url) {\n  return url.replace(/\\/index.html$/, '');\n}\nfunction _stripOrigin(baseHref) {\n  // DO NOT REFACTOR! Previously, this check looked like this:\n  // `/^(https?:)?\\/\\//.test(baseHref)`, but that resulted in\n  // syntactically incorrect code after Closure Compiler minification.\n  // This was likely caused by a bug in Closure Compiler, but\n  // for now, the check is rewritten to use `new RegExp` instead.\n  const isAbsoluteUrl = new RegExp('^(https?:)?//').test(baseHref);\n  if (isAbsoluteUrl) {\n    const [, pathname] = baseHref.split(/\\/\\/[^\\/]+/);\n    return pathname;\n  }\n  return baseHref;\n}\nexport { APP_BASE_HREF, BrowserPlatformLocation, DomAdapter, LOCATION_INITIALIZED, Location, LocationStrategy, PathLocationStrategy, PlatformLocation, getDOM, joinWithSlash, normalizeQueryParams, setRootDomAdapter };\n","/**\n * @license Angular v19.2.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Optional, Inject, Injectable, ɵgetLocalePluralCase as _getLocalePluralCase, ɵfindLocaleData as _findLocaleData, ɵLocaleDataIndex as _LocaleDataIndex, ɵgetLocaleCurrencyCode as _getLocaleCurrencyCode, LOCALE_ID, ɵstringify as _stringify, Input, Directive, createNgModule, NgModuleRef, ɵRuntimeError as _RuntimeError, Host, Attribute, RendererStyleFlags2, ɵisPromise as _isPromise, ɵisSubscribable as _isSubscribable, untracked, Pipe, InjectionToken, DEFAULT_CURRENCY_CODE, NgModule } from '@angular/core';\nimport { LocationStrategy, joinWithSlash, normalizeQueryParams, PlatformLocation, APP_BASE_HREF } from './location-DpBxd_aX.mjs';\n\n/**\n * @description\n * A {@link LocationStrategy} used to configure the {@link Location} service to\n * represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n *\n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n *\n * @publicApi\n */\nlet HashLocationStrategy = /*#__PURE__*/(() => {\n  class HashLocationStrategy extends LocationStrategy {\n    _platformLocation;\n    _baseHref = '';\n    _removeListenerFns = [];\n    constructor(_platformLocation, _baseHref) {\n      super();\n      this._platformLocation = _platformLocation;\n      if (_baseHref != null) {\n        this._baseHref = _baseHref;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      while (this._removeListenerFns.length) {\n        this._removeListenerFns.pop()();\n      }\n    }\n    onPopState(fn) {\n      this._removeListenerFns.push(this._platformLocation.onPopState(fn), this._platformLocation.onHashChange(fn));\n    }\n    getBaseHref() {\n      return this._baseHref;\n    }\n    path(includeHash = false) {\n      // the hash value is always prefixed with a `#`\n      // and if it is empty then it will stay empty\n      const path = this._platformLocation.hash ?? '#';\n      return path.length > 0 ? path.substring(1) : path;\n    }\n    prepareExternalUrl(internal) {\n      const url = joinWithSlash(this._baseHref, internal);\n      return url.length > 0 ? '#' + url : url;\n    }\n    pushState(state, title, path, queryParams) {\n      const url = this.prepareExternalUrl(path + normalizeQueryParams(queryParams)) || this._platformLocation.pathname;\n      this._platformLocation.pushState(state, title, url);\n    }\n    replaceState(state, title, path, queryParams) {\n      const url = this.prepareExternalUrl(path + normalizeQueryParams(queryParams)) || this._platformLocation.pathname;\n      this._platformLocation.replaceState(state, title, url);\n    }\n    forward() {\n      this._platformLocation.forward();\n    }\n    back() {\n      this._platformLocation.back();\n    }\n    getState() {\n      return this._platformLocation.getState();\n    }\n    historyGo(relativePosition = 0) {\n      this._platformLocation.historyGo?.(relativePosition);\n    }\n    static ɵfac = function HashLocationStrategy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HashLocationStrategy)(i0.ɵɵinject(PlatformLocation), i0.ɵɵinject(APP_BASE_HREF, 8));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HashLocationStrategy,\n      factory: HashLocationStrategy.ɵfac\n    });\n  }\n  return HashLocationStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** @internal */\nconst CURRENCIES_EN = {\n  \"ADP\": [undefined, undefined, 0],\n  \"AFN\": [undefined, \"؋\", 0],\n  \"ALL\": [undefined, undefined, 0],\n  \"AMD\": [undefined, \"֏\", 2],\n  \"AOA\": [undefined, \"Kz\"],\n  \"ARS\": [undefined, \"$\"],\n  \"AUD\": [\"A$\", \"$\"],\n  \"AZN\": [undefined, \"₼\"],\n  \"BAM\": [undefined, \"KM\"],\n  \"BBD\": [undefined, \"$\"],\n  \"BDT\": [undefined, \"৳\"],\n  \"BHD\": [undefined, undefined, 3],\n  \"BIF\": [undefined, undefined, 0],\n  \"BMD\": [undefined, \"$\"],\n  \"BND\": [undefined, \"$\"],\n  \"BOB\": [undefined, \"Bs\"],\n  \"BRL\": [\"R$\"],\n  \"BSD\": [undefined, \"$\"],\n  \"BWP\": [undefined, \"P\"],\n  \"BYN\": [undefined, undefined, 2],\n  \"BYR\": [undefined, undefined, 0],\n  \"BZD\": [undefined, \"$\"],\n  \"CAD\": [\"CA$\", \"$\", 2],\n  \"CHF\": [undefined, undefined, 2],\n  \"CLF\": [undefined, undefined, 4],\n  \"CLP\": [undefined, \"$\", 0],\n  \"CNY\": [\"CN¥\", \"¥\"],\n  \"COP\": [undefined, \"$\", 2],\n  \"CRC\": [undefined, \"₡\", 2],\n  \"CUC\": [undefined, \"$\"],\n  \"CUP\": [undefined, \"$\"],\n  \"CZK\": [undefined, \"Kč\", 2],\n  \"DJF\": [undefined, undefined, 0],\n  \"DKK\": [undefined, \"kr\", 2],\n  \"DOP\": [undefined, \"$\"],\n  \"EGP\": [undefined, \"E£\"],\n  \"ESP\": [undefined, \"₧\", 0],\n  \"EUR\": [\"€\"],\n  \"FJD\": [undefined, \"$\"],\n  \"FKP\": [undefined, \"£\"],\n  \"GBP\": [\"£\"],\n  \"GEL\": [undefined, \"₾\"],\n  \"GHS\": [undefined, \"GH₵\"],\n  \"GIP\": [undefined, \"£\"],\n  \"GNF\": [undefined, \"FG\", 0],\n  \"GTQ\": [undefined, \"Q\"],\n  \"GYD\": [undefined, \"$\", 2],\n  \"HKD\": [\"HK$\", \"$\"],\n  \"HNL\": [undefined, \"L\"],\n  \"HRK\": [undefined, \"kn\"],\n  \"HUF\": [undefined, \"Ft\", 2],\n  \"IDR\": [undefined, \"Rp\", 2],\n  \"ILS\": [\"₪\"],\n  \"INR\": [\"₹\"],\n  \"IQD\": [undefined, undefined, 0],\n  \"IRR\": [undefined, undefined, 0],\n  \"ISK\": [undefined, \"kr\", 0],\n  \"ITL\": [undefined, undefined, 0],\n  \"JMD\": [undefined, \"$\"],\n  \"JOD\": [undefined, undefined, 3],\n  \"JPY\": [\"¥\", undefined, 0],\n  \"KHR\": [undefined, \"៛\"],\n  \"KMF\": [undefined, \"CF\", 0],\n  \"KPW\": [undefined, \"₩\", 0],\n  \"KRW\": [\"₩\", undefined, 0],\n  \"KWD\": [undefined, undefined, 3],\n  \"KYD\": [undefined, \"$\"],\n  \"KZT\": [undefined, \"₸\"],\n  \"LAK\": [undefined, \"₭\", 0],\n  \"LBP\": [undefined, \"L£\", 0],\n  \"LKR\": [undefined, \"Rs\"],\n  \"LRD\": [undefined, \"$\"],\n  \"LTL\": [undefined, \"Lt\"],\n  \"LUF\": [undefined, undefined, 0],\n  \"LVL\": [undefined, \"Ls\"],\n  \"LYD\": [undefined, undefined, 3],\n  \"MGA\": [undefined, \"Ar\", 0],\n  \"MGF\": [undefined, undefined, 0],\n  \"MMK\": [undefined, \"K\", 0],\n  \"MNT\": [undefined, \"₮\", 2],\n  \"MRO\": [undefined, undefined, 0],\n  \"MUR\": [undefined, \"Rs\", 2],\n  \"MXN\": [\"MX$\", \"$\"],\n  \"MYR\": [undefined, \"RM\"],\n  \"NAD\": [undefined, \"$\"],\n  \"NGN\": [undefined, \"₦\"],\n  \"NIO\": [undefined, \"C$\"],\n  \"NOK\": [undefined, \"kr\", 2],\n  \"NPR\": [undefined, \"Rs\"],\n  \"NZD\": [\"NZ$\", \"$\"],\n  \"OMR\": [undefined, undefined, 3],\n  \"PHP\": [\"₱\"],\n  \"PKR\": [undefined, \"Rs\", 2],\n  \"PLN\": [undefined, \"zł\"],\n  \"PYG\": [undefined, \"₲\", 0],\n  \"RON\": [undefined, \"lei\"],\n  \"RSD\": [undefined, undefined, 0],\n  \"RUB\": [undefined, \"₽\"],\n  \"RWF\": [undefined, \"RF\", 0],\n  \"SBD\": [undefined, \"$\"],\n  \"SEK\": [undefined, \"kr\", 2],\n  \"SGD\": [undefined, \"$\"],\n  \"SHP\": [undefined, \"£\"],\n  \"SLE\": [undefined, undefined, 2],\n  \"SLL\": [undefined, undefined, 0],\n  \"SOS\": [undefined, undefined, 0],\n  \"SRD\": [undefined, \"$\"],\n  \"SSP\": [undefined, \"£\"],\n  \"STD\": [undefined, undefined, 0],\n  \"STN\": [undefined, \"Db\"],\n  \"SYP\": [undefined, \"£\", 0],\n  \"THB\": [undefined, \"฿\"],\n  \"TMM\": [undefined, undefined, 0],\n  \"TND\": [undefined, undefined, 3],\n  \"TOP\": [undefined, \"T$\"],\n  \"TRL\": [undefined, undefined, 0],\n  \"TRY\": [undefined, \"₺\"],\n  \"TTD\": [undefined, \"$\"],\n  \"TWD\": [\"NT$\", \"$\", 2],\n  \"TZS\": [undefined, undefined, 2],\n  \"UAH\": [undefined, \"₴\"],\n  \"UGX\": [undefined, undefined, 0],\n  \"USD\": [\"$\"],\n  \"UYI\": [undefined, undefined, 0],\n  \"UYU\": [undefined, \"$\"],\n  \"UYW\": [undefined, undefined, 4],\n  \"UZS\": [undefined, undefined, 2],\n  \"VEF\": [undefined, \"Bs\", 2],\n  \"VND\": [\"₫\", undefined, 0],\n  \"VUV\": [undefined, undefined, 0],\n  \"XAF\": [\"FCFA\", undefined, 0],\n  \"XCD\": [\"EC$\", \"$\"],\n  \"XOF\": [\"F CFA\", undefined, 0],\n  \"XPF\": [\"CFPF\", undefined, 0],\n  \"XXX\": [\"¤\"],\n  \"YER\": [undefined, undefined, 0],\n  \"ZAR\": [undefined, \"R\"],\n  \"ZMK\": [undefined, undefined, 0],\n  \"ZMW\": [undefined, \"ZK\"],\n  \"ZWD\": [undefined, undefined, 0]\n};\n\n/**\n * Format styles that can be used to represent numbers.\n * @see {@link getLocaleNumberFormat}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated `getLocaleNumberFormat` is deprecated\n */\nvar NumberFormatStyle = /*#__PURE__*/function (NumberFormatStyle) {\n  NumberFormatStyle[NumberFormatStyle[\"Decimal\"] = 0] = \"Decimal\";\n  NumberFormatStyle[NumberFormatStyle[\"Percent\"] = 1] = \"Percent\";\n  NumberFormatStyle[NumberFormatStyle[\"Currency\"] = 2] = \"Currency\";\n  NumberFormatStyle[NumberFormatStyle[\"Scientific\"] = 3] = \"Scientific\";\n  return NumberFormatStyle;\n}(NumberFormatStyle || {});\n/**\n * Plurality cases used for translating plurals to different languages.\n *\n * @see {@link NgPlural}\n * @see {@link NgPluralCase}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated `getLocalePluralCase` is deprecated\n */\nvar Plural = /*#__PURE__*/function (Plural) {\n  Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n  Plural[Plural[\"One\"] = 1] = \"One\";\n  Plural[Plural[\"Two\"] = 2] = \"Two\";\n  Plural[Plural[\"Few\"] = 3] = \"Few\";\n  Plural[Plural[\"Many\"] = 4] = \"Many\";\n  Plural[Plural[\"Other\"] = 5] = \"Other\";\n  return Plural;\n}(Plural || {});\n/**\n * Context-dependant translation forms for strings.\n * Typically the standalone version is for the nominative form of the word,\n * and the format version is used for the genitive case.\n * @see [CLDR website](http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles)\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated locale data getters are deprecated\n */\nvar FormStyle = /*#__PURE__*/function (FormStyle) {\n  FormStyle[FormStyle[\"Format\"] = 0] = \"Format\";\n  FormStyle[FormStyle[\"Standalone\"] = 1] = \"Standalone\";\n  return FormStyle;\n}(FormStyle || {});\n/**\n * String widths available for translations.\n * The specific character widths are locale-specific.\n * Examples are given for the word \"Sunday\" in English.\n *\n * @publicApi\n *\n * @deprecated locale data getters are deprecated\n */\nvar TranslationWidth = /*#__PURE__*/function (TranslationWidth) {\n  /** 1 character for `en-US`. For example: 'S' */\n  TranslationWidth[TranslationWidth[\"Narrow\"] = 0] = \"Narrow\";\n  /** 3 characters for `en-US`. For example: 'Sun' */\n  TranslationWidth[TranslationWidth[\"Abbreviated\"] = 1] = \"Abbreviated\";\n  /** Full length for `en-US`. For example: \"Sunday\" */\n  TranslationWidth[TranslationWidth[\"Wide\"] = 2] = \"Wide\";\n  /** 2 characters for `en-US`, For example: \"Su\" */\n  TranslationWidth[TranslationWidth[\"Short\"] = 3] = \"Short\";\n  return TranslationWidth;\n}(TranslationWidth || {});\n/**\n * String widths available for date-time formats.\n * The specific character widths are locale-specific.\n * Examples are given for `en-US`.\n *\n * @see {@link getLocaleDateFormat}\n * @see {@link getLocaleTimeFormat}\n * @see {@link getLocaleDateTimeFormat}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n * @publicApi\n *\n * @deprecated Date locale data getters are deprecated\n */\nvar FormatWidth = /*#__PURE__*/function (FormatWidth) {\n  /**\n   * For `en-US`, `'M/d/yy, h:mm a'`\n   * (Example: `6/15/15, 9:03 AM`)\n   */\n  FormatWidth[FormatWidth[\"Short\"] = 0] = \"Short\";\n  /**\n   * For `en-US`, `'MMM d, y, h:mm:ss a'`\n   * (Example: `Jun 15, 2015, 9:03:01 AM`)\n   */\n  FormatWidth[FormatWidth[\"Medium\"] = 1] = \"Medium\";\n  /**\n   * For `en-US`, `'MMMM d, y, h:mm:ss a z'`\n   * (Example: `June 15, 2015 at 9:03:01 AM GMT+1`)\n   */\n  FormatWidth[FormatWidth[\"Long\"] = 2] = \"Long\";\n  /**\n   * For `en-US`, `'EEEE, MMMM d, y, h:mm:ss a zzzz'`\n   * (Example: `Monday, June 15, 2015 at 9:03:01 AM GMT+01:00`)\n   */\n  FormatWidth[FormatWidth[\"Full\"] = 3] = \"Full\";\n  return FormatWidth;\n}(FormatWidth || {});\n// This needs to be an object literal, rather than an enum, because TypeScript 5.4+\n// doesn't allow numeric keys and we have `Infinity` and `NaN`.\n/**\n * Symbols that can be used to replace placeholders in number patterns.\n * Examples are based on `en-US` values.\n *\n * @see {@link getLocaleNumberSymbol}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated `getLocaleNumberSymbol` is deprecated\n *\n * @object-literal-as-enum\n */\nconst NumberSymbol = {\n  /**\n   * Decimal separator.\n   * For `en-US`, the dot character.\n   * Example: 2,345`.`67\n   */\n  Decimal: 0,\n  /**\n   * Grouping separator, typically for thousands.\n   * For `en-US`, the comma character.\n   * Example: 2`,`345.67\n   */\n  Group: 1,\n  /**\n   * List-item separator.\n   * Example: \"one, two, and three\"\n   */\n  List: 2,\n  /**\n   * Sign for percentage (out of 100).\n   * Example: 23.4%\n   */\n  PercentSign: 3,\n  /**\n   * Sign for positive numbers.\n   * Example: +23\n   */\n  PlusSign: 4,\n  /**\n   * Sign for negative numbers.\n   * Example: -23\n   */\n  MinusSign: 5,\n  /**\n   * Computer notation for exponential value (n times a power of 10).\n   * Example: 1.2E3\n   */\n  Exponential: 6,\n  /**\n   * Human-readable format of exponential.\n   * Example: 1.2x103\n   */\n  SuperscriptingExponent: 7,\n  /**\n   * Sign for permille (out of 1000).\n   * Example: 23.4‰\n   */\n  PerMille: 8,\n  /**\n   * Infinity, can be used with plus and minus.\n   * Example: ∞, +∞, -∞\n   */\n  Infinity: 9,\n  /**\n   * Not a number.\n   * Example: NaN\n   */\n  NaN: 10,\n  /**\n   * Symbol used between time units.\n   * Example: 10:52\n   */\n  TimeSeparator: 11,\n  /**\n   * Decimal separator for currency values (fallback to `Decimal`).\n   * Example: $2,345.67\n   */\n  CurrencyDecimal: 12,\n  /**\n   * Group separator for currency values (fallback to `Group`).\n   * Example: $2,345.67\n   */\n  CurrencyGroup: 13\n};\n/**\n * The value for each day of the week, based on the `en-US` locale\n *\n * @publicApi\n *\n * @deprecated Week locale getters are deprecated\n */\nvar WeekDay = /*#__PURE__*/function (WeekDay) {\n  WeekDay[WeekDay[\"Sunday\"] = 0] = \"Sunday\";\n  WeekDay[WeekDay[\"Monday\"] = 1] = \"Monday\";\n  WeekDay[WeekDay[\"Tuesday\"] = 2] = \"Tuesday\";\n  WeekDay[WeekDay[\"Wednesday\"] = 3] = \"Wednesday\";\n  WeekDay[WeekDay[\"Thursday\"] = 4] = \"Thursday\";\n  WeekDay[WeekDay[\"Friday\"] = 5] = \"Friday\";\n  WeekDay[WeekDay[\"Saturday\"] = 6] = \"Saturday\";\n  return WeekDay;\n}(WeekDay || {});\n/**\n * Retrieves the locale ID from the currently loaded locale.\n * The loaded locale could be, for example, a global one rather than a regional one.\n * @param locale A locale code, such as `fr-FR`.\n * @returns The locale code. For example, `fr`.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * This function serves no purpose when relying on the `Intl` API.\n */\nfunction getLocaleId(locale) {\n  return _findLocaleData(locale)[_LocaleDataIndex.LocaleId];\n}\n/**\n * Retrieves day period strings for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized period strings. For example, `[AM, PM]` for `en-US`.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.DateTimeFormat` for date formating instead.\n */\nfunction getLocaleDayPeriods(locale, formStyle, width) {\n  const data = _findLocaleData(locale);\n  const amPmData = [data[_LocaleDataIndex.DayPeriodsFormat], data[_LocaleDataIndex.DayPeriodsStandalone]];\n  const amPm = getLastDefinedValue(amPmData, formStyle);\n  return getLastDefinedValue(amPm, width);\n}\n/**\n * Retrieves days of the week for the given locale, using the Gregorian calendar.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized name strings.\n * For example,`[Sunday, Monday, ... Saturday]` for `en-US`.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.DateTimeFormat` for date formating instead.\n */\nfunction getLocaleDayNames(locale, formStyle, width) {\n  const data = _findLocaleData(locale);\n  const daysData = [data[_LocaleDataIndex.DaysFormat], data[_LocaleDataIndex.DaysStandalone]];\n  const days = getLastDefinedValue(daysData, formStyle);\n  return getLastDefinedValue(days, width);\n}\n/**\n * Retrieves months of the year for the given locale, using the Gregorian calendar.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns An array of localized name strings.\n * For example,  `[January, February, ...]` for `en-US`.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.DateTimeFormat` for date formating instead.\n */\nfunction getLocaleMonthNames(locale, formStyle, width) {\n  const data = _findLocaleData(locale);\n  const monthsData = [data[_LocaleDataIndex.MonthsFormat], data[_LocaleDataIndex.MonthsStandalone]];\n  const months = getLastDefinedValue(monthsData, formStyle);\n  return getLastDefinedValue(months, width);\n}\n/**\n * Retrieves Gregorian-calendar eras for the given locale.\n * @param locale A locale code for the locale format rules to use.\n * @param width The required character width.\n\n * @returns An array of localized era strings.\n * For example, `[AD, BC]` for `en-US`.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.DateTimeFormat` for date formating instead.\n */\nfunction getLocaleEraNames(locale, width) {\n  const data = _findLocaleData(locale);\n  const erasData = data[_LocaleDataIndex.Eras];\n  return getLastDefinedValue(erasData, width);\n}\n/**\n * Retrieves the first day of the week for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns A day index number, using the 0-based week-day index for `en-US`\n * (Sunday = 0, Monday = 1, ...).\n * For example, for `fr-FR`, returns 1 to indicate that the first day is Monday.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Intl's [`getWeekInfo`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/getWeekInfo) has partial support (Chromium M99 & Safari 17).\n * You may want to rely on the following alternatives:\n * - Libraries like [`Luxon`](https://moment.github.io/luxon/#/) rely on `Intl` but fallback on the ISO 8601 definition (monday) if `getWeekInfo` is not supported.\n * - Other librairies like [`date-fns`](https://date-fns.org/), [`day.js`](https://day.js.org/en/) or [`weekstart`](https://www.npmjs.com/package/weekstart) library provide their own locale based data for the first day of the week.\n */\nfunction getLocaleFirstDayOfWeek(locale) {\n  const data = _findLocaleData(locale);\n  return data[_LocaleDataIndex.FirstDayOfWeek];\n}\n/**\n * Range of week days that are considered the week-end for the given locale.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The range of day values, `[startDay, endDay]`.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Intl's [`getWeekInfo`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/getWeekInfo) has partial support (Chromium M99 & Safari 17).\n * Libraries like [`Luxon`](https://moment.github.io/luxon/#/) rely on `Intl` but fallback on the ISO 8601 definition (Saturday+Sunday) if `getWeekInfo` is not supported .\n */\nfunction getLocaleWeekEndRange(locale) {\n  const data = _findLocaleData(locale);\n  return data[_LocaleDataIndex.WeekendRange];\n}\n/**\n * Retrieves a localized date-value formatting string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formatting string.\n * @see {@link FormatWidth}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.DateTimeFormat` for date formating instead.\n */\nfunction getLocaleDateFormat(locale, width) {\n  const data = _findLocaleData(locale);\n  return getLastDefinedValue(data[_LocaleDataIndex.DateFormat], width);\n}\n/**\n * Retrieves a localized time-value formatting string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formatting string.\n * @see {@link FormatWidth}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n\n * @publicApi\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.DateTimeFormat` for date formating instead.\n */\nfunction getLocaleTimeFormat(locale, width) {\n  const data = _findLocaleData(locale);\n  return getLastDefinedValue(data[_LocaleDataIndex.TimeFormat], width);\n}\n/**\n * Retrieves a localized date-time formatting string.\n *\n * @param locale A locale code for the locale format rules to use.\n * @param width The format type.\n * @returns The localized formatting string.\n * @see {@link FormatWidth}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.DateTimeFormat` for date formating instead.\n */\nfunction getLocaleDateTimeFormat(locale, width) {\n  const data = _findLocaleData(locale);\n  const dateTimeFormatData = data[_LocaleDataIndex.DateTimeFormat];\n  return getLastDefinedValue(dateTimeFormatData, width);\n}\n/**\n * Retrieves a localized number symbol that can be used to replace placeholders in number formats.\n * @param locale The locale code.\n * @param symbol The symbol to localize. Must be one of `NumberSymbol`.\n * @returns The character for the localized symbol.\n * @see {@link NumberSymbol}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.NumberFormat` to format numbers instead.\n */\nfunction getLocaleNumberSymbol(locale, symbol) {\n  const data = _findLocaleData(locale);\n  const res = data[_LocaleDataIndex.NumberSymbols][symbol];\n  if (typeof res === 'undefined') {\n    if (symbol === NumberSymbol.CurrencyDecimal) {\n      return data[_LocaleDataIndex.NumberSymbols][NumberSymbol.Decimal];\n    } else if (symbol === NumberSymbol.CurrencyGroup) {\n      return data[_LocaleDataIndex.NumberSymbols][NumberSymbol.Group];\n    }\n  }\n  return res;\n}\n/**\n * Retrieves a number format for a given locale.\n *\n * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`\n * when used to format the number 12345.678 could result in \"12'345,678\". That would happen if the\n * grouping separator for your language is an apostrophe, and the decimal separator is a comma.\n *\n * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders\n * that stand for the decimal separator, and so on, and are NOT real characters.\n * You must NOT \"translate\" the placeholders. For example, don't change `.` to `,` even though in\n * your language the decimal point is written with a comma. The symbols should be replaced by the\n * local equivalents, using the appropriate `NumberSymbol` for your language.\n *\n * Here are the special characters used in number patterns:\n *\n * | Symbol | Meaning |\n * |--------|---------|\n * | . | Replaced automatically by the character used for the decimal point. |\n * | , | Replaced by the \"grouping\" (thousands) separator. |\n * | 0 | Replaced by a digit (or zero if there aren't enough digits). |\n * | # | Replaced by a digit (or nothing if there aren't enough). |\n * | ¤ | Replaced by a currency symbol, such as $ or USD. |\n * | % | Marks a percent format. The % symbol may change position, but must be retained. |\n * | E | Marks a scientific format. The E symbol may change position, but must be retained. |\n * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |\n *\n * @param locale A locale code for the locale format rules to use.\n * @param type The type of numeric value to be formatted (such as `Decimal` or `Currency`.)\n * @returns The localized format string.\n * @see {@link NumberFormatStyle}\n * @see [CLDR website](http://cldr.unicode.org/translation/number-patterns)\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Let `Intl.NumberFormat` determine the number format instead\n */\nfunction getLocaleNumberFormat(locale, type) {\n  const data = _findLocaleData(locale);\n  return data[_LocaleDataIndex.NumberFormats][type];\n}\n/**\n * Retrieves the symbol used to represent the currency for the main country\n * corresponding to a given locale. For example, '$' for `en-US`.\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The localized symbol character,\n * or `null` if the main country cannot be determined.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Use the `Intl` API to format a currency with from currency code\n */\nfunction getLocaleCurrencySymbol(locale) {\n  const data = _findLocaleData(locale);\n  return data[_LocaleDataIndex.CurrencySymbol] || null;\n}\n/**\n * Retrieves the name of the currency for the main country corresponding\n * to a given locale. For example, 'US Dollar' for `en-US`.\n * @param locale A locale code for the locale format rules to use.\n * @returns The currency name,\n * or `null` if the main country cannot be determined.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Use the `Intl` API to format a currency with from currency code\n */\nfunction getLocaleCurrencyName(locale) {\n  const data = _findLocaleData(locale);\n  return data[_LocaleDataIndex.CurrencyName] || null;\n}\n/**\n * Retrieves the default currency code for the given locale.\n *\n * The default is defined as the first currency which is still in use.\n *\n * @param locale The code of the locale whose currency code we want.\n * @returns The code of the default currency for the given locale.\n *\n * @publicApi\n *\n * @deprecated We recommend you create a map of locale to ISO 4217 currency codes.\n * Time relative currency data is provided by the CLDR project. See https://www.unicode.org/cldr/charts/44/supplemental/detailed_territory_currency_information.html\n */\nfunction getLocaleCurrencyCode(locale) {\n  return _getLocaleCurrencyCode(locale);\n}\n/**\n * Retrieves the currency values for a given locale.\n * @param locale A locale code for the locale format rules to use.\n * @returns The currency values.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n */\nfunction getLocaleCurrencies(locale) {\n  const data = _findLocaleData(locale);\n  return data[_LocaleDataIndex.Currencies];\n}\n/**\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Use `Intl.PluralRules` instead\n */\nconst getLocalePluralCase = _getLocalePluralCase;\nfunction checkFullData(data) {\n  if (!data[_LocaleDataIndex.ExtraData]) {\n    throw new Error(`Missing extra locale data for the locale \"${data[_LocaleDataIndex.LocaleId]}\". Use \"registerLocaleData\" to load new data. See the \"I18n guide\" on angular.io to know more.`);\n  }\n}\n/**\n * Retrieves locale-specific rules used to determine which day period to use\n * when more than one period is defined for a locale.\n *\n * There is a rule for each defined day period. The\n * first rule is applied to the first day period and so on.\n * Fall back to AM/PM when no rules are available.\n *\n * A rule can specify a period as time range, or as a single time value.\n *\n * This functionality is only available when you have loaded the full locale data.\n * See the [\"I18n guide\"](guide/i18n/format-data-locale).\n *\n * @param locale A locale code for the locale format rules to use.\n * @returns The rules for the locale, a single time value or array of *from-time, to-time*,\n * or null if no periods are available.\n *\n * @see {@link getLocaleExtraDayPeriods}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * Let `Intl.DateTimeFormat` determine the day period instead.\n */\nfunction getLocaleExtraDayPeriodRules(locale) {\n  const data = _findLocaleData(locale);\n  checkFullData(data);\n  const rules = data[_LocaleDataIndex.ExtraData][2 /* ɵExtraLocaleDataIndex.ExtraDayPeriodsRules */] || [];\n  return rules.map(rule => {\n    if (typeof rule === 'string') {\n      return extractTime(rule);\n    }\n    return [extractTime(rule[0]), extractTime(rule[1])];\n  });\n}\n/**\n * Retrieves locale-specific day periods, which indicate roughly how a day is broken up\n * in different languages.\n * For example, for `en-US`, periods are morning, noon, afternoon, evening, and midnight.\n *\n * This functionality is only available when you have loaded the full locale data.\n * See the [\"I18n guide\"](guide/i18n/format-data-locale).\n *\n * @param locale A locale code for the locale format rules to use.\n * @param formStyle The required grammatical form.\n * @param width The required character width.\n * @returns The translated day-period strings.\n * @see {@link getLocaleExtraDayPeriodRules}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * To extract a day period use `Intl.DateTimeFormat` with the `dayPeriod` option instead.\n */\nfunction getLocaleExtraDayPeriods(locale, formStyle, width) {\n  const data = _findLocaleData(locale);\n  checkFullData(data);\n  const dayPeriodsData = [data[_LocaleDataIndex.ExtraData][0 /* ɵExtraLocaleDataIndex.ExtraDayPeriodFormats */], data[_LocaleDataIndex.ExtraData][1 /* ɵExtraLocaleDataIndex.ExtraDayPeriodStandalone */]];\n  const dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];\n  return getLastDefinedValue(dayPeriods, width) || [];\n}\n/**\n * Retrieves the writing direction of a specified locale\n * @param locale A locale code for the locale format rules to use.\n * @publicApi\n * @returns 'rtl' or 'ltr'\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * For dates and numbers, let `Intl.DateTimeFormat()` and `Intl.NumberFormat()` determine the writing direction.\n * The `Intl` alternative [`getTextInfo`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/getTextInfo).\n * has only partial support (Chromium M99 & Safari 17).\n * 3rd party alternatives like [`rtl-detect`](https://www.npmjs.com/package/rtl-detect) can work around this issue.\n */\nfunction getLocaleDirection(locale) {\n  const data = _findLocaleData(locale);\n  return data[_LocaleDataIndex.Directionality];\n}\n/**\n * Retrieves the first value that is defined in an array, going backwards from an index position.\n *\n * To avoid repeating the same data (as when the \"format\" and \"standalone\" forms are the same)\n * add the first value to the locale data arrays, and add other values only if they are different.\n *\n * @param data The data array to retrieve from.\n * @param index A 0-based index into the array to start from.\n * @returns The value immediately before the given index position.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n */\nfunction getLastDefinedValue(data, index) {\n  for (let i = index; i > -1; i--) {\n    if (typeof data[i] !== 'undefined') {\n      return data[i];\n    }\n  }\n  throw new Error('Locale data API: locale data undefined');\n}\n/**\n * Extracts the hours and minutes from a string like \"15:45\"\n */\nfunction extractTime(time) {\n  const [h, m] = time.split(':');\n  return {\n    hours: +h,\n    minutes: +m\n  };\n}\n/**\n * Retrieves the currency symbol for a given currency code.\n *\n * For example, for the default `en-US` locale, the code `USD` can\n * be represented by the narrow symbol `$` or the wide symbol `US$`.\n *\n * @param code The currency code.\n * @param format The format, `wide` or `narrow`.\n * @param locale A locale code for the locale format rules to use.\n *\n * @returns The symbol, or the currency code if no symbol is available.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * You can use `Intl.NumberFormat().formatToParts()` to extract the currency symbol.\n * For example: `Intl.NumberFormat('en', {style:'currency', currency: 'USD'}).formatToParts().find(part => part.type === 'currency').value`\n * returns `$` for USD currency code in the `en` locale.\n * Note: `US$` is a currency symbol for the `en-ca` locale but not the `en-us` locale.\n */\nfunction getCurrencySymbol(code, format, locale = 'en') {\n  const currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];\n  const symbolNarrow = currency[1 /* ɵCurrencyIndex.SymbolNarrow */];\n  if (format === 'narrow' && typeof symbolNarrow === 'string') {\n    return symbolNarrow;\n  }\n  return currency[0 /* ɵCurrencyIndex.Symbol */] || code;\n}\n// Most currencies have cents, that's why the default is 2\nconst DEFAULT_NB_OF_CURRENCY_DIGITS = 2;\n/**\n * Reports the number of decimal digits for a given currency.\n * The value depends upon the presence of cents in that particular currency.\n *\n * @param code The currency code.\n * @returns The number of decimal digits, typically 0 or 2.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n *\n * @deprecated Angular recommends relying on the `Intl` API for i18n.\n * This function should not be used anymore. Let `Intl.NumberFormat` determine the number of digits to display for the currency\n */\nfunction getNumberOfCurrencyDigits(code) {\n  let digits;\n  const currency = CURRENCIES_EN[code];\n  if (currency) {\n    digits = currency[2 /* ɵCurrencyIndex.NbOfDigits */];\n  }\n  return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;\n}\nconst ISO8601_DATE_REGEX = /^(\\d{4,})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n//    1        2       3         4          5          6          7          8  9     10      11\nconst NAMED_FORMATS = {};\nconst DATE_FORMATS_SPLIT = /((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\\s\\S]*)/;\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date according to locale rules.\n *\n * @param value The date to format, as a Date, or a number (milliseconds since UTC epoch)\n * or an [ISO date-time string](https://www.w3.org/TR/NOTE-datetime).\n * @param format The date-time components to include. See `DatePipe` for details.\n * @param locale A locale code for the locale format rules to use.\n * @param timezone The time zone. A time zone offset from GMT (such as `'+0430'`).\n * If not specified, uses host system settings.\n *\n * @returns The formatted date string.\n *\n * @see {@link DatePipe}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n */\nfunction formatDate(value, format, locale, timezone) {\n  let date = toDate(value);\n  const namedFormat = getNamedFormat(locale, format);\n  format = namedFormat || format;\n  let parts = [];\n  let match;\n  while (format) {\n    match = DATE_FORMATS_SPLIT.exec(format);\n    if (match) {\n      parts = parts.concat(match.slice(1));\n      const part = parts.pop();\n      if (!part) {\n        break;\n      }\n      format = part;\n    } else {\n      parts.push(format);\n      break;\n    }\n  }\n  let dateTimezoneOffset = date.getTimezoneOffset();\n  if (timezone) {\n    dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n    date = convertTimezoneToLocal(date, timezone);\n  }\n  let text = '';\n  parts.forEach(value => {\n    const dateFormatter = getDateFormatter(value);\n    text += dateFormatter ? dateFormatter(date, locale, dateTimezoneOffset) : value === \"''\" ? \"'\" : value.replace(/(^'|'$)/g, '').replace(/''/g, \"'\");\n  });\n  return text;\n}\n/**\n * Create a new Date object with the given date value, and the time set to midnight.\n *\n * We cannot use `new Date(year, month, date)` because it maps years between 0 and 99 to 1900-1999.\n * See: https://github.com/angular/angular/issues/40377\n *\n * Note that this function returns a Date object whose time is midnight in the current locale's\n * timezone. In the future we might want to change this to be midnight in UTC, but this would be a\n * considerable breaking change.\n */\nfunction createDate(year, month, date) {\n  // The `newDate` is set to midnight (UTC) on January 1st 1970.\n  // - In PST this will be December 31st 1969 at 4pm.\n  // - In GMT this will be January 1st 1970 at 1am.\n  // Note that they even have different years, dates and months!\n  const newDate = new Date(0);\n  // `setFullYear()` allows years like 0001 to be set correctly. This function does not\n  // change the internal time of the date.\n  // Consider calling `setFullYear(2019, 8, 20)` (September 20, 2019).\n  // - In PST this will now be September 20, 2019 at 4pm\n  // - In GMT this will now be September 20, 2019 at 1am\n  newDate.setFullYear(year, month, date);\n  // We want the final date to be at local midnight, so we reset the time.\n  // - In PST this will now be September 20, 2019 at 12am\n  // - In GMT this will now be September 20, 2019 at 12am\n  newDate.setHours(0, 0, 0);\n  return newDate;\n}\nfunction getNamedFormat(locale, format) {\n  const localeId = getLocaleId(locale);\n  NAMED_FORMATS[localeId] ??= {};\n  if (NAMED_FORMATS[localeId][format]) {\n    return NAMED_FORMATS[localeId][format];\n  }\n  let formatValue = '';\n  switch (format) {\n    case 'shortDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Short);\n      break;\n    case 'mediumDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Medium);\n      break;\n    case 'longDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Long);\n      break;\n    case 'fullDate':\n      formatValue = getLocaleDateFormat(locale, FormatWidth.Full);\n      break;\n    case 'shortTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Short);\n      break;\n    case 'mediumTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Medium);\n      break;\n    case 'longTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Long);\n      break;\n    case 'fullTime':\n      formatValue = getLocaleTimeFormat(locale, FormatWidth.Full);\n      break;\n    case 'short':\n      const shortTime = getNamedFormat(locale, 'shortTime');\n      const shortDate = getNamedFormat(locale, 'shortDate');\n      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Short), [shortTime, shortDate]);\n      break;\n    case 'medium':\n      const mediumTime = getNamedFormat(locale, 'mediumTime');\n      const mediumDate = getNamedFormat(locale, 'mediumDate');\n      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Medium), [mediumTime, mediumDate]);\n      break;\n    case 'long':\n      const longTime = getNamedFormat(locale, 'longTime');\n      const longDate = getNamedFormat(locale, 'longDate');\n      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Long), [longTime, longDate]);\n      break;\n    case 'full':\n      const fullTime = getNamedFormat(locale, 'fullTime');\n      const fullDate = getNamedFormat(locale, 'fullDate');\n      formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Full), [fullTime, fullDate]);\n      break;\n  }\n  if (formatValue) {\n    NAMED_FORMATS[localeId][format] = formatValue;\n  }\n  return formatValue;\n}\nfunction formatDateTime(str, opt_values) {\n  if (opt_values) {\n    str = str.replace(/\\{([^}]+)}/g, function (match, key) {\n      return opt_values != null && key in opt_values ? opt_values[key] : match;\n    });\n  }\n  return str;\n}\nfunction padNumber(num, digits, minusSign = '-', trim, negWrap) {\n  let neg = '';\n  if (num < 0 || negWrap && num <= 0) {\n    if (negWrap) {\n      num = -num + 1;\n    } else {\n      num = -num;\n      neg = minusSign;\n    }\n  }\n  let strNum = String(num);\n  while (strNum.length < digits) {\n    strNum = '0' + strNum;\n  }\n  if (trim) {\n    strNum = strNum.slice(strNum.length - digits);\n  }\n  return neg + strNum;\n}\nfunction formatFractionalSeconds(milliseconds, digits) {\n  const strMs = padNumber(milliseconds, 3);\n  return strMs.substring(0, digits);\n}\n/**\n * Returns a date formatter that transforms a date into its locale digit representation\n */\nfunction dateGetter(name, size, offset = 0, trim = false, negWrap = false) {\n  return function (date, locale) {\n    let part = getDatePart(name, date);\n    if (offset > 0 || part > -offset) {\n      part += offset;\n    }\n    if (name === 3 /* DateType.Hours */) {\n      if (part === 0 && offset === -12) {\n        part = 12;\n      }\n    } else if (name === 6 /* DateType.FractionalSeconds */) {\n      return formatFractionalSeconds(part, size);\n    }\n    const localeMinus = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n    return padNumber(part, size, localeMinus, trim, negWrap);\n  };\n}\nfunction getDatePart(part, date) {\n  switch (part) {\n    case 0 /* DateType.FullYear */:\n      return date.getFullYear();\n    case 1 /* DateType.Month */:\n      return date.getMonth();\n    case 2 /* DateType.Date */:\n      return date.getDate();\n    case 3 /* DateType.Hours */:\n      return date.getHours();\n    case 4 /* DateType.Minutes */:\n      return date.getMinutes();\n    case 5 /* DateType.Seconds */:\n      return date.getSeconds();\n    case 6 /* DateType.FractionalSeconds */:\n      return date.getMilliseconds();\n    case 7 /* DateType.Day */:\n      return date.getDay();\n    default:\n      throw new Error(`Unknown DateType value \"${part}\".`);\n  }\n}\n/**\n * Returns a date formatter that transforms a date into its locale string representation\n */\nfunction dateStrGetter(name, width, form = FormStyle.Format, extended = false) {\n  return function (date, locale) {\n    return getDateTranslation(date, locale, name, width, form, extended);\n  };\n}\n/**\n * Returns the locale translation of a date for a given form, type and width\n */\nfunction getDateTranslation(date, locale, name, width, form, extended) {\n  switch (name) {\n    case 2 /* TranslationType.Months */:\n      return getLocaleMonthNames(locale, form, width)[date.getMonth()];\n    case 1 /* TranslationType.Days */:\n      return getLocaleDayNames(locale, form, width)[date.getDay()];\n    case 0 /* TranslationType.DayPeriods */:\n      const currentHours = date.getHours();\n      const currentMinutes = date.getMinutes();\n      if (extended) {\n        const rules = getLocaleExtraDayPeriodRules(locale);\n        const dayPeriods = getLocaleExtraDayPeriods(locale, form, width);\n        const index = rules.findIndex(rule => {\n          if (Array.isArray(rule)) {\n            // morning, afternoon, evening, night\n            const [from, to] = rule;\n            const afterFrom = currentHours >= from.hours && currentMinutes >= from.minutes;\n            const beforeTo = currentHours < to.hours || currentHours === to.hours && currentMinutes < to.minutes;\n            // We must account for normal rules that span a period during the day (e.g. 6am-9am)\n            // where `from` is less (earlier) than `to`. But also rules that span midnight (e.g.\n            // 10pm - 5am) where `from` is greater (later!) than `to`.\n            //\n            // In the first case the current time must be BOTH after `from` AND before `to`\n            // (e.g. 8am is after 6am AND before 10am).\n            //\n            // In the second case the current time must be EITHER after `from` OR before `to`\n            // (e.g. 4am is before 5am but not after 10pm; and 11pm is not before 5am but it is\n            // after 10pm).\n            if (from.hours < to.hours) {\n              if (afterFrom && beforeTo) {\n                return true;\n              }\n            } else if (afterFrom || beforeTo) {\n              return true;\n            }\n          } else {\n            // noon or midnight\n            if (rule.hours === currentHours && rule.minutes === currentMinutes) {\n              return true;\n            }\n          }\n          return false;\n        });\n        if (index !== -1) {\n          return dayPeriods[index];\n        }\n      }\n      // if no rules for the day periods, we use am/pm by default\n      return getLocaleDayPeriods(locale, form, width)[currentHours < 12 ? 0 : 1];\n    case 3 /* TranslationType.Eras */:\n      return getLocaleEraNames(locale, width)[date.getFullYear() <= 0 ? 0 : 1];\n    default:\n      // This default case is not needed by TypeScript compiler, as the switch is exhaustive.\n      // However Closure Compiler does not understand that and reports an error in typed mode.\n      // The `throw new Error` below works around the problem, and the unexpected: never variable\n      // makes sure tsc still checks this code is unreachable.\n      const unexpected = name;\n      throw new Error(`unexpected translation type ${unexpected}`);\n  }\n}\n/**\n * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or\n * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,\n * extended = +04:30)\n */\nfunction timeZoneGetter(width) {\n  return function (date, locale, offset) {\n    const zone = -1 * offset;\n    const minusSign = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n    const hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);\n    switch (width) {\n      case 0 /* ZoneWidth.Short */:\n        return (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + padNumber(Math.abs(zone % 60), 2, minusSign);\n      case 1 /* ZoneWidth.ShortGMT */:\n        return 'GMT' + (zone >= 0 ? '+' : '') + padNumber(hours, 1, minusSign);\n      case 2 /* ZoneWidth.Long */:\n        return 'GMT' + (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + ':' + padNumber(Math.abs(zone % 60), 2, minusSign);\n      case 3 /* ZoneWidth.Extended */:\n        if (offset === 0) {\n          return 'Z';\n        } else {\n          return (zone >= 0 ? '+' : '') + padNumber(hours, 2, minusSign) + ':' + padNumber(Math.abs(zone % 60), 2, minusSign);\n        }\n      default:\n        throw new Error(`Unknown zone width \"${width}\"`);\n    }\n  };\n}\nconst JANUARY = 0;\nconst THURSDAY = 4;\nfunction getFirstThursdayOfYear(year) {\n  const firstDayOfYear = createDate(year, JANUARY, 1).getDay();\n  return createDate(year, 0, 1 + (firstDayOfYear <= THURSDAY ? THURSDAY : THURSDAY + 7) - firstDayOfYear);\n}\n/**\n *  ISO Week starts on day 1 (Monday) and ends with day 0 (Sunday)\n */\nfunction getThursdayThisIsoWeek(datetime) {\n  // getDay returns 0-6 range with sunday as 0.\n  const currentDay = datetime.getDay();\n  // On a Sunday, read the previous Thursday since ISO weeks start on Monday.\n  const deltaToThursday = currentDay === 0 ? -3 : THURSDAY - currentDay;\n  return createDate(datetime.getFullYear(), datetime.getMonth(), datetime.getDate() + deltaToThursday);\n}\nfunction weekGetter(size, monthBased = false) {\n  return function (date, locale) {\n    let result;\n    if (monthBased) {\n      const nbDaysBefore1stDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;\n      const today = date.getDate();\n      result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);\n    } else {\n      const thisThurs = getThursdayThisIsoWeek(date);\n      // Some days of a year are part of next year according to ISO 8601.\n      // Compute the firstThurs from the year of this week's Thursday\n      const firstThurs = getFirstThursdayOfYear(thisThurs.getFullYear());\n      const diff = thisThurs.getTime() - firstThurs.getTime();\n      result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week\n    }\n    return padNumber(result, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n  };\n}\n/**\n * Returns a date formatter that provides the week-numbering year for the input date.\n */\nfunction weekNumberingYearGetter(size, trim = false) {\n  return function (date, locale) {\n    const thisThurs = getThursdayThisIsoWeek(date);\n    const weekNumberingYear = thisThurs.getFullYear();\n    return padNumber(weekNumberingYear, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign), trim);\n  };\n}\nconst DATE_FORMATS = {};\n// Based on CLDR formats:\n// See complete list: http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n// See also explanations: http://cldr.unicode.org/translation/date-time\n// TODO(ocombe): support all missing cldr formats: U, Q, D, F, e, j, J, C, A, v, V, X, x\nfunction getDateFormatter(format) {\n  if (DATE_FORMATS[format]) {\n    return DATE_FORMATS[format];\n  }\n  let formatter;\n  switch (format) {\n    // Era name (AD/BC)\n    case 'G':\n    case 'GG':\n    case 'GGG':\n      formatter = dateStrGetter(3 /* TranslationType.Eras */, TranslationWidth.Abbreviated);\n      break;\n    case 'GGGG':\n      formatter = dateStrGetter(3 /* TranslationType.Eras */, TranslationWidth.Wide);\n      break;\n    case 'GGGGG':\n      formatter = dateStrGetter(3 /* TranslationType.Eras */, TranslationWidth.Narrow);\n      break;\n    // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)\n    case 'y':\n      formatter = dateGetter(0 /* DateType.FullYear */, 1, 0, false, true);\n      break;\n    // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n    case 'yy':\n      formatter = dateGetter(0 /* DateType.FullYear */, 2, 0, true, true);\n      break;\n    // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)\n    case 'yyy':\n      formatter = dateGetter(0 /* DateType.FullYear */, 3, 0, false, true);\n      break;\n    // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)\n    case 'yyyy':\n      formatter = dateGetter(0 /* DateType.FullYear */, 4, 0, false, true);\n      break;\n    // 1 digit representation of the week-numbering year, e.g. (AD 1 => 1, AD 199 => 199)\n    case 'Y':\n      formatter = weekNumberingYearGetter(1);\n      break;\n    // 2 digit representation of the week-numbering year, padded (00-99). (e.g. AD 2001 => 01, AD\n    // 2010 => 10)\n    case 'YY':\n      formatter = weekNumberingYearGetter(2, true);\n      break;\n    // 3 digit representation of the week-numbering year, padded (000-999). (e.g. AD 1 => 001, AD\n    // 2010 => 2010)\n    case 'YYY':\n      formatter = weekNumberingYearGetter(3);\n      break;\n    // 4 digit representation of the week-numbering year (e.g. AD 1 => 0001, AD 2010 => 2010)\n    case 'YYYY':\n      formatter = weekNumberingYearGetter(4);\n      break;\n    // Month of the year (1-12), numeric\n    case 'M':\n    case 'L':\n      formatter = dateGetter(1 /* DateType.Month */, 1, 1);\n      break;\n    case 'MM':\n    case 'LL':\n      formatter = dateGetter(1 /* DateType.Month */, 2, 1);\n      break;\n    // Month of the year (January, ...), string, format\n    case 'MMM':\n      formatter = dateStrGetter(2 /* TranslationType.Months */, TranslationWidth.Abbreviated);\n      break;\n    case 'MMMM':\n      formatter = dateStrGetter(2 /* TranslationType.Months */, TranslationWidth.Wide);\n      break;\n    case 'MMMMM':\n      formatter = dateStrGetter(2 /* TranslationType.Months */, TranslationWidth.Narrow);\n      break;\n    // Month of the year (January, ...), string, standalone\n    case 'LLL':\n      formatter = dateStrGetter(2 /* TranslationType.Months */, TranslationWidth.Abbreviated, FormStyle.Standalone);\n      break;\n    case 'LLLL':\n      formatter = dateStrGetter(2 /* TranslationType.Months */, TranslationWidth.Wide, FormStyle.Standalone);\n      break;\n    case 'LLLLL':\n      formatter = dateStrGetter(2 /* TranslationType.Months */, TranslationWidth.Narrow, FormStyle.Standalone);\n      break;\n    // Week of the year (1, ... 52)\n    case 'w':\n      formatter = weekGetter(1);\n      break;\n    case 'ww':\n      formatter = weekGetter(2);\n      break;\n    // Week of the month (1, ...)\n    case 'W':\n      formatter = weekGetter(1, true);\n      break;\n    // Day of the month (1-31)\n    case 'd':\n      formatter = dateGetter(2 /* DateType.Date */, 1);\n      break;\n    case 'dd':\n      formatter = dateGetter(2 /* DateType.Date */, 2);\n      break;\n    // Day of the Week StandAlone (1, 1, Mon, Monday, M, Mo)\n    case 'c':\n    case 'cc':\n      formatter = dateGetter(7 /* DateType.Day */, 1);\n      break;\n    case 'ccc':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Abbreviated, FormStyle.Standalone);\n      break;\n    case 'cccc':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Wide, FormStyle.Standalone);\n      break;\n    case 'ccccc':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Narrow, FormStyle.Standalone);\n      break;\n    case 'cccccc':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Short, FormStyle.Standalone);\n      break;\n    // Day of the Week\n    case 'E':\n    case 'EE':\n    case 'EEE':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Abbreviated);\n      break;\n    case 'EEEE':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Wide);\n      break;\n    case 'EEEEE':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Narrow);\n      break;\n    case 'EEEEEE':\n      formatter = dateStrGetter(1 /* TranslationType.Days */, TranslationWidth.Short);\n      break;\n    // Generic period of the day (am-pm)\n    case 'a':\n    case 'aa':\n    case 'aaa':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Abbreviated);\n      break;\n    case 'aaaa':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Wide);\n      break;\n    case 'aaaaa':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Narrow);\n      break;\n    // Extended period of the day (midnight, at night, ...), standalone\n    case 'b':\n    case 'bb':\n    case 'bbb':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Abbreviated, FormStyle.Standalone, true);\n      break;\n    case 'bbbb':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Wide, FormStyle.Standalone, true);\n      break;\n    case 'bbbbb':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Narrow, FormStyle.Standalone, true);\n      break;\n    // Extended period of the day (midnight, night, ...), standalone\n    case 'B':\n    case 'BB':\n    case 'BBB':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Abbreviated, FormStyle.Format, true);\n      break;\n    case 'BBBB':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Wide, FormStyle.Format, true);\n      break;\n    case 'BBBBB':\n      formatter = dateStrGetter(0 /* TranslationType.DayPeriods */, TranslationWidth.Narrow, FormStyle.Format, true);\n      break;\n    // Hour in AM/PM, (1-12)\n    case 'h':\n      formatter = dateGetter(3 /* DateType.Hours */, 1, -12);\n      break;\n    case 'hh':\n      formatter = dateGetter(3 /* DateType.Hours */, 2, -12);\n      break;\n    // Hour of the day (0-23)\n    case 'H':\n      formatter = dateGetter(3 /* DateType.Hours */, 1);\n      break;\n    // Hour in day, padded (00-23)\n    case 'HH':\n      formatter = dateGetter(3 /* DateType.Hours */, 2);\n      break;\n    // Minute of the hour (0-59)\n    case 'm':\n      formatter = dateGetter(4 /* DateType.Minutes */, 1);\n      break;\n    case 'mm':\n      formatter = dateGetter(4 /* DateType.Minutes */, 2);\n      break;\n    // Second of the minute (0-59)\n    case 's':\n      formatter = dateGetter(5 /* DateType.Seconds */, 1);\n      break;\n    case 'ss':\n      formatter = dateGetter(5 /* DateType.Seconds */, 2);\n      break;\n    // Fractional second\n    case 'S':\n      formatter = dateGetter(6 /* DateType.FractionalSeconds */, 1);\n      break;\n    case 'SS':\n      formatter = dateGetter(6 /* DateType.FractionalSeconds */, 2);\n      break;\n    case 'SSS':\n      formatter = dateGetter(6 /* DateType.FractionalSeconds */, 3);\n      break;\n    // Timezone ISO8601 short format (-0430)\n    case 'Z':\n    case 'ZZ':\n    case 'ZZZ':\n      formatter = timeZoneGetter(0 /* ZoneWidth.Short */);\n      break;\n    // Timezone ISO8601 extended format (-04:30)\n    case 'ZZZZZ':\n      formatter = timeZoneGetter(3 /* ZoneWidth.Extended */);\n      break;\n    // Timezone GMT short format (GMT+4)\n    case 'O':\n    case 'OO':\n    case 'OOO':\n    // Should be location, but fallback to format O instead because we don't have the data yet\n    case 'z':\n    case 'zz':\n    case 'zzz':\n      formatter = timeZoneGetter(1 /* ZoneWidth.ShortGMT */);\n      break;\n    // Timezone GMT long format (GMT+0430)\n    case 'OOOO':\n    case 'ZZZZ':\n    // Should be location, but fallback to format O instead because we don't have the data yet\n    case 'zzzz':\n      formatter = timeZoneGetter(2 /* ZoneWidth.Long */);\n      break;\n    default:\n      return null;\n  }\n  DATE_FORMATS[format] = formatter;\n  return formatter;\n}\nfunction timezoneToOffset(timezone, fallback) {\n  // Support: IE 11 only, Edge 13-15+\n  // IE/Edge do not \"understand\" colon (`:`) in timezone\n  timezone = timezone.replace(/:/g, '');\n  const requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\n  return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\n}\nfunction addDateMinutes(date, minutes) {\n  date = new Date(date.getTime());\n  date.setMinutes(date.getMinutes() + minutes);\n  return date;\n}\nfunction convertTimezoneToLocal(date, timezone, reverse) {\n  const reverseValue = -1;\n  const dateTimezoneOffset = date.getTimezoneOffset();\n  const timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n  return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));\n}\n/**\n * Converts a value to date.\n *\n * Supported input formats:\n * - `Date`\n * - number: timestamp\n * - string: numeric (e.g. \"1234\"), ISO and date strings in a format supported by\n *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\n *   Note: ISO strings without time return a date without timeoffset.\n *\n * Throws if unable to convert to a date.\n */\nfunction toDate(value) {\n  if (isDate(value)) {\n    return value;\n  }\n  if (typeof value === 'number' && !isNaN(value)) {\n    return new Date(value);\n  }\n  if (typeof value === 'string') {\n    value = value.trim();\n    if (/^(\\d{4}(-\\d{1,2}(-\\d{1,2})?)?)$/.test(value)) {\n      /* For ISO Strings without time the day, month and year must be extracted from the ISO String\n      before Date creation to avoid time offset and errors in the new Date.\n      If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n      date, some browsers (e.g. IE 9) will throw an invalid Date error.\n      If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n      is applied.\n      Note: ISO months are 0 for January, 1 for February, ... */\n      const [y, m = 1, d = 1] = value.split('-').map(val => +val);\n      return createDate(y, m - 1, d);\n    }\n    const parsedNb = parseFloat(value);\n    // any string that only contains numbers, like \"1234\" but not like \"1234hello\"\n    if (!isNaN(value - parsedNb)) {\n      return new Date(parsedNb);\n    }\n    let match;\n    if (match = value.match(ISO8601_DATE_REGEX)) {\n      return isoStringToDate(match);\n    }\n  }\n  const date = new Date(value);\n  if (!isDate(date)) {\n    throw new Error(`Unable to convert \"${value}\" into a date`);\n  }\n  return date;\n}\n/**\n * Converts a date in ISO8601 to a Date.\n * Used instead of `Date.parse` because of browser discrepancies.\n */\nfunction isoStringToDate(match) {\n  const date = new Date(0);\n  let tzHour = 0;\n  let tzMin = 0;\n  // match[8] means that the string contains \"Z\" (UTC) or a timezone like \"+01:00\" or \"+0100\"\n  const dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n  const timeSetter = match[8] ? date.setUTCHours : date.setHours;\n  // if there is a timezone defined like \"+01:00\" or \"+0100\"\n  if (match[9]) {\n    tzHour = Number(match[9] + match[10]);\n    tzMin = Number(match[9] + match[11]);\n  }\n  dateSetter.call(date, Number(match[1]), Number(match[2]) - 1, Number(match[3]));\n  const h = Number(match[4] || 0) - tzHour;\n  const m = Number(match[5] || 0) - tzMin;\n  const s = Number(match[6] || 0);\n  // The ECMAScript specification (https://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.11)\n  // defines that `DateTime` milliseconds should always be rounded down, so that `999.9ms`\n  // becomes `999ms`.\n  const ms = Math.floor(parseFloat('0.' + (match[7] || 0)) * 1000);\n  timeSetter.call(date, h, m, s, ms);\n  return date;\n}\nfunction isDate(value) {\n  return value instanceof Date && !isNaN(value.valueOf());\n}\nconst NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\nconst MAX_DIGITS = 22;\nconst DECIMAL_SEP = '.';\nconst ZERO_CHAR = '0';\nconst PATTERN_SEP = ';';\nconst GROUP_SEP = ',';\nconst DIGIT_CHAR = '#';\nconst CURRENCY_CHAR = '¤';\nconst PERCENT_CHAR = '%';\n/**\n * Transforms a number to a locale string based on a style and a format.\n */\nfunction formatNumberToLocaleString(value, pattern, locale, groupSymbol, decimalSymbol, digitsInfo, isPercent = false) {\n  let formattedText = '';\n  let isZero = false;\n  if (!isFinite(value)) {\n    formattedText = getLocaleNumberSymbol(locale, NumberSymbol.Infinity);\n  } else {\n    let parsedNumber = parseNumber(value);\n    if (isPercent) {\n      parsedNumber = toPercent(parsedNumber);\n    }\n    let minInt = pattern.minInt;\n    let minFraction = pattern.minFrac;\n    let maxFraction = pattern.maxFrac;\n    if (digitsInfo) {\n      const parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\n      if (parts === null) {\n        throw new Error(`${digitsInfo} is not a valid digit info`);\n      }\n      const minIntPart = parts[1];\n      const minFractionPart = parts[3];\n      const maxFractionPart = parts[5];\n      if (minIntPart != null) {\n        minInt = parseIntAutoRadix(minIntPart);\n      }\n      if (minFractionPart != null) {\n        minFraction = parseIntAutoRadix(minFractionPart);\n      }\n      if (maxFractionPart != null) {\n        maxFraction = parseIntAutoRadix(maxFractionPart);\n      } else if (minFractionPart != null && minFraction > maxFraction) {\n        maxFraction = minFraction;\n      }\n    }\n    roundNumber(parsedNumber, minFraction, maxFraction);\n    let digits = parsedNumber.digits;\n    let integerLen = parsedNumber.integerLen;\n    const exponent = parsedNumber.exponent;\n    let decimals = [];\n    isZero = digits.every(d => !d);\n    // pad zeros for small numbers\n    for (; integerLen < minInt; integerLen++) {\n      digits.unshift(0);\n    }\n    // pad zeros for small numbers\n    for (; integerLen < 0; integerLen++) {\n      digits.unshift(0);\n    }\n    // extract decimals digits\n    if (integerLen > 0) {\n      decimals = digits.splice(integerLen, digits.length);\n    } else {\n      decimals = digits;\n      digits = [0];\n    }\n    // format the integer digits with grouping separators\n    const groups = [];\n    if (digits.length >= pattern.lgSize) {\n      groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));\n    }\n    while (digits.length > pattern.gSize) {\n      groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));\n    }\n    if (digits.length) {\n      groups.unshift(digits.join(''));\n    }\n    formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol));\n    // append the decimal digits\n    if (decimals.length) {\n      formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');\n    }\n    if (exponent) {\n      formattedText += getLocaleNumberSymbol(locale, NumberSymbol.Exponential) + '+' + exponent;\n    }\n  }\n  if (value < 0 && !isZero) {\n    formattedText = pattern.negPre + formattedText + pattern.negSuf;\n  } else {\n    formattedText = pattern.posPre + formattedText + pattern.posSuf;\n  }\n  return formattedText;\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as currency using locale rules.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param currency A string containing the currency symbol or its name,\n * such as \"$\" or \"Canadian Dollar\". Used in output string, but does not affect the operation\n * of the function.\n * @param currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)\n * currency code, such as `USD` for the US dollar and `EUR` for the euro.\n * Used to determine the number of digits in the decimal part.\n * @param digitsInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted currency value.\n *\n * @see {@link formatNumber}\n * @see {@link DecimalPipe}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n */\nfunction formatCurrency(value, locale, currency, currencyCode, digitsInfo) {\n  const format = getLocaleNumberFormat(locale, NumberFormatStyle.Currency);\n  const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n  pattern.minFrac = getNumberOfCurrencyDigits(currencyCode);\n  pattern.maxFrac = pattern.minFrac;\n  const res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.CurrencyGroup, NumberSymbol.CurrencyDecimal, digitsInfo);\n  return res.replace(CURRENCY_CHAR, currency)\n  // if we have 2 time the currency character, the second one is ignored\n  .replace(CURRENCY_CHAR, '')\n  // If there is a spacing between currency character and the value and\n  // the currency character is suppressed by passing an empty string, the\n  // spacing character would remain as part of the string. Then we\n  // should remove it.\n  .trim();\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as a percentage according to locale rules.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param digitsInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted percentage value.\n *\n * @see {@link formatNumber}\n * @see {@link DecimalPipe}\n * @see [Internationalization (i18n) Guide](guide/i18n)\n * @publicApi\n *\n */\nfunction formatPercent(value, locale, digitsInfo) {\n  const format = getLocaleNumberFormat(locale, NumberFormatStyle.Percent);\n  const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n  const res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo, true);\n  return res.replace(new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, NumberSymbol.PercentSign));\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a number as text, with group sizing, separator, and other\n * parameters based on the locale.\n *\n * @param value The number to format.\n * @param locale A locale code for the locale format rules to use.\n * @param digitsInfo Decimal representation options, specified by a string in the following format:\n * `{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}`. See `DecimalPipe` for more details.\n *\n * @returns The formatted text string.\n * @see [Internationalization (i18n) Guide](guide/i18n)\n *\n * @publicApi\n */\nfunction formatNumber(value, locale, digitsInfo) {\n  const format = getLocaleNumberFormat(locale, NumberFormatStyle.Decimal);\n  const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n  return formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo);\n}\nfunction parseNumberFormat(format, minusSign = '-') {\n  const p = {\n    minInt: 1,\n    minFrac: 0,\n    maxFrac: 0,\n    posPre: '',\n    posSuf: '',\n    negPre: '',\n    negSuf: '',\n    gSize: 0,\n    lgSize: 0\n  };\n  const patternParts = format.split(PATTERN_SEP);\n  const positive = patternParts[0];\n  const negative = patternParts[1];\n  const positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ? positive.split(DECIMAL_SEP) : [positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1), positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)],\n    integer = positiveParts[0],\n    fraction = positiveParts[1] || '';\n  p.posPre = integer.substring(0, integer.indexOf(DIGIT_CHAR));\n  for (let i = 0; i < fraction.length; i++) {\n    const ch = fraction.charAt(i);\n    if (ch === ZERO_CHAR) {\n      p.minFrac = p.maxFrac = i + 1;\n    } else if (ch === DIGIT_CHAR) {\n      p.maxFrac = i + 1;\n    } else {\n      p.posSuf += ch;\n    }\n  }\n  const groups = integer.split(GROUP_SEP);\n  p.gSize = groups[1] ? groups[1].length : 0;\n  p.lgSize = groups[2] || groups[1] ? (groups[2] || groups[1]).length : 0;\n  if (negative) {\n    const trunkLen = positive.length - p.posPre.length - p.posSuf.length,\n      pos = negative.indexOf(DIGIT_CHAR);\n    p.negPre = negative.substring(0, pos).replace(/'/g, '');\n    p.negSuf = negative.slice(pos + trunkLen).replace(/'/g, '');\n  } else {\n    p.negPre = minusSign + p.posPre;\n    p.negSuf = p.posSuf;\n  }\n  return p;\n}\n// Transforms a parsed number into a percentage by multiplying it by 100\nfunction toPercent(parsedNumber) {\n  // if the number is 0, don't do anything\n  if (parsedNumber.digits[0] === 0) {\n    return parsedNumber;\n  }\n  // Getting the current number of decimals\n  const fractionLen = parsedNumber.digits.length - parsedNumber.integerLen;\n  if (parsedNumber.exponent) {\n    parsedNumber.exponent += 2;\n  } else {\n    if (fractionLen === 0) {\n      parsedNumber.digits.push(0, 0);\n    } else if (fractionLen === 1) {\n      parsedNumber.digits.push(0);\n    }\n    parsedNumber.integerLen += 2;\n  }\n  return parsedNumber;\n}\n/**\n * Parses a number.\n * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/\n */\nfunction parseNumber(num) {\n  let numStr = Math.abs(num) + '';\n  let exponent = 0,\n    digits,\n    integerLen;\n  let i, j, zeros;\n  // Decimal point?\n  if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {\n    numStr = numStr.replace(DECIMAL_SEP, '');\n  }\n  // Exponential form?\n  if ((i = numStr.search(/e/i)) > 0) {\n    // Work out the exponent.\n    if (integerLen < 0) integerLen = i;\n    integerLen += +numStr.slice(i + 1);\n    numStr = numStr.substring(0, i);\n  } else if (integerLen < 0) {\n    // There was no decimal point or exponent so it is an integer.\n    integerLen = numStr.length;\n  }\n  // Count the number of leading zeros.\n  for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) {\n    /* empty */\n  }\n  if (i === (zeros = numStr.length)) {\n    // The digits are all zero.\n    digits = [0];\n    integerLen = 1;\n  } else {\n    // Count the number of trailing zeros\n    zeros--;\n    while (numStr.charAt(zeros) === ZERO_CHAR) zeros--;\n    // Trailing zeros are insignificant so ignore them\n    integerLen -= i;\n    digits = [];\n    // Convert string to array of digits without leading/trailing zeros.\n    for (j = 0; i <= zeros; i++, j++) {\n      digits[j] = Number(numStr.charAt(i));\n    }\n  }\n  // If the number overflows the maximum allowed digits then use an exponent.\n  if (integerLen > MAX_DIGITS) {\n    digits = digits.splice(0, MAX_DIGITS - 1);\n    exponent = integerLen - 1;\n    integerLen = 1;\n  }\n  return {\n    digits,\n    exponent,\n    integerLen\n  };\n}\n/**\n * Round the parsed number to the specified number of decimal places\n * This function changes the parsedNumber in-place\n */\nfunction roundNumber(parsedNumber, minFrac, maxFrac) {\n  if (minFrac > maxFrac) {\n    throw new Error(`The minimum number of digits after fraction (${minFrac}) is higher than the maximum (${maxFrac}).`);\n  }\n  let digits = parsedNumber.digits;\n  let fractionLen = digits.length - parsedNumber.integerLen;\n  const fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac);\n  // The index of the digit to where rounding is to occur\n  let roundAt = fractionSize + parsedNumber.integerLen;\n  let digit = digits[roundAt];\n  if (roundAt > 0) {\n    // Drop fractional digits beyond `roundAt`\n    digits.splice(Math.max(parsedNumber.integerLen, roundAt));\n    // Set non-fractional digits beyond `roundAt` to 0\n    for (let j = roundAt; j < digits.length; j++) {\n      digits[j] = 0;\n    }\n  } else {\n    // We rounded to zero so reset the parsedNumber\n    fractionLen = Math.max(0, fractionLen);\n    parsedNumber.integerLen = 1;\n    digits.length = Math.max(1, roundAt = fractionSize + 1);\n    digits[0] = 0;\n    for (let i = 1; i < roundAt; i++) digits[i] = 0;\n  }\n  if (digit >= 5) {\n    if (roundAt - 1 < 0) {\n      for (let k = 0; k > roundAt; k--) {\n        digits.unshift(0);\n        parsedNumber.integerLen++;\n      }\n      digits.unshift(1);\n      parsedNumber.integerLen++;\n    } else {\n      digits[roundAt - 1]++;\n    }\n  }\n  // Pad out with zeros to get the required fraction length\n  for (; fractionLen < Math.max(0, fractionSize); fractionLen++) digits.push(0);\n  let dropTrailingZeros = fractionSize !== 0;\n  // Minimal length = nb of decimals required + current nb of integers\n  // Any number besides that is optional and can be removed if it's a trailing 0\n  const minLen = minFrac + parsedNumber.integerLen;\n  // Do any carrying, e.g. a digit was rounded up to 10\n  const carry = digits.reduceRight(function (carry, d, i, digits) {\n    d = d + carry;\n    digits[i] = d < 10 ? d : d - 10; // d % 10\n    if (dropTrailingZeros) {\n      // Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)\n      if (digits[i] === 0 && i >= minLen) {\n        digits.pop();\n      } else {\n        dropTrailingZeros = false;\n      }\n    }\n    return d >= 10 ? 1 : 0; // Math.floor(d / 10);\n  }, 0);\n  if (carry) {\n    digits.unshift(carry);\n    parsedNumber.integerLen++;\n  }\n}\nfunction parseIntAutoRadix(text) {\n  const result = parseInt(text);\n  if (isNaN(result)) {\n    throw new Error('Invalid integer literal when parsing ' + text);\n  }\n  return result;\n}\n\n/**\n * @publicApi\n */\nlet NgLocalization = /*#__PURE__*/(() => {\n  class NgLocalization {\n    static ɵfac = function NgLocalization_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgLocalization)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgLocalization,\n      factory: function NgLocalization_Factory(__ngFactoryType__) {\n        let __ngConditionalFactory__ = null;\n        if (__ngFactoryType__) {\n          __ngConditionalFactory__ = new __ngFactoryType__();\n        } else {\n          __ngConditionalFactory__ = (locale => new NgLocaleLocalization(locale))(i0.ɵɵinject(LOCALE_ID));\n        }\n        return __ngConditionalFactory__;\n      },\n      providedIn: 'root'\n    });\n  }\n  return NgLocalization;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n */\nfunction getPluralCategory(value, cases, ngLocalization, locale) {\n  let key = `=${value}`;\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n  key = ngLocalization.getPluralCategory(value, locale);\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n  if (cases.indexOf('other') > -1) {\n    return 'other';\n  }\n  throw new Error(`No plural message found for value \"${value}\"`);\n}\n/**\n * Returns the plural case based on the locale\n *\n * @publicApi\n */\nlet NgLocaleLocalization = /*#__PURE__*/(() => {\n  class NgLocaleLocalization extends NgLocalization {\n    locale;\n    constructor(locale) {\n      super();\n      this.locale = locale;\n    }\n    getPluralCategory(value, locale) {\n      const plural = getLocalePluralCase(locale || this.locale)(value);\n      switch (plural) {\n        case Plural.Zero:\n          return 'zero';\n        case Plural.One:\n          return 'one';\n        case Plural.Two:\n          return 'two';\n        case Plural.Few:\n          return 'few';\n        case Plural.Many:\n          return 'many';\n        default:\n          return 'other';\n      }\n    }\n    static ɵfac = function NgLocaleLocalization_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgLocaleLocalization)(i0.ɵɵinject(LOCALE_ID));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgLocaleLocalization,\n      factory: NgLocaleLocalization.ɵfac\n    });\n  }\n  return NgLocaleLocalization;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst WS_REGEXP = /\\s+/;\nconst EMPTY_ARRAY = [];\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```html\n * <some-element [ngClass]=\"stringExp|arrayExp|objExp|Set\">...</some-element>\n *\n * <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n *\n * For more simple use cases you can use the [class bindings](/guide/templates/binding#css-class-and-style-property-bindings) directly.\n * It doesn't require importing a directive.\n *\n * ```html\n * <some-element [class]=\"'first second'\">...</some-element>\n *\n * <some-element [class.expanded]=\"isExpanded\">...</some-element>\n *\n * <some-element [class]=\"['first', 'second']\">...</some-element>\n *\n * <some-element [class]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n * ```\n * @description\n *\n * Adds and removes CSS classes on an HTML element.\n *\n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n *\n *\n * @see [Class bindings](/guide/templates/binding#css-class-and-style-property-bindings)\n *\n * @publicApi\n */\nlet NgClass = /*#__PURE__*/(() => {\n  class NgClass {\n    _ngEl;\n    _renderer;\n    initialClasses = EMPTY_ARRAY;\n    rawClass;\n    stateMap = new Map();\n    constructor(_ngEl, _renderer) {\n      this._ngEl = _ngEl;\n      this._renderer = _renderer;\n    }\n    set klass(value) {\n      this.initialClasses = value != null ? value.trim().split(WS_REGEXP) : EMPTY_ARRAY;\n    }\n    set ngClass(value) {\n      this.rawClass = typeof value === 'string' ? value.trim().split(WS_REGEXP) : value;\n    }\n    /*\n    The NgClass directive uses the custom change detection algorithm for its inputs. The custom\n    algorithm is necessary since inputs are represented as complex object or arrays that need to be\n    deeply-compared.\n       This algorithm is perf-sensitive since NgClass is used very frequently and its poor performance\n    might negatively impact runtime performance of the entire change detection cycle. The design of\n    this algorithm is making sure that:\n    - there is no unnecessary DOM manipulation (CSS classes are added / removed from the DOM only when\n    needed), even if references to bound objects change;\n    - there is no memory allocation if nothing changes (even relatively modest memory allocation\n    during the change detection cycle can result in GC pauses for some of the CD cycles).\n       The algorithm works by iterating over the set of bound classes, staring with [class] binding and\n    then going over [ngClass] binding. For each CSS class name:\n    - check if it was seen before (this information is tracked in the state map) and if its value\n    changed;\n    - mark it as \"touched\" - names that are not marked are not present in the latest set of binding\n    and we can remove such class name from the internal data structures;\n       After iteration over all the CSS class names we've got data structure with all the information\n    necessary to synchronize changes to the DOM - it is enough to iterate over the state map, flush\n    changes to the DOM and reset internal data structures so those are ready for the next change\n    detection cycle.\n     */\n    ngDoCheck() {\n      // classes from the [class] binding\n      for (const klass of this.initialClasses) {\n        this._updateState(klass, true);\n      }\n      // classes from the [ngClass] binding\n      const rawClass = this.rawClass;\n      if (Array.isArray(rawClass) || rawClass instanceof Set) {\n        for (const klass of rawClass) {\n          this._updateState(klass, true);\n        }\n      } else if (rawClass != null) {\n        for (const klass of Object.keys(rawClass)) {\n          this._updateState(klass, Boolean(rawClass[klass]));\n        }\n      }\n      this._applyStateDiff();\n    }\n    _updateState(klass, nextEnabled) {\n      const state = this.stateMap.get(klass);\n      if (state !== undefined) {\n        if (state.enabled !== nextEnabled) {\n          state.changed = true;\n          state.enabled = nextEnabled;\n        }\n        state.touched = true;\n      } else {\n        this.stateMap.set(klass, {\n          enabled: nextEnabled,\n          changed: true,\n          touched: true\n        });\n      }\n    }\n    _applyStateDiff() {\n      for (const stateEntry of this.stateMap) {\n        const klass = stateEntry[0];\n        const state = stateEntry[1];\n        if (state.changed) {\n          this._toggleClass(klass, state.enabled);\n          state.changed = false;\n        } else if (!state.touched) {\n          // A class that was previously active got removed from the new collection of classes -\n          // remove from the DOM as well.\n          if (state.enabled) {\n            this._toggleClass(klass, false);\n          }\n          this.stateMap.delete(klass);\n        }\n        state.touched = false;\n      }\n    }\n    _toggleClass(klass, enabled) {\n      if (ngDevMode) {\n        if (typeof klass !== 'string') {\n          throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${_stringify(klass)}`);\n        }\n      }\n      klass = klass.trim();\n      if (klass.length > 0) {\n        klass.split(WS_REGEXP).forEach(klass => {\n          if (enabled) {\n            this._renderer.addClass(this._ngEl.nativeElement, klass);\n          } else {\n            this._renderer.removeClass(this._ngEl.nativeElement, klass);\n          }\n        });\n      }\n    }\n    static ɵfac = function NgClass_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgClass)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgClass,\n      selectors: [[\"\", \"ngClass\", \"\"]],\n      inputs: {\n        klass: [0, \"class\", \"klass\"],\n        ngClass: \"ngClass\"\n      }\n    });\n  }\n  return NgClass;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Instantiates a {@link /api/core/Component Component} type and inserts its Host View into the current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n *\n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will be destroyed.\n *\n * @usageNotes\n *\n * ### Fine tune control\n *\n * You can control the component creation process by using the following optional attributes:\n *\n * * `ngComponentOutletInputs`: Optional component inputs object, which will be bind to the\n * component.\n *\n * * `ngComponentOutletInjector`: Optional custom {@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n *\n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if it exists.\n *\n * * `ngComponentOutletNgModule`: Optional NgModule class reference to allow loading another\n * module dynamically, then loading a component from that module.\n *\n * * `ngComponentOutletNgModuleFactory`: Deprecated config option that allows providing optional\n * NgModule factory to allow loading another module dynamically, then loading a component from that\n * module. Use `ngComponentOutletNgModule` instead.\n *\n * ### Syntax\n *\n * Simple\n * ```html\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n *\n * With inputs\n * ```html\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   inputs: inputsExpression;\">\n * </ng-container>\n * ```\n *\n * Customized injector/content\n * ```html\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n *\n * Customized NgModule reference\n * ```html\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModule: ngModuleClass;\">\n * </ng-container>\n * ```\n *\n * ### A simple example\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n *\n * A more complete example with additional options:\n *\n * {@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n *\n * @publicApi\n * @ngModule CommonModule\n */\nlet NgComponentOutlet = /*#__PURE__*/(() => {\n  class NgComponentOutlet {\n    _viewContainerRef;\n    // TODO(crisbeto): this should be `Type<T>`, but doing so broke a few\n    // targets in a TGP so we need to do it in a major version.\n    /** Component that should be rendered in the outlet. */\n    ngComponentOutlet = null;\n    ngComponentOutletInputs;\n    ngComponentOutletInjector;\n    ngComponentOutletContent;\n    ngComponentOutletNgModule;\n    /**\n     * @deprecated This input is deprecated, use `ngComponentOutletNgModule` instead.\n     */\n    ngComponentOutletNgModuleFactory;\n    _componentRef;\n    _moduleRef;\n    /**\n     * A helper data structure that allows us to track inputs that were part of the\n     * ngComponentOutletInputs expression. Tracking inputs is necessary for proper removal of ones\n     * that are no longer referenced.\n     */\n    _inputsUsed = new Map();\n    /**\n     * Gets the instance of the currently-rendered component.\n     * Will be null if no component has been rendered.\n     */\n    get componentInstance() {\n      return this._componentRef?.instance ?? null;\n    }\n    constructor(_viewContainerRef) {\n      this._viewContainerRef = _viewContainerRef;\n    }\n    _needToReCreateNgModuleInstance(changes) {\n      // Note: square brackets property accessor is safe for Closure compiler optimizations (the\n      // `changes` argument of the `ngOnChanges` lifecycle hook retains the names of the fields that\n      // were changed).\n      return changes['ngComponentOutletNgModule'] !== undefined || changes['ngComponentOutletNgModuleFactory'] !== undefined;\n    }\n    _needToReCreateComponentInstance(changes) {\n      // Note: square brackets property accessor is safe for Closure compiler optimizations (the\n      // `changes` argument of the `ngOnChanges` lifecycle hook retains the names of the fields that\n      // were changed).\n      return changes['ngComponentOutlet'] !== undefined || changes['ngComponentOutletContent'] !== undefined || changes['ngComponentOutletInjector'] !== undefined || this._needToReCreateNgModuleInstance(changes);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (this._needToReCreateComponentInstance(changes)) {\n        this._viewContainerRef.clear();\n        this._inputsUsed.clear();\n        this._componentRef = undefined;\n        if (this.ngComponentOutlet) {\n          const injector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n          if (this._needToReCreateNgModuleInstance(changes)) {\n            this._moduleRef?.destroy();\n            if (this.ngComponentOutletNgModule) {\n              this._moduleRef = createNgModule(this.ngComponentOutletNgModule, getParentInjector(injector));\n            } else if (this.ngComponentOutletNgModuleFactory) {\n              this._moduleRef = this.ngComponentOutletNgModuleFactory.create(getParentInjector(injector));\n            } else {\n              this._moduleRef = undefined;\n            }\n          }\n          this._componentRef = this._viewContainerRef.createComponent(this.ngComponentOutlet, {\n            injector,\n            ngModuleRef: this._moduleRef,\n            projectableNodes: this.ngComponentOutletContent\n          });\n        }\n      }\n    }\n    /** @nodoc */\n    ngDoCheck() {\n      if (this._componentRef) {\n        if (this.ngComponentOutletInputs) {\n          for (const inputName of Object.keys(this.ngComponentOutletInputs)) {\n            this._inputsUsed.set(inputName, true);\n          }\n        }\n        this._applyInputStateDiff(this._componentRef);\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this._moduleRef?.destroy();\n    }\n    _applyInputStateDiff(componentRef) {\n      for (const [inputName, touched] of this._inputsUsed) {\n        if (!touched) {\n          // The input that was previously active no longer exists and needs to be set to undefined.\n          componentRef.setInput(inputName, undefined);\n          this._inputsUsed.delete(inputName);\n        } else {\n          // Since touched is true, it can be asserted that the inputs object is not empty.\n          componentRef.setInput(inputName, this.ngComponentOutletInputs[inputName]);\n          this._inputsUsed.set(inputName, false);\n        }\n      }\n    }\n    static ɵfac = function NgComponentOutlet_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgComponentOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgComponentOutlet,\n      selectors: [[\"\", \"ngComponentOutlet\", \"\"]],\n      inputs: {\n        ngComponentOutlet: \"ngComponentOutlet\",\n        ngComponentOutletInputs: \"ngComponentOutletInputs\",\n        ngComponentOutletInjector: \"ngComponentOutletInjector\",\n        ngComponentOutletContent: \"ngComponentOutletContent\",\n        ngComponentOutletNgModule: \"ngComponentOutletNgModule\",\n        ngComponentOutletNgModuleFactory: \"ngComponentOutletNgModuleFactory\"\n      },\n      exportAs: [\"ngComponentOutlet\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return NgComponentOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n// Helper function that returns an Injector instance of a parent NgModule.\nfunction getParentInjector(injector) {\n  const parentNgModule = injector.get(NgModuleRef);\n  return parentNgModule.injector;\n}\n\n/**\n * @publicApi\n */\nclass NgForOfContext {\n  $implicit;\n  ngForOf;\n  index;\n  count;\n  constructor(/** Reference to the current item from the collection. */\n  $implicit,\n  /**\n   * The value of the iterable expression. Useful when the expression is\n   * more complex then a property access, for example when using the async pipe\n   * (`userStreams | async`).\n   */\n  ngForOf, /** Returns an index of the current item in the collection. */\n  index, /** Returns total amount of items in the collection. */\n  count) {\n    this.$implicit = $implicit;\n    this.ngForOf = ngForOf;\n    this.index = index;\n    this.count = count;\n  }\n  // Indicates whether this is the first item in the collection.\n  get first() {\n    return this.index === 0;\n  }\n  // Indicates whether this is the last item in the collection.\n  get last() {\n    return this.index === this.count - 1;\n  }\n  // Indicates whether an index of this item in the collection is even.\n  get even() {\n    return this.index % 2 === 0;\n  }\n  // Indicates whether an index of this item in the collection is odd.\n  get odd() {\n    return !this.even;\n  }\n}\n/**\n * A [structural directive](guide/directives/structural-directives) that renders\n * a template for each item in a collection.\n * The directive is placed on an element, which becomes the parent\n * of the cloned templates.\n *\n * The `ngForOf` directive is generally used in the\n * [shorthand form](guide/directives/structural-directives#asterisk) `*ngFor`.\n * In this form, the template to be rendered for each iteration is the content\n * of an anchor element containing the directive.\n *\n * The following example shows the shorthand syntax with some options,\n * contained in an `<li>` element.\n *\n * ```html\n * <li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>\n * ```\n *\n * The shorthand form expands into a long form that uses the `ngForOf` selector\n * on an `<ng-template>` element.\n * The content of the `<ng-template>` element is the `<li>` element that held the\n * short-form directive.\n *\n * Here is the expanded version of the short-form example.\n *\n * ```html\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n *\n * Angular automatically expands the shorthand syntax as it compiles the template.\n * The context for each embedded view is logically merged to the current component\n * context according to its lexical position.\n *\n * When using the shorthand syntax, Angular allows only [one structural directive\n * on an element](guide/directives/structural-directives#one-per-element).\n * If you want to iterate conditionally, for example,\n * put the `*ngIf` on a container element that wraps the `*ngFor` element.\n * For further discussion, see\n * [Structural Directives](guide/directives/structural-directives#one-per-element).\n *\n * @usageNotes\n *\n * ### Local variables\n *\n * `NgForOf` provides exported values that can be aliased to local variables.\n * For example:\n *\n *  ```html\n * <li *ngFor=\"let user of users; index as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n *\n * The following exported values can be aliased to local variables:\n *\n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `count: number`: The length of the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n *\n * ### Change propagation\n *\n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n *\n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n *\n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls that are present, such as `<input>` elements that accept user input. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n * For more on animations, see [Transitions and Triggers](guide/animations/transition-and-triggers).\n *\n * The identities of elements in the iterator can change while the data does not.\n * This can happen, for example, if the iterator is produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response produces objects with\n * different identities, and Angular must tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted).\n *\n * To avoid this expensive operation, you can customize the default tracking algorithm.\n * by supplying the `trackBy` option to `NgForOf`.\n * `trackBy` takes a function that has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n *\n * @see [Structural Directives](guide/directives/structural-directives)\n * @ngModule CommonModule\n * @publicApi\n */\nlet NgForOf = /*#__PURE__*/(() => {\n  class NgForOf {\n    _viewContainer;\n    _template;\n    _differs;\n    /**\n     * The value of the iterable expression, which can be used as a\n     * [template input variable](guide/directives/structural-directives#shorthand).\n     */\n    set ngForOf(ngForOf) {\n      this._ngForOf = ngForOf;\n      this._ngForOfDirty = true;\n    }\n    /**\n     * Specifies a custom `TrackByFunction` to compute the identity of items in an iterable.\n     *\n     * If a custom `TrackByFunction` is not provided, `NgForOf` will use the item's [object\n     * identity](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is)\n     * as the key.\n     *\n     * `NgForOf` uses the computed key to associate items in an iterable with DOM elements\n     * it produces for these items.\n     *\n     * A custom `TrackByFunction` is useful to provide good user experience in cases when items in an\n     * iterable rendered using `NgForOf` have a natural identifier (for example, custom ID or a\n     * primary key), and this iterable could be updated with new object instances that still\n     * represent the same underlying entity (for example, when data is re-fetched from the server,\n     * and the iterable is recreated and re-rendered, but most of the data is still the same).\n     *\n     * @see {@link TrackByFunction}\n     */\n    set ngForTrackBy(fn) {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n        console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}. ` + `See https://angular.io/api/common/NgForOf#change-propagation for more information.`);\n      }\n      this._trackByFn = fn;\n    }\n    get ngForTrackBy() {\n      return this._trackByFn;\n    }\n    _ngForOf = null;\n    _ngForOfDirty = true;\n    _differ = null;\n    // waiting for microsoft/typescript#43662 to allow the return type `TrackByFunction|undefined` for\n    // the getter\n    _trackByFn;\n    constructor(_viewContainer, _template, _differs) {\n      this._viewContainer = _viewContainer;\n      this._template = _template;\n      this._differs = _differs;\n    }\n    /**\n     * A reference to the template that is stamped out for each item in the iterable.\n     * @see [template reference variable](guide/templates/variables#template-reference-variables)\n     */\n    set ngForTemplate(value) {\n      // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n      // The current type is too restrictive; a template that just uses index, for example,\n      // should be acceptable.\n      if (value) {\n        this._template = value;\n      }\n    }\n    /**\n     * Applies the changes when needed.\n     * @nodoc\n     */\n    ngDoCheck() {\n      if (this._ngForOfDirty) {\n        this._ngForOfDirty = false;\n        // React on ngForOf changes only once all inputs have been initialized\n        const value = this._ngForOf;\n        if (!this._differ && value) {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            try {\n              // CAUTION: this logic is duplicated for production mode below, as the try-catch\n              // is only present in development builds.\n              this._differ = this._differs.find(value).create(this.ngForTrackBy);\n            } catch {\n              let errorMessage = `Cannot find a differ supporting object '${value}' of type '` + `${getTypeName(value)}'. NgFor only supports binding to Iterables, such as Arrays.`;\n              if (typeof value === 'object') {\n                errorMessage += ' Did you mean to use the keyvalue pipe?';\n              }\n              throw new _RuntimeError(-2200 /* RuntimeErrorCode.NG_FOR_MISSING_DIFFER */, errorMessage);\n            }\n          } else {\n            // CAUTION: this logic is duplicated for development mode above, as the try-catch\n            // is only present in development builds.\n            this._differ = this._differs.find(value).create(this.ngForTrackBy);\n          }\n        }\n      }\n      if (this._differ) {\n        const changes = this._differ.diff(this._ngForOf);\n        if (changes) this._applyChanges(changes);\n      }\n    }\n    _applyChanges(changes) {\n      const viewContainer = this._viewContainer;\n      changes.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n        if (item.previousIndex == null) {\n          // NgForOf is never \"null\" or \"undefined\" here because the differ detected\n          // that a new item needs to be inserted from the iterable. This implies that\n          // there is an iterable value for \"_ngForOf\".\n          viewContainer.createEmbeddedView(this._template, new NgForOfContext(item.item, this._ngForOf, -1, -1), currentIndex === null ? undefined : currentIndex);\n        } else if (currentIndex == null) {\n          viewContainer.remove(adjustedPreviousIndex === null ? undefined : adjustedPreviousIndex);\n        } else if (adjustedPreviousIndex !== null) {\n          const view = viewContainer.get(adjustedPreviousIndex);\n          viewContainer.move(view, currentIndex);\n          applyViewChange(view, item);\n        }\n      });\n      for (let i = 0, ilen = viewContainer.length; i < ilen; i++) {\n        const viewRef = viewContainer.get(i);\n        const context = viewRef.context;\n        context.index = i;\n        context.count = ilen;\n        context.ngForOf = this._ngForOf;\n      }\n      changes.forEachIdentityChange(record => {\n        const viewRef = viewContainer.get(record.currentIndex);\n        applyViewChange(viewRef, record);\n      });\n    }\n    /**\n     * Asserts the correct type of the context for the template that `NgForOf` will render.\n     *\n     * The presence of this method is a signal to the Ivy template type-check compiler that the\n     * `NgForOf` structural directive renders its template with a specific context type.\n     */\n    static ngTemplateContextGuard(dir, ctx) {\n      return true;\n    }\n    static ɵfac = function NgForOf_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgForOf)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.IterableDiffers));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgForOf,\n      selectors: [[\"\", \"ngFor\", \"\", \"ngForOf\", \"\"]],\n      inputs: {\n        ngForOf: \"ngForOf\",\n        ngForTrackBy: \"ngForTrackBy\",\n        ngForTemplate: \"ngForTemplate\"\n      }\n    });\n  }\n  return NgForOf;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction applyViewChange(view, record) {\n  view.context.$implicit = record.item;\n}\nfunction getTypeName(type) {\n  return type['name'] || typeof type;\n}\n\n/**\n * A structural directive that conditionally includes a template based on the value of\n * an expression coerced to Boolean.\n * When the expression evaluates to true, Angular renders the template\n * provided in a `then` clause, and when  false or null,\n * Angular renders the template provided in an optional `else` clause. The default\n * template for the `else` clause is blank.\n *\n * A [shorthand form](guide/directives/structural-directives#asterisk) of the directive,\n * `*ngIf=\"condition\"`, is generally used, provided\n * as an attribute of the anchor element for the inserted template.\n * Angular expands this into a more explicit version, in which the anchor element\n * is contained in an `<ng-template>` element.\n *\n * Simple form with shorthand syntax:\n *\n * ```html\n * <div *ngIf=\"condition\">Content to render when condition is true.</div>\n * ```\n *\n * Simple form with expanded syntax:\n *\n * ```html\n * <ng-template [ngIf]=\"condition\"><div>Content to render when condition is\n * true.</div></ng-template>\n * ```\n *\n * Form with an \"else\" block:\n *\n * ```html\n * <div *ngIf=\"condition; else elseBlock\">Content to render when condition is true.</div>\n * <ng-template #elseBlock>Content to render when condition is false.</ng-template>\n * ```\n *\n * Shorthand form with \"then\" and \"else\" blocks:\n *\n * ```html\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>Content to render when condition is true.</ng-template>\n * <ng-template #elseBlock>Content to render when condition is false.</ng-template>\n * ```\n *\n * Form with storing the value locally:\n *\n * ```html\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>Content to render when value is null.</ng-template>\n * ```\n *\n * @usageNotes\n *\n * The `*ngIf` directive is most commonly used to conditionally show an inline template,\n * as seen in the following  example.\n * The default `else` template is blank.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfSimple'}\n *\n * ### Showing an alternative template using `else`\n *\n * To display a template when `expression` evaluates to false, use an `else` template\n * binding as shown in the following example.\n * The `else` binding points to an `<ng-template>`  element labeled `#elseBlock`.\n * The template can be defined anywhere in the component view, but is typically placed right after\n * `ngIf` for readability.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfElse'}\n *\n * ### Using an external `then` template\n *\n * In the previous example, the then-clause template is specified inline, as the content of the\n * tag that contains the `ngIf` directive. You can also specify a template that is defined\n * externally, by referencing a labeled `<ng-template>` element. When you do this, you can\n * change which template to use at runtime, as shown in the following example.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n *\n * ### Storing a conditional result in a variable\n *\n * You might want to show a set of properties from the same object. If you are waiting\n * for asynchronous data, the object can be undefined.\n * In this case, you can use `ngIf` and store the result of the condition in a local\n * variable as shown in the following example.\n *\n * {@example common/ngIf/ts/module.ts region='NgIfAs'}\n *\n * This code uses only one `AsyncPipe`, so only one subscription is created.\n * The conditional statement stores the result of `userStream|async` in the local variable `user`.\n * You can then bind the local `user` repeatedly.\n *\n * The conditional displays the data only if `userStream` returns a value,\n * so you don't need to use the\n * safe-navigation-operator (`?.`)\n * to guard against null values when accessing properties.\n * You can display an alternative template while waiting for the data.\n *\n * ### Shorthand syntax\n *\n * The shorthand syntax `*ngIf` expands into two separate template specifications\n * for the \"then\" and \"else\" clauses. For example, consider the following shorthand statement,\n * that is meant to show a loading page while waiting for data to be loaded.\n *\n * ```html\n * <div class=\"hero-list\" *ngIf=\"heroes else loading\">\n *  ...\n * </div>\n *\n * <ng-template #loading>\n *  <div>Loading...</div>\n * </ng-template>\n * ```\n *\n * You can see that the \"else\" clause references the `<ng-template>`\n * with the `#loading` label, and the template for the \"then\" clause\n * is provided as the content of the anchor element.\n *\n * However, when Angular expands the shorthand syntax, it creates\n * another `<ng-template>` tag, with `ngIf` and `ngIfElse` directives.\n * The anchor element containing the template for the \"then\" clause becomes\n * the content of this unlabeled `<ng-template>` tag.\n *\n * ```html\n * <ng-template [ngIf]=\"heroes\" [ngIfElse]=\"loading\">\n *  <div class=\"hero-list\">\n *   ...\n *  </div>\n * </ng-template>\n *\n * <ng-template #loading>\n *  <div>Loading...</div>\n * </ng-template>\n * ```\n *\n * The presence of the implicit template object has implications for the nesting of\n * structural directives. For more on this subject, see\n * [Structural Directives](guide/directives/structural-directives#one-per-element).\n *\n * @ngModule CommonModule\n * @publicApi\n */\nlet NgIf = /*#__PURE__*/(() => {\n  class NgIf {\n    _viewContainer;\n    _context = new NgIfContext();\n    _thenTemplateRef = null;\n    _elseTemplateRef = null;\n    _thenViewRef = null;\n    _elseViewRef = null;\n    constructor(_viewContainer, templateRef) {\n      this._viewContainer = _viewContainer;\n      this._thenTemplateRef = templateRef;\n    }\n    /**\n     * The Boolean expression to evaluate as the condition for showing a template.\n     */\n    set ngIf(condition) {\n      this._context.$implicit = this._context.ngIf = condition;\n      this._updateView();\n    }\n    /**\n     * A template to show if the condition expression evaluates to true.\n     */\n    set ngIfThen(templateRef) {\n      assertTemplate(templateRef, (typeof ngDevMode === 'undefined' || ngDevMode) && 'ngIfThen');\n      this._thenTemplateRef = templateRef;\n      this._thenViewRef = null; // clear previous view if any.\n      this._updateView();\n    }\n    /**\n     * A template to show if the condition expression evaluates to false.\n     */\n    set ngIfElse(templateRef) {\n      assertTemplate(templateRef, (typeof ngDevMode === 'undefined' || ngDevMode) && 'ngIfElse');\n      this._elseTemplateRef = templateRef;\n      this._elseViewRef = null; // clear previous view if any.\n      this._updateView();\n    }\n    _updateView() {\n      if (this._context.$implicit) {\n        if (!this._thenViewRef) {\n          this._viewContainer.clear();\n          this._elseViewRef = null;\n          if (this._thenTemplateRef) {\n            this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n          }\n        }\n      } else {\n        if (!this._elseViewRef) {\n          this._viewContainer.clear();\n          this._thenViewRef = null;\n          if (this._elseTemplateRef) {\n            this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n          }\n        }\n      }\n    }\n    /** @internal */\n    static ngIfUseIfTypeGuard;\n    /**\n     * Assert the correct type of the expression bound to the `ngIf` input within the template.\n     *\n     * The presence of this static field is a signal to the Ivy template type check compiler that\n     * when the `NgIf` structural directive renders its template, the type of the expression bound\n     * to `ngIf` should be narrowed in some way. For `NgIf`, the binding expression itself is used to\n     * narrow its type, which allows the strictNullChecks feature of TypeScript to work with `NgIf`.\n     */\n    static ngTemplateGuard_ngIf;\n    /**\n     * Asserts the correct type of the context for the template that `NgIf` will render.\n     *\n     * The presence of this method is a signal to the Ivy template type-check compiler that the\n     * `NgIf` structural directive renders its template with a specific context type.\n     */\n    static ngTemplateContextGuard(dir, ctx) {\n      return true;\n    }\n    static ɵfac = function NgIf_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgIf)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgIf,\n      selectors: [[\"\", \"ngIf\", \"\"]],\n      inputs: {\n        ngIf: \"ngIf\",\n        ngIfThen: \"ngIfThen\",\n        ngIfElse: \"ngIfElse\"\n      }\n    });\n  }\n  return NgIf;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @publicApi\n */\nclass NgIfContext {\n  $implicit = null;\n  ngIf = null;\n}\nfunction assertTemplate(templateRef, property) {\n  if (templateRef && !templateRef.createEmbeddedView) {\n    throw new _RuntimeError(2020 /* RuntimeErrorCode.NG_IF_NOT_A_TEMPLATE_REF */, (typeof ngDevMode === 'undefined' || ngDevMode) && `${property} must be a TemplateRef, but received '${_stringify(templateRef)}'.`);\n  }\n}\nclass SwitchView {\n  _viewContainerRef;\n  _templateRef;\n  _created = false;\n  constructor(_viewContainerRef, _templateRef) {\n    this._viewContainerRef = _viewContainerRef;\n    this._templateRef = _templateRef;\n  }\n  create() {\n    this._created = true;\n    this._viewContainerRef.createEmbeddedView(this._templateRef);\n  }\n  destroy() {\n    this._created = false;\n    this._viewContainerRef.clear();\n  }\n  enforceState(created) {\n    if (created && !this._created) {\n      this.create();\n    } else if (!created && this._created) {\n      this.destroy();\n    }\n  }\n}\n/**\n * @ngModule CommonModule\n *\n * @description\n * The `[ngSwitch]` directive on a container specifies an expression to match against.\n * The expressions to match are provided by `ngSwitchCase` directives on views within the container.\n * - Every view that matches is rendered.\n * - If there are no matches, a view with the `ngSwitchDefault` directive is rendered.\n * - Elements within the `[NgSwitch]` statement but outside of any `NgSwitchCase`\n * or `ngSwitchDefault` directive are preserved at the location.\n *\n * @usageNotes\n * Define a container element for the directive, and specify the switch expression\n * to match against as an attribute:\n *\n * ```html\n * <container-element [ngSwitch]=\"switch_expression\">\n * ```\n *\n * Within the container, `*ngSwitchCase` statements specify the match expressions\n * as attributes. Include `*ngSwitchDefault` as the final case.\n *\n * ```html\n * <container-element [ngSwitch]=\"switch_expression\">\n *    <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * ...\n *    <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * ### Usage Examples\n *\n * The following example shows how to use more than one case to display the same view:\n *\n * ```html\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <!-- the same view can be shown in more than one case -->\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *   <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *   <!--default case when there are no matches -->\n *   <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * The following example shows how cases can be nested:\n * ```html\n * <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n *\n * @publicApi\n * @see {@link NgSwitchCase}\n * @see {@link NgSwitchDefault}\n * @see [Structural Directives](guide/directives/structural-directives)\n *\n */\nlet NgSwitch = /*#__PURE__*/(() => {\n  class NgSwitch {\n    _defaultViews = [];\n    _defaultUsed = false;\n    _caseCount = 0;\n    _lastCaseCheckIndex = 0;\n    _lastCasesMatched = false;\n    _ngSwitch;\n    set ngSwitch(newValue) {\n      this._ngSwitch = newValue;\n      if (this._caseCount === 0) {\n        this._updateDefaultCases(true);\n      }\n    }\n    /** @internal */\n    _addCase() {\n      return this._caseCount++;\n    }\n    /** @internal */\n    _addDefault(view) {\n      this._defaultViews.push(view);\n    }\n    /** @internal */\n    _matchCase(value) {\n      const matched = value === this._ngSwitch;\n      this._lastCasesMatched ||= matched;\n      this._lastCaseCheckIndex++;\n      if (this._lastCaseCheckIndex === this._caseCount) {\n        this._updateDefaultCases(!this._lastCasesMatched);\n        this._lastCaseCheckIndex = 0;\n        this._lastCasesMatched = false;\n      }\n      return matched;\n    }\n    _updateDefaultCases(useDefault) {\n      if (this._defaultViews.length > 0 && useDefault !== this._defaultUsed) {\n        this._defaultUsed = useDefault;\n        for (const defaultView of this._defaultViews) {\n          defaultView.enforceState(useDefault);\n        }\n      }\n    }\n    static ɵfac = function NgSwitch_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgSwitch)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgSwitch,\n      selectors: [[\"\", \"ngSwitch\", \"\"]],\n      inputs: {\n        ngSwitch: \"ngSwitch\"\n      }\n    });\n  }\n  return NgSwitch;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @ngModule CommonModule\n *\n * @description\n * Provides a switch case expression to match against an enclosing `ngSwitch` expression.\n * When the expressions match, the given `NgSwitchCase` template is rendered.\n * If multiple match expressions match the switch expression value, all of them are displayed.\n *\n * @usageNotes\n *\n * Within a switch container, `*ngSwitchCase` statements specify the match expressions\n * as attributes. Include `*ngSwitchDefault` as the final case.\n *\n * ```html\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   ...\n *   <some-element *ngSwitchDefault>...</some-element>\n * </container-element>\n * ```\n *\n * Each switch-case statement contains an in-line HTML template or template reference\n * that defines the subtree to be selected if the value of the match expression\n * matches the value of the switch expression.\n *\n * As of Angular v17 the NgSwitch directive uses strict equality comparison (`===`) instead of\n * loose equality (`==`) to match different cases.\n *\n * @publicApi\n * @see {@link NgSwitch}\n * @see {@link NgSwitchDefault}\n *\n */\nlet NgSwitchCase = /*#__PURE__*/(() => {\n  class NgSwitchCase {\n    ngSwitch;\n    _view;\n    /**\n     * Stores the HTML template to be selected on match.\n     */\n    ngSwitchCase;\n    constructor(viewContainer, templateRef, ngSwitch) {\n      this.ngSwitch = ngSwitch;\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ngSwitch) {\n        throwNgSwitchProviderNotFoundError('ngSwitchCase', 'NgSwitchCase');\n      }\n      ngSwitch._addCase();\n      this._view = new SwitchView(viewContainer, templateRef);\n    }\n    /**\n     * Performs case matching. For internal use only.\n     * @nodoc\n     */\n    ngDoCheck() {\n      this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));\n    }\n    static ɵfac = function NgSwitchCase_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgSwitchCase)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(NgSwitch, 9));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgSwitchCase,\n      selectors: [[\"\", \"ngSwitchCase\", \"\"]],\n      inputs: {\n        ngSwitchCase: \"ngSwitchCase\"\n      }\n    });\n  }\n  return NgSwitchCase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Creates a view that is rendered when no `NgSwitchCase` expressions\n * match the `NgSwitch` expression.\n * This statement should be the final case in an `NgSwitch`.\n *\n * @publicApi\n * @see {@link NgSwitch}\n * @see {@link NgSwitchCase}\n *\n */\nlet NgSwitchDefault = /*#__PURE__*/(() => {\n  class NgSwitchDefault {\n    constructor(viewContainer, templateRef, ngSwitch) {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ngSwitch) {\n        throwNgSwitchProviderNotFoundError('ngSwitchDefault', 'NgSwitchDefault');\n      }\n      ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n    }\n    static ɵfac = function NgSwitchDefault_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgSwitchDefault)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(NgSwitch, 9));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgSwitchDefault,\n      selectors: [[\"\", \"ngSwitchDefault\", \"\"]]\n    });\n  }\n  return NgSwitchDefault;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction throwNgSwitchProviderNotFoundError(attrName, directiveName) {\n  throw new _RuntimeError(2000 /* RuntimeErrorCode.PARENT_NG_SWITCH_NOT_FOUND */, `An element with the \"${attrName}\" attribute ` + `(matching the \"${directiveName}\" directive) must be located inside an element with the \"ngSwitch\" attribute ` + `(matching \"NgSwitch\" directive)`);\n}\n\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n * ```html\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n *\n * @description\n *\n * Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n *\n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n *\n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n *\n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n *\n * @publicApi\n */\nlet NgPlural = /*#__PURE__*/(() => {\n  class NgPlural {\n    _localization;\n    _activeView;\n    _caseViews = {};\n    constructor(_localization) {\n      this._localization = _localization;\n    }\n    set ngPlural(value) {\n      this._updateView(value);\n    }\n    addCase(value, switchView) {\n      this._caseViews[value] = switchView;\n    }\n    _updateView(switchValue) {\n      this._clearViews();\n      const cases = Object.keys(this._caseViews);\n      const key = getPluralCategory(switchValue, cases, this._localization);\n      this._activateView(this._caseViews[key]);\n    }\n    _clearViews() {\n      if (this._activeView) this._activeView.destroy();\n    }\n    _activateView(view) {\n      if (view) {\n        this._activeView = view;\n        this._activeView.create();\n      }\n    }\n    static ɵfac = function NgPlural_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgPlural)(i0.ɵɵdirectiveInject(NgLocalization));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgPlural,\n      selectors: [[\"\", \"ngPlural\", \"\"]],\n      inputs: {\n        ngPlural: \"ngPlural\"\n      }\n    });\n  }\n  return NgPlural;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Creates a view that will be added/removed from the parent {@link NgPlural} when the\n * given expression matches the plural expression according to CLDR rules.\n *\n * @usageNotes\n * ```html\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n *```\n *\n * See {@link NgPlural} for more details and example.\n *\n * @publicApi\n */\nlet NgPluralCase = /*#__PURE__*/(() => {\n  class NgPluralCase {\n    value;\n    constructor(value, template, viewContainer, ngPlural) {\n      this.value = value;\n      const isANumber = !isNaN(Number(value));\n      ngPlural.addCase(isANumber ? `=${value}` : value, new SwitchView(viewContainer, template));\n    }\n    static ɵfac = function NgPluralCase_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgPluralCase)(i0.ɵɵinjectAttribute('ngPluralCase'), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(NgPlural, 1));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgPluralCase,\n      selectors: [[\"\", \"ngPluralCase\", \"\"]]\n    });\n  }\n  return NgPluralCase;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @ngModule CommonModule\n *\n * @usageNotes\n *\n * Set the width of the containing element to a pixel value returned by an expression.\n *\n * ```html\n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n * ```\n *\n * Set a collection of style values using an expression that returns key-value pairs.\n *\n * ```html\n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n *\n * For more simple use cases you can use the [style bindings](/guide/templates/binding#css-class-and-style-property-bindings) directly.\n * It doesn't require importing a directive.\n *\n * Set the font of the containing element to the result of an expression.\n *\n * ```html\n * <some-element [style]=\"{'font-style': styleExp}\">...</some-element>\n * ```\n *\n * @description\n *\n * An attribute directive that updates styles for the containing HTML element.\n * Sets one or more style properties, specified as colon-separated key-value pairs.\n * The key is a style name, with an optional `.<unit>` suffix\n * (such as 'top.px', 'font-style.em').\n * The value is an expression to be evaluated.\n * The resulting non-null value, expressed in the given unit,\n * is assigned to the given style property.\n * If the result of evaluation is null, the corresponding style is removed.\n *\n * @see [Style bindings](/guide/templates/binding#css-class-and-style-property-bindings)\n *\n * @publicApi\n */\nlet NgStyle = /*#__PURE__*/(() => {\n  class NgStyle {\n    _ngEl;\n    _differs;\n    _renderer;\n    _ngStyle = null;\n    _differ = null;\n    constructor(_ngEl, _differs, _renderer) {\n      this._ngEl = _ngEl;\n      this._differs = _differs;\n      this._renderer = _renderer;\n    }\n    set ngStyle(values) {\n      this._ngStyle = values;\n      if (!this._differ && values) {\n        this._differ = this._differs.find(values).create();\n      }\n    }\n    ngDoCheck() {\n      if (this._differ) {\n        const changes = this._differ.diff(this._ngStyle);\n        if (changes) {\n          this._applyChanges(changes);\n        }\n      }\n    }\n    _setStyle(nameAndUnit, value) {\n      const [name, unit] = nameAndUnit.split('.');\n      const flags = name.indexOf('-') === -1 ? undefined : RendererStyleFlags2.DashCase;\n      if (value != null) {\n        this._renderer.setStyle(this._ngEl.nativeElement, name, unit ? `${value}${unit}` : value, flags);\n      } else {\n        this._renderer.removeStyle(this._ngEl.nativeElement, name, flags);\n      }\n    }\n    _applyChanges(changes) {\n      changes.forEachRemovedItem(record => this._setStyle(record.key, null));\n      changes.forEachAddedItem(record => this._setStyle(record.key, record.currentValue));\n      changes.forEachChangedItem(record => this._setStyle(record.key, record.currentValue));\n    }\n    static ɵfac = function NgStyle_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgStyle)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.KeyValueDiffers), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgStyle,\n      selectors: [[\"\", \"ngStyle\", \"\"]],\n      inputs: {\n        ngStyle: \"ngStyle\"\n      }\n    });\n  }\n  return NgStyle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @ngModule CommonModule\n *\n * @description\n *\n * Inserts an embedded view from a prepared `TemplateRef`.\n *\n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n *\n * @usageNotes\n * ```html\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n *\n * Using the key `$implicit` in the context object will set its value as default.\n *\n * ### Example\n *\n * {@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n *\n * @publicApi\n */\nlet NgTemplateOutlet = /*#__PURE__*/(() => {\n  class NgTemplateOutlet {\n    _viewContainerRef;\n    _viewRef = null;\n    /**\n     * A context object to attach to the {@link EmbeddedViewRef}. This should be an\n     * object, the object's keys will be available for binding by the local template `let`\n     * declarations.\n     * Using the key `$implicit` in the context object will set its value as default.\n     */\n    ngTemplateOutletContext = null;\n    /**\n     * A string defining the template reference and optionally the context object for the template.\n     */\n    ngTemplateOutlet = null;\n    /** Injector to be used within the embedded view. */\n    ngTemplateOutletInjector = null;\n    constructor(_viewContainerRef) {\n      this._viewContainerRef = _viewContainerRef;\n    }\n    ngOnChanges(changes) {\n      if (this._shouldRecreateView(changes)) {\n        const viewContainerRef = this._viewContainerRef;\n        if (this._viewRef) {\n          viewContainerRef.remove(viewContainerRef.indexOf(this._viewRef));\n        }\n        // If there is no outlet, clear the destroyed view ref.\n        if (!this.ngTemplateOutlet) {\n          this._viewRef = null;\n          return;\n        }\n        // Create a context forward `Proxy` that will always bind to the user-specified context,\n        // without having to destroy and re-create views whenever the context changes.\n        const viewContext = this._createContextForwardProxy();\n        this._viewRef = viewContainerRef.createEmbeddedView(this.ngTemplateOutlet, viewContext, {\n          injector: this.ngTemplateOutletInjector ?? undefined\n        });\n      }\n    }\n    /**\n     * We need to re-create existing embedded view if either is true:\n     * - the outlet changed.\n     * - the injector changed.\n     */\n    _shouldRecreateView(changes) {\n      return !!changes['ngTemplateOutlet'] || !!changes['ngTemplateOutletInjector'];\n    }\n    /**\n     * For a given outlet instance, we create a proxy object that delegates\n     * to the user-specified context. This allows changing, or swapping out\n     * the context object completely without having to destroy/re-create the view.\n     */\n    _createContextForwardProxy() {\n      return new Proxy({}, {\n        set: (_target, prop, newValue) => {\n          if (!this.ngTemplateOutletContext) {\n            return false;\n          }\n          return Reflect.set(this.ngTemplateOutletContext, prop, newValue);\n        },\n        get: (_target, prop, receiver) => {\n          if (!this.ngTemplateOutletContext) {\n            return undefined;\n          }\n          return Reflect.get(this.ngTemplateOutletContext, prop, receiver);\n        }\n      });\n    }\n    static ɵfac = function NgTemplateOutlet_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgTemplateOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgTemplateOutlet,\n      selectors: [[\"\", \"ngTemplateOutlet\", \"\"]],\n      inputs: {\n        ngTemplateOutletContext: \"ngTemplateOutletContext\",\n        ngTemplateOutlet: \"ngTemplateOutlet\",\n        ngTemplateOutletInjector: \"ngTemplateOutletInjector\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return NgTemplateOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n */\nconst COMMON_DIRECTIVES = [NgClass, NgComponentOutlet, NgForOf, NgIf, NgTemplateOutlet, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgPlural, NgPluralCase];\nfunction invalidPipeArgumentError(type, value) {\n  return new _RuntimeError(2100 /* RuntimeErrorCode.INVALID_PIPE_ARGUMENT */, ngDevMode && `InvalidPipeArgument: '${value}' for pipe '${_stringify(type)}'`);\n}\nclass SubscribableStrategy {\n  createSubscription(async, updateLatestValue) {\n    // Subscription can be side-effectful, and we don't want any signal reads which happen in the\n    // side effect of the subscription to be tracked by a component's template when that\n    // subscription is triggered via the async pipe. So we wrap the subscription in `untracked` to\n    // decouple from the current reactive context.\n    //\n    // `untracked` also prevents signal _writes_ which happen in the subscription side effect from\n    // being treated as signal writes during the template evaluation (which throws errors).\n    return untracked(() => async.subscribe({\n      next: updateLatestValue,\n      error: e => {\n        throw e;\n      }\n    }));\n  }\n  dispose(subscription) {\n    // See the comment in `createSubscription` above on the use of `untracked`.\n    untracked(() => subscription.unsubscribe());\n  }\n}\nclass PromiseStrategy {\n  createSubscription(async, updateLatestValue) {\n    return async.then(updateLatestValue, e => {\n      throw e;\n    });\n  }\n  dispose(subscription) {}\n}\nconst _promiseStrategy = /*#__PURE__*/new PromiseStrategy();\nconst _subscribableStrategy = /*#__PURE__*/new SubscribableStrategy();\n/**\n * @ngModule CommonModule\n * @description\n *\n * Unwraps a value from an asynchronous primitive.\n *\n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks. When the reference of the expression changes, the `async` pipe\n * automatically unsubscribes from the old `Observable` or `Promise` and subscribes to the new one.\n *\n * @usageNotes\n *\n * ### Examples\n *\n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n *\n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n *\n * {@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n *\n * @publicApi\n */\nlet AsyncPipe = /*#__PURE__*/(() => {\n  class AsyncPipe {\n    _ref;\n    _latestValue = null;\n    markForCheckOnValueUpdate = true;\n    _subscription = null;\n    _obj = null;\n    _strategy = null;\n    constructor(ref) {\n      // Assign `ref` into `this._ref` manually instead of declaring `_ref` in the constructor\n      // parameter list, as the type of `this._ref` includes `null` unlike the type of `ref`.\n      this._ref = ref;\n    }\n    ngOnDestroy() {\n      if (this._subscription) {\n        this._dispose();\n      }\n      // Clear the `ChangeDetectorRef` and its association with the view data, to mitigate\n      // potential memory leaks in Observables that could otherwise cause the view data to\n      // be retained.\n      // https://github.com/angular/angular/issues/17624\n      this._ref = null;\n    }\n    transform(obj) {\n      if (!this._obj) {\n        if (obj) {\n          try {\n            // Only call `markForCheck` if the value is updated asynchronously.\n            // Synchronous updates _during_ subscription should not wastefully mark for check -\n            // this value is already going to be returned from the transform function.\n            this.markForCheckOnValueUpdate = false;\n            this._subscribe(obj);\n          } finally {\n            this.markForCheckOnValueUpdate = true;\n          }\n        }\n        return this._latestValue;\n      }\n      if (obj !== this._obj) {\n        this._dispose();\n        return this.transform(obj);\n      }\n      return this._latestValue;\n    }\n    _subscribe(obj) {\n      this._obj = obj;\n      this._strategy = this._selectStrategy(obj);\n      this._subscription = this._strategy.createSubscription(obj, value => this._updateLatestValue(obj, value));\n    }\n    _selectStrategy(obj) {\n      if (_isPromise(obj)) {\n        return _promiseStrategy;\n      }\n      if (_isSubscribable(obj)) {\n        return _subscribableStrategy;\n      }\n      throw invalidPipeArgumentError(AsyncPipe, obj);\n    }\n    _dispose() {\n      // Note: `dispose` is only called if a subscription has been initialized before, indicating\n      // that `this._strategy` is also available.\n      this._strategy.dispose(this._subscription);\n      this._latestValue = null;\n      this._subscription = null;\n      this._obj = null;\n    }\n    _updateLatestValue(async, value) {\n      if (async === this._obj) {\n        this._latestValue = value;\n        if (this.markForCheckOnValueUpdate) {\n          this._ref?.markForCheck();\n        }\n      }\n    }\n    static ɵfac = function AsyncPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AsyncPipe)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef, 16));\n    };\n    static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"async\",\n      type: AsyncPipe,\n      pure: false\n    });\n  }\n  return AsyncPipe;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Transforms text to all lower case.\n *\n * @see {@link UpperCasePipe}\n * @see {@link TitleCasePipe}\n * @usageNotes\n *\n * The following example defines a view that allows the user to enter\n * text, and then uses the pipe to convert the input text to all lower case.\n *\n * {@example common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe'}\n *\n * @ngModule CommonModule\n * @publicApi\n */\nlet LowerCasePipe = /*#__PURE__*/(() => {\n  class LowerCasePipe {\n    transform(value) {\n      if (value == null) return null;\n      if (typeof value !== 'string') {\n        throw invalidPipeArgumentError(LowerCasePipe, value);\n      }\n      return value.toLowerCase();\n    }\n    static ɵfac = function LowerCasePipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LowerCasePipe)();\n    };\n    static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"lowercase\",\n      type: LowerCasePipe,\n      pure: true\n    });\n  }\n  return LowerCasePipe;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n//\n// Regex below matches any Unicode word and number compatible with ES5. In ES2018 the same result\n// can be achieved by using /[0-9\\p{L}]\\S*/gu and also known as Unicode Property Escapes\n// (https://2ality.com/2017/07/regexp-unicode-property-escapes.html). Since there is no\n// transpilation of this functionality down to ES5 without external tool, the only solution is\n// to use already transpiled form. Example can be found here -\n// https://mothereff.in/regexpu#input=var+regex+%3D+%2F%5B0-9%5Cp%7BL%7D%5D%5CS*%2Fgu%3B%0A%0A&unicodePropertyEscape=1\n//\nconst unicodeWordMatch = /(?:[0-9A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])\\S*/g;\n/**\n * Transforms text to title case.\n * Capitalizes the first letter of each word and transforms the\n * rest of the word to lower case.\n * Words are delimited by any whitespace character, such as a space, tab, or line-feed character.\n *\n * @see {@link LowerCasePipe}\n * @see {@link UpperCasePipe}\n *\n * @usageNotes\n * The following example shows the result of transforming various strings into title case.\n *\n * {@example common/pipes/ts/titlecase_pipe.ts region='TitleCasePipe'}\n *\n * @ngModule CommonModule\n * @publicApi\n */\nlet TitleCasePipe = /*#__PURE__*/(() => {\n  class TitleCasePipe {\n    transform(value) {\n      if (value == null) return null;\n      if (typeof value !== 'string') {\n        throw invalidPipeArgumentError(TitleCasePipe, value);\n      }\n      return value.replace(unicodeWordMatch, txt => txt[0].toUpperCase() + txt.slice(1).toLowerCase());\n    }\n    static ɵfac = function TitleCasePipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TitleCasePipe)();\n    };\n    static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"titlecase\",\n      type: TitleCasePipe,\n      pure: true\n    });\n  }\n  return TitleCasePipe;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Transforms text to all upper case.\n * @see {@link LowerCasePipe}\n * @see {@link TitleCasePipe}\n *\n * @ngModule CommonModule\n * @publicApi\n */\nlet UpperCasePipe = /*#__PURE__*/(() => {\n  class UpperCasePipe {\n    transform(value) {\n      if (value == null) return null;\n      if (typeof value !== 'string') {\n        throw invalidPipeArgumentError(UpperCasePipe, value);\n      }\n      return value.toUpperCase();\n    }\n    static ɵfac = function UpperCasePipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UpperCasePipe)();\n    };\n    static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"uppercase\",\n      type: UpperCasePipe,\n      pure: true\n    });\n  }\n  return UpperCasePipe;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The default date format of Angular date pipe, which corresponds to the following format:\n * `'MMM d,y'` (e.g. `Jun 15, 2015`)\n */\nconst DEFAULT_DATE_FORMAT = 'mediumDate';\n\n/**\n * Optionally-provided default timezone to use for all instances of `DatePipe` (such as `'+0430'`).\n * If the value isn't provided, the `DatePipe` will use the end-user's local system timezone.\n *\n * @deprecated use DATE_PIPE_DEFAULT_OPTIONS token to configure DatePipe\n */\nconst DATE_PIPE_DEFAULT_TIMEZONE = /*#__PURE__*/new InjectionToken(ngDevMode ? 'DATE_PIPE_DEFAULT_TIMEZONE' : '');\n/**\n * DI token that allows to provide default configuration for the `DatePipe` instances in an\n * application. The value is an object which can include the following fields:\n * - `dateFormat`: configures the default date format. If not provided, the `DatePipe`\n * will use the 'mediumDate' as a value.\n * - `timezone`: configures the default timezone. If not provided, the `DatePipe` will\n * use the end-user's local system timezone.\n *\n * @see {@link DatePipeConfig}\n *\n * @usageNotes\n *\n * Various date pipe default values can be overwritten by providing this token with\n * the value that has this interface.\n *\n * For example:\n *\n * Override the default date format by providing a value using the token:\n * ```ts\n * providers: [\n *   {provide: DATE_PIPE_DEFAULT_OPTIONS, useValue: {dateFormat: 'shortDate'}}\n * ]\n * ```\n *\n * Override the default timezone by providing a value using the token:\n * ```ts\n * providers: [\n *   {provide: DATE_PIPE_DEFAULT_OPTIONS, useValue: {timezone: '-1200'}}\n * ]\n * ```\n */\nconst DATE_PIPE_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'DATE_PIPE_DEFAULT_OPTIONS' : '');\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a date value according to locale rules.\n *\n * `DatePipe` is executed only when it detects a pure change to the input value.\n * A pure change is either a change to a primitive input value\n * (such as `String`, `Number`, `Boolean`, or `Symbol`),\n * or a changed object reference (such as `Date`, `Array`, `Function`, or `Object`).\n *\n * Note that mutating a `Date` object does not cause the pipe to be rendered again.\n * To ensure that the pipe is executed, you must create a new `Date` object.\n *\n * Only the `en-US` locale data comes with Angular. To localize dates\n * in another language, you must import the corresponding locale data.\n * See the [I18n guide](guide/i18n/format-data-locale) for more information.\n *\n * The time zone of the formatted value can be specified either by passing it in as the second\n * parameter of the pipe, or by setting the default through the `DATE_PIPE_DEFAULT_OPTIONS`\n * injection token. The value that is passed in as the second parameter takes precedence over\n * the one defined using the injection token.\n *\n * @see {@link formatDate}\n *\n *\n * @usageNotes\n *\n * The result of this pipe is not reevaluated when the input is mutated. To avoid the need to\n * reformat the date on every change-detection cycle, treat the date as an immutable object\n * and change the reference when the pipe needs to run again.\n *\n * ### Pre-defined format options\n *\n * | Option        | Equivalent to                       | Examples (given in `en-US` locale)              |\n * |---------------|-------------------------------------|-------------------------------------------------|\n * | `'short'`     | `'M/d/yy, h:mm a'`                  | `6/15/15, 9:03 AM`                              |\n * | `'medium'`    | `'MMM d, y, h:mm:ss a'`             | `Jun 15, 2015, 9:03:01 AM`                      |\n * | `'long'`      | `'MMMM d, y, h:mm:ss a z'`          | `June 15, 2015 at 9:03:01 AM GMT+1`             |\n * | `'full'`      | `'EEEE, MMMM d, y, h:mm:ss a zzzz'` | `Monday, June 15, 2015 at 9:03:01 AM GMT+01:00` |\n * | `'shortDate'` | `'M/d/yy'`                          | `6/15/15`                                       |\n * | `'mediumDate'`| `'MMM d, y'`                        | `Jun 15, 2015`                                  |\n * | `'longDate'`  | `'MMMM d, y'`                       | `June 15, 2015`                                 |\n * | `'fullDate'`  | `'EEEE, MMMM d, y'`                 | `Monday, June 15, 2015`                         |\n * | `'shortTime'` | `'h:mm a'`                          | `9:03 AM`                                       |\n * | `'mediumTime'`| `'h:mm:ss a'`                       | `9:03:01 AM`                                    |\n * | `'longTime'`  | `'h:mm:ss a z'`                     | `9:03:01 AM GMT+1`                              |\n * | `'fullTime'`  | `'h:mm:ss a zzzz'`                  | `9:03:01 AM GMT+01:00`                          |\n *\n * ### Custom format options\n *\n * You can construct a format string using symbols to specify the components\n * of a date-time value, as described in the following table.\n * Format details depend on the locale.\n * Fields marked with (*) are only available in the extra data set for the given locale.\n *\n *  | Field type              | Format      | Description                                                   | Example Value                                              |\n *  |-------------------------|-------------|---------------------------------------------------------------|------------------------------------------------------------|\n *  | Era                     | G, GG & GGG | Abbreviated                                                   | AD                                                         |\n *  |                         | GGGG        | Wide                                                          | Anno Domini                                                |\n *  |                         | GGGGG       | Narrow                                                        | A                                                          |\n *  | Year                    | y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |\n *  |                         | yy          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |\n *  |                         | yyy         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |\n *  |                         | yyyy        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |\n *  | ISO Week-numbering year | Y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |\n *  |                         | YY          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |\n *  |                         | YYY         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |\n *  |                         | YYYY        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |\n *  | Month                   | M           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                         | MM          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                         | MMM         | Abbreviated                                                   | Sep                                                        |\n *  |                         | MMMM        | Wide                                                          | September                                                  |\n *  |                         | MMMMM       | Narrow                                                        | S                                                          |\n *  | Month standalone        | L           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                         | LL          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                         | LLL         | Abbreviated                                                   | Sep                                                        |\n *  |                         | LLLL        | Wide                                                          | September                                                  |\n *  |                         | LLLLL       | Narrow                                                        | S                                                          |\n *  | ISO Week of year        | w           | Numeric: minimum digits                                       | 1... 53                                                    |\n *  |                         | ww          | Numeric: 2 digits + zero padded                               | 01... 53                                                   |\n *  | Week of month           | W           | Numeric: 1 digit                                              | 1... 5                                                     |\n *  | Day of month            | d           | Numeric: minimum digits                                       | 1                                                          |\n *  |                         | dd          | Numeric: 2 digits + zero padded                               | 01                                                         |\n *  | Week day                | E, EE & EEE | Abbreviated                                                   | Tue                                                        |\n *  |                         | EEEE        | Wide                                                          | Tuesday                                                    |\n *  |                         | EEEEE       | Narrow                                                        | T                                                          |\n *  |                         | EEEEEE      | Short                                                         | Tu                                                         |\n *  | Week day standalone     | c, cc       | Numeric: 1 digit                                              | 2                                                          |\n *  |                         | ccc         | Abbreviated                                                   | Tue                                                        |\n *  |                         | cccc        | Wide                                                          | Tuesday                                                    |\n *  |                         | ccccc       | Narrow                                                        | T                                                          |\n *  |                         | cccccc      | Short                                                         | Tu                                                         |\n *  | Period                  | a, aa & aaa | Abbreviated                                                   | am/pm or AM/PM                                             |\n *  |                         | aaaa        | Wide (fallback to `a` when missing)                           | ante meridiem/post meridiem                                |\n *  |                         | aaaaa       | Narrow                                                        | a/p                                                        |\n *  | Period*                 | B, BB & BBB | Abbreviated                                                   | mid.                                                       |\n *  |                         | BBBB        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                         | BBBBB       | Narrow                                                        | md                                                         |\n *  | Period standalone*      | b, bb & bbb | Abbreviated                                                   | mid.                                                       |\n *  |                         | bbbb        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                         | bbbbb       | Narrow                                                        | md                                                         |\n *  | Hour 1-12               | h           | Numeric: minimum digits                                       | 1, 12                                                      |\n *  |                         | hh          | Numeric: 2 digits + zero padded                               | 01, 12                                                     |\n *  | Hour 0-23               | H           | Numeric: minimum digits                                       | 0, 23                                                      |\n *  |                         | HH          | Numeric: 2 digits + zero padded                               | 00, 23                                                     |\n *  | Minute                  | m           | Numeric: minimum digits                                       | 8, 59                                                      |\n *  |                         | mm          | Numeric: 2 digits + zero padded                               | 08, 59                                                     |\n *  | Second                  | s           | Numeric: minimum digits                                       | 0... 59                                                    |\n *  |                         | ss          | Numeric: 2 digits + zero padded                               | 00... 59                                                   |\n *  | Fractional seconds      | S           | Numeric: 1 digit                                              | 0... 9                                                     |\n *  |                         | SS          | Numeric: 2 digits + zero padded                               | 00... 99                                                   |\n *  |                         | SSS         | Numeric: 3 digits + zero padded (= milliseconds)              | 000... 999                                                 |\n *  | Zone                    | z, zz & zzz | Short specific non location format (fallback to O)            | GMT-8                                                      |\n *  |                         | zzzz        | Long specific non location format (fallback to OOOO)          | GMT-08:00                                                  |\n *  |                         | Z, ZZ & ZZZ | ISO8601 basic format                                          | -0800                                                      |\n *  |                         | ZZZZ        | Long localized GMT format                                     | GMT-8:00                                                   |\n *  |                         | ZZZZZ       | ISO8601 extended format + Z indicator for offset 0 (= XXXXX)  | -08:00                                                     |\n *  |                         | O, OO & OOO | Short localized GMT format                                    | GMT-8                                                      |\n *  |                         | OOOO        | Long localized GMT format                                     | GMT-08:00                                                  |\n *\n *\n * ### Format examples\n *\n * These examples transform a date into various formats,\n * assuming that `dateObj` is a JavaScript `Date` object for\n * year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11,\n * given in the local time for the `en-US` locale.\n *\n * ```\n * {{ dateObj | date }}               // output is 'Jun 15, 2015'\n * {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n * {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n * {{ dateObj | date:'mm:ss' }}       // output is '43:11'\n * {{ dateObj | date:\"MMM dd, yyyy 'at' hh:mm a\" }}  // output is 'Jun 15, 2015 at 09:43 PM'\n * ```\n *\n * ### Usage example\n *\n * The following component uses a date pipe to display the current date in different formats.\n *\n * ```angular-ts\n * @Component({\n *  selector: 'date-pipe',\n *  template: `<div>\n *    <p>Today is {{today | date}}</p>\n *    <p>Or if you prefer, {{today | date:'fullDate'}}</p>\n *    <p>The time is {{today | date:'h:mm a z'}}</p>\n *  </div>`\n * })\n * // Get the current date and time as a date-time value.\n * export class DatePipeComponent {\n *   today: number = Date.now();\n * }\n * ```\n *\n * @publicApi\n */\nlet DatePipe = /*#__PURE__*/(() => {\n  class DatePipe {\n    locale;\n    defaultTimezone;\n    defaultOptions;\n    constructor(locale, defaultTimezone, defaultOptions) {\n      this.locale = locale;\n      this.defaultTimezone = defaultTimezone;\n      this.defaultOptions = defaultOptions;\n    }\n    transform(value, format, timezone, locale) {\n      if (value == null || value === '' || value !== value) return null;\n      try {\n        const _format = format ?? this.defaultOptions?.dateFormat ?? DEFAULT_DATE_FORMAT;\n        const _timezone = timezone ?? this.defaultOptions?.timezone ?? this.defaultTimezone ?? undefined;\n        return formatDate(value, _format, locale || this.locale, _timezone);\n      } catch (error) {\n        throw invalidPipeArgumentError(DatePipe, error.message);\n      }\n    }\n    static ɵfac = function DatePipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DatePipe)(i0.ɵɵdirectiveInject(LOCALE_ID, 16), i0.ɵɵdirectiveInject(DATE_PIPE_DEFAULT_TIMEZONE, 24), i0.ɵɵdirectiveInject(DATE_PIPE_DEFAULT_OPTIONS, 24));\n    };\n    static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"date\",\n      type: DatePipe,\n      pure: true\n    });\n  }\n  return DatePipe;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst _INTERPOLATION_REGEXP = /#/g;\n/**\n * @ngModule CommonModule\n * @description\n *\n * Maps a value to a string that pluralizes the value according to locale rules.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n *\n * @publicApi\n */\nlet I18nPluralPipe = /*#__PURE__*/(() => {\n  class I18nPluralPipe {\n    _localization;\n    constructor(_localization) {\n      this._localization = _localization;\n    }\n    /**\n     * @param value the number to be formatted\n     * @param pluralMap an object that mimics the ICU format, see\n     * https://unicode-org.github.io/icu/userguide/format_parse/messages/.\n     * @param locale a `string` defining the locale to use (uses the current {@link LOCALE_ID} by\n     * default).\n     */\n    transform(value, pluralMap, locale) {\n      if (value == null) return '';\n      if (typeof pluralMap !== 'object' || pluralMap === null) {\n        throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);\n      }\n      const key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);\n      return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n    }\n    static ɵfac = function I18nPluralPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || I18nPluralPipe)(i0.ɵɵdirectiveInject(NgLocalization, 16));\n    };\n    static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"i18nPlural\",\n      type: I18nPluralPipe,\n      pure: true\n    });\n  }\n  return I18nPluralPipe;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Generic selector that displays the string that matches the current value.\n *\n * If none of the keys of the `mapping` match the `value`, then the content\n * of the `other` key is returned when present, otherwise an empty string is returned.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n *\n * @publicApi\n */\nlet I18nSelectPipe = /*#__PURE__*/(() => {\n  class I18nSelectPipe {\n    /**\n     * @param value a string to be internationalized.\n     * @param mapping an object that indicates the text that should be displayed\n     * for different values of the provided `value`.\n     */\n    transform(value, mapping) {\n      if (value == null) return '';\n      if (typeof mapping !== 'object' || typeof value !== 'string') {\n        throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n      }\n      if (mapping.hasOwnProperty(value)) {\n        return mapping[value];\n      }\n      if (mapping.hasOwnProperty('other')) {\n        return mapping['other'];\n      }\n      return '';\n    }\n    static ɵfac = function I18nSelectPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || I18nSelectPipe)();\n    };\n    static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"i18nSelect\",\n      type: I18nSelectPipe,\n      pure: true\n    });\n  }\n  return I18nSelectPipe;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Converts a value into its JSON-format representation.  Useful for debugging.\n *\n * @usageNotes\n *\n * The following component uses a JSON pipe to convert an object\n * to JSON format, and displays the string in both formats for comparison.\n *\n * {@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n *\n * @publicApi\n */\nlet JsonPipe = /*#__PURE__*/(() => {\n  class JsonPipe {\n    /**\n     * @param value A value of any type to convert into a JSON-format string.\n     */\n    transform(value) {\n      return JSON.stringify(value, null, 2);\n    }\n    static ɵfac = function JsonPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || JsonPipe)();\n    };\n    static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"json\",\n      type: JsonPipe,\n      pure: false\n    });\n  }\n  return JsonPipe;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction makeKeyValuePair(key, value) {\n  return {\n    key: key,\n    value: value\n  };\n}\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms Object or Map into an array of key value pairs.\n *\n * The output array will be ordered by keys.\n * By default the comparator will be by Unicode point value.\n * You can optionally pass a compareFn if your keys are complex types.\n * Passing `null` as the compareFn will use natural ordering of the input.\n *\n * @usageNotes\n * ### Examples\n *\n * This examples show how an Object or a Map can be iterated by ngFor with the use of this\n * keyvalue pipe.\n *\n * {@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}\n *\n * @publicApi\n */\nlet KeyValuePipe = /*#__PURE__*/(() => {\n  class KeyValuePipe {\n    differs;\n    constructor(differs) {\n      this.differs = differs;\n    }\n    differ;\n    keyValues = [];\n    compareFn = defaultComparator;\n    transform(input, compareFn = defaultComparator) {\n      if (!input || !(input instanceof Map) && typeof input !== 'object') {\n        return null;\n      }\n      // make a differ for whatever type we've been passed in\n      this.differ ??= this.differs.find(input).create();\n      const differChanges = this.differ.diff(input);\n      const compareFnChanged = compareFn !== this.compareFn;\n      if (differChanges) {\n        this.keyValues = [];\n        differChanges.forEachItem(r => {\n          this.keyValues.push(makeKeyValuePair(r.key, r.currentValue));\n        });\n      }\n      if (differChanges || compareFnChanged) {\n        if (compareFn) {\n          this.keyValues.sort(compareFn);\n        }\n        this.compareFn = compareFn;\n      }\n      return this.keyValues;\n    }\n    static ɵfac = function KeyValuePipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || KeyValuePipe)(i0.ɵɵdirectiveInject(i0.KeyValueDiffers, 16));\n    };\n    static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"keyvalue\",\n      type: KeyValuePipe,\n      pure: false\n    });\n  }\n  return KeyValuePipe;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction defaultComparator(keyValueA, keyValueB) {\n  const a = keyValueA.key;\n  const b = keyValueB.key;\n  // If both keys are the same, return 0 (no sorting needed).\n  if (a === b) return 0;\n  // If one of the keys is `null` or `undefined`, place it at the end of the sort.\n  if (a == null) return 1; // `a` comes after `b`.\n  if (b == null) return -1; // `b` comes after `a`.\n  // If both keys are strings, compare them lexicographically.\n  if (typeof a == 'string' && typeof b == 'string') {\n    return a < b ? -1 : 1;\n  }\n  // If both keys are numbers, sort them numerically.\n  if (typeof a == 'number' && typeof b == 'number') {\n    return a - b;\n  }\n  // If both keys are booleans, sort `false` before `true`.\n  if (typeof a == 'boolean' && typeof b == 'boolean') {\n    return a < b ? -1 : 1;\n  }\n  // Fallback case: if keys are of different types, compare their string representations.\n  const aString = String(a);\n  const bString = String(b);\n  // Compare the string representations lexicographically.\n  return aString == bString ? 0 : aString < bString ? -1 : 1;\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Formats a value according to digit options and locale rules.\n * Locale determines group sizing and separator,\n * decimal point character, and other locale-specific configurations.\n *\n * @see {@link formatNumber}\n *\n * @usageNotes\n *\n * ### digitsInfo\n *\n * The value's decimal representation is specified by the `digitsInfo`\n * parameter, written in the following format:<br>\n *\n * ```\n * {minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}\n * ```\n *\n *  - `minIntegerDigits`:\n * The minimum number of integer digits before the decimal point.\n * Default is 1.\n *\n * - `minFractionDigits`:\n * The minimum number of digits after the decimal point.\n * Default is 0.\n *\n *  - `maxFractionDigits`:\n * The maximum number of digits after the decimal point.\n * Default is 3.\n *\n * If the formatted value is truncated it will be rounded using the \"to-nearest\" method:\n *\n * ```\n * {{3.6 | number: '1.0-0'}}\n * <!--will output '4'-->\n *\n * {{-3.6 | number:'1.0-0'}}\n * <!--will output '-4'-->\n * ```\n *\n * ### locale\n *\n * `locale` will format a value according to locale rules.\n * Locale determines group sizing and separator,\n * decimal point character, and other locale-specific configurations.\n *\n * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n *\n * See [Setting your app locale](guide/i18n/locale-id).\n *\n * ### Example\n *\n * The following code shows how the pipe transforms values\n * according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * {@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n *\n * @publicApi\n */\nlet DecimalPipe = /*#__PURE__*/(() => {\n  class DecimalPipe {\n    _locale;\n    constructor(_locale) {\n      this._locale = _locale;\n    }\n    transform(value, digitsInfo, locale) {\n      if (!isValue(value)) return null;\n      locale ||= this._locale;\n      try {\n        const num = strToNumber(value);\n        return formatNumber(num, locale, digitsInfo);\n      } catch (error) {\n        throw invalidPipeArgumentError(DecimalPipe, error.message);\n      }\n    }\n    static ɵfac = function DecimalPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DecimalPipe)(i0.ɵɵdirectiveInject(LOCALE_ID, 16));\n    };\n    static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"number\",\n      type: DecimalPipe,\n      pure: true\n    });\n  }\n  return DecimalPipe;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number to a percentage\n * string, formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * @see {@link formatPercent}\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * {@example common/pipes/ts/percent_pipe.ts region='PercentPipe'}\n *\n * @publicApi\n */\nlet PercentPipe = /*#__PURE__*/(() => {\n  class PercentPipe {\n    _locale;\n    constructor(_locale) {\n      this._locale = _locale;\n    }\n    /**\n     *\n     * @param value The number to be formatted as a percentage.\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `0`.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n/locale-id).\n     */\n    transform(value, digitsInfo, locale) {\n      if (!isValue(value)) return null;\n      locale ||= this._locale;\n      try {\n        const num = strToNumber(value);\n        return formatPercent(num, locale, digitsInfo);\n      } catch (error) {\n        throw invalidPipeArgumentError(PercentPipe, error.message);\n      }\n    }\n    static ɵfac = function PercentPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PercentPipe)(i0.ɵɵdirectiveInject(LOCALE_ID, 16));\n    };\n    static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"percent\",\n      type: PercentPipe,\n      pure: true\n    });\n  }\n  return PercentPipe;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @ngModule CommonModule\n * @description\n *\n * Transforms a number to a currency string, formatted according to locale rules\n * that determine group sizing and separator, decimal-point character,\n * and other locale-specific configurations.\n *\n *\n * @see {@link getCurrencySymbol}\n * @see {@link formatCurrency}\n *\n * @usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * {@example common/pipes/ts/currency_pipe.ts region='CurrencyPipe'}\n *\n * @publicApi\n */\nlet CurrencyPipe = /*#__PURE__*/(() => {\n  class CurrencyPipe {\n    _locale;\n    _defaultCurrencyCode;\n    constructor(_locale, _defaultCurrencyCode = 'USD') {\n      this._locale = _locale;\n      this._defaultCurrencyCode = _defaultCurrencyCode;\n    }\n    transform(value, currencyCode = this._defaultCurrencyCode, display = 'symbol', digitsInfo, locale) {\n      if (!isValue(value)) return null;\n      locale ||= this._locale;\n      if (typeof display === 'boolean') {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && console && console.warn) {\n          console.warn(`Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \"code\", \"symbol\" or \"symbol-narrow\".`);\n        }\n        display = display ? 'symbol' : 'code';\n      }\n      let currency = currencyCode || this._defaultCurrencyCode;\n      if (display !== 'code') {\n        if (display === 'symbol' || display === 'symbol-narrow') {\n          currency = getCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow', locale);\n        } else {\n          currency = display;\n        }\n      }\n      try {\n        const num = strToNumber(value);\n        return formatCurrency(num, locale, currency, currencyCode, digitsInfo);\n      } catch (error) {\n        throw invalidPipeArgumentError(CurrencyPipe, error.message);\n      }\n    }\n    static ɵfac = function CurrencyPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CurrencyPipe)(i0.ɵɵdirectiveInject(LOCALE_ID, 16), i0.ɵɵdirectiveInject(DEFAULT_CURRENCY_CODE, 16));\n    };\n    static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"currency\",\n      type: CurrencyPipe,\n      pure: true\n    });\n  }\n  return CurrencyPipe;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isValue(value) {\n  return !(value == null || value === '' || value !== value);\n}\n/**\n * Transforms a string into a number (if needed).\n */\nfunction strToNumber(value) {\n  // Convert strings to numbers\n  if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\n    return Number(value);\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`${value} is not a number`);\n  }\n  return value;\n}\n\n/**\n * @ngModule CommonModule\n * @description\n *\n * Creates a new `Array` or `String` containing a subset (slice) of the elements.\n *\n * @usageNotes\n *\n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n *\n * When operating on an `Array`, the returned `Array` is always a copy even when all\n * the elements are being returned.\n *\n * When operating on a blank value, the pipe returns the blank value.\n *\n * ### List Example\n *\n * This `ngFor` example:\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n *\n * produces the following:\n *\n * ```html\n * <li>b</li>\n * <li>c</li>\n * ```\n *\n * ### String Examples\n *\n * {@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n *\n * @publicApi\n */\nlet SlicePipe = /*#__PURE__*/(() => {\n  class SlicePipe {\n    transform(value, start, end) {\n      if (value == null) return null;\n      const supports = typeof value === 'string' || Array.isArray(value);\n      if (!supports) {\n        throw invalidPipeArgumentError(SlicePipe, value);\n      }\n      return value.slice(start, end);\n    }\n    static ɵfac = function SlicePipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SlicePipe)();\n    };\n    static ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"slice\",\n      type: SlicePipe,\n      pure: false\n    });\n  }\n  return SlicePipe;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @module\n * @description\n * This module provides a set of common Pipes.\n */\n/**\n * A collection of Angular pipes that are likely to be used in each and every application.\n */\nconst COMMON_PIPES = [AsyncPipe, UpperCasePipe, LowerCasePipe, JsonPipe, SlicePipe, DecimalPipe, PercentPipe, TitleCasePipe, CurrencyPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, KeyValuePipe];\n\n// Note: This does not contain the location providers,\n// as they need some platform specific implementations to work.\n/**\n * Exports all the basic Angular directives and pipes,\n * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * @publicApi\n */\nlet CommonModule = /*#__PURE__*/(() => {\n  class CommonModule {\n    static ɵfac = function CommonModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CommonModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: CommonModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return CommonModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { AsyncPipe, CommonModule, CurrencyPipe, DATE_PIPE_DEFAULT_OPTIONS, DATE_PIPE_DEFAULT_TIMEZONE, DatePipe, DecimalPipe, FormStyle, FormatWidth, HashLocationStrategy, I18nPluralPipe, I18nSelectPipe, JsonPipe, KeyValuePipe, LowerCasePipe, NgClass, NgComponentOutlet, NgForOf, NgForOfContext, NgIf, NgIfContext, NgLocaleLocalization, NgLocalization, NgPlural, NgPluralCase, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet, NumberFormatStyle, NumberSymbol, PercentPipe, Plural, SlicePipe, TitleCasePipe, TranslationWidth, UpperCasePipe, WeekDay, formatCurrency, formatDate, formatNumber, formatPercent, getCurrencySymbol, getLocaleCurrencyCode, getLocaleCurrencyName, getLocaleCurrencySymbol, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleDayNames, getLocaleDayPeriods, getLocaleDirection, getLocaleEraNames, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocaleFirstDayOfWeek, getLocaleId, getLocaleMonthNames, getLocaleNumberFormat, getLocaleNumberSymbol, getLocalePluralCase, getLocaleTimeFormat, getLocaleWeekEndRange, getNumberOfCurrencyDigits };\n","/**\n * @license Angular v19.2.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nfunction parseCookieValue(cookieStr, name) {\n  name = encodeURIComponent(name);\n  for (const cookie of cookieStr.split(';')) {\n    const eqIndex = cookie.indexOf('=');\n    const [cookieName, cookieValue] = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)];\n    if (cookieName.trim() === name) {\n      return decodeURIComponent(cookieValue);\n    }\n  }\n  return null;\n}\nconst PLATFORM_BROWSER_ID = 'browser';\nconst PLATFORM_SERVER_ID = 'server';\n/**\n * Returns whether a platform id represents a browser platform.\n * @publicApi\n */\nfunction isPlatformBrowser(platformId) {\n  return platformId === PLATFORM_BROWSER_ID;\n}\n/**\n * Returns whether a platform id represents a server platform.\n * @publicApi\n */\nfunction isPlatformServer(platformId) {\n  return platformId === PLATFORM_SERVER_ID;\n}\n\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * @publicApi\n */\nclass XhrFactory {}\nexport { PLATFORM_BROWSER_ID, PLATFORM_SERVER_ID, XhrFactory, isPlatformBrowser, isPlatformServer, parseCookieValue };\n","/**\n * @license Angular v19.2.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nexport { AsyncPipe, CommonModule, CurrencyPipe, DATE_PIPE_DEFAULT_OPTIONS, DATE_PIPE_DEFAULT_TIMEZONE, DatePipe, DecimalPipe, FormStyle, FormatWidth, HashLocationStrategy, I18nPluralPipe, I18nSelectPipe, JsonPipe, KeyValuePipe, LowerCasePipe, NgClass, NgComponentOutlet, NgForOf as NgFor, NgForOf, NgForOfContext, NgIf, NgIfContext, NgLocaleLocalization, NgLocalization, NgPlural, NgPluralCase, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet, NumberFormatStyle, NumberSymbol, PercentPipe, Plural, SlicePipe, TitleCasePipe, TranslationWidth, UpperCasePipe, WeekDay, formatCurrency, formatDate, formatNumber, formatPercent, getCurrencySymbol, getLocaleCurrencyCode, getLocaleCurrencyName, getLocaleCurrencySymbol, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleDayNames, getLocaleDayPeriods, getLocaleDirection, getLocaleEraNames, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocaleFirstDayOfWeek, getLocaleId, getLocaleMonthNames, getLocaleNumberFormat, getLocaleNumberSymbol, getLocalePluralCase, getLocaleTimeFormat, getLocaleWeekEndRange, getNumberOfCurrencyDigits } from './common_module-CBrzkrmd.mjs';\nimport * as i0 from '@angular/core';\nimport { ɵregisterLocaleData as _registerLocaleData, Version, ɵɵdefineInjectable as __defineInjectable, inject, InjectionToken, ɵRuntimeError as _RuntimeError, ɵformatRuntimeError as _formatRuntimeError, PLATFORM_ID, Injectable, ɵIMAGE_CONFIG as _IMAGE_CONFIG, Renderer2, ElementRef, Injector, DestroyRef, ɵperformanceMarkFeature as _performanceMarkFeature, NgZone, ApplicationRef, booleanAttribute, numberAttribute, ChangeDetectorRef, ɵIMAGE_CONFIG_DEFAULTS as _IMAGE_CONFIG_DEFAULTS, ɵunwrapSafeValue as _unwrapSafeValue, Input, Directive } from '@angular/core';\nexport { ɵIMAGE_CONFIG as IMAGE_CONFIG } from '@angular/core';\nimport { isPlatformBrowser } from './xhr-BfNfxNDv.mjs';\nexport { XhrFactory, isPlatformServer, PLATFORM_BROWSER_ID as ɵPLATFORM_BROWSER_ID, PLATFORM_SERVER_ID as ɵPLATFORM_SERVER_ID, parseCookieValue as ɵparseCookieValue } from './xhr-BfNfxNDv.mjs';\nimport { DOCUMENT } from './dom_tokens-rA0ACyx7.mjs';\nexport { APP_BASE_HREF, BrowserPlatformLocation, LOCATION_INITIALIZED, Location, LocationStrategy, PathLocationStrategy, PlatformLocation, DomAdapter as ɵDomAdapter, getDOM as ɵgetDOM, normalizeQueryParams as ɵnormalizeQueryParams, setRootDomAdapter as ɵsetRootDomAdapter } from './location-DpBxd_aX.mjs';\nexport { PlatformNavigation as ɵPlatformNavigation } from './platform_navigation-B45Jeakb.mjs';\nimport 'rxjs';\n\n/**\n * Register global data to be used internally by Angular. See the\n * [\"I18n guide\"](guide/i18n/format-data-locale) to know how to import additional locale\n * data.\n *\n * The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1\n *\n * @publicApi\n */\nfunction registerLocaleData(data, localeId, extraData) {\n  return _registerLocaleData(data, localeId, extraData);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * @publicApi\n */\nconst VERSION = /*#__PURE__*/new Version('19.2.7');\n\n/**\n * Defines a scroll position manager. Implemented by `BrowserViewportScroller`.\n *\n * @publicApi\n */\nlet ViewportScroller = /*#__PURE__*/(() => {\n  class ViewportScroller {\n    // De-sugared tree-shakable injection\n    // See #23917\n    /** @nocollapse */\n    static ɵprov = /** @pureOrBreakMyCode */ /* @__PURE__ */__defineInjectable({\n      token: ViewportScroller,\n      providedIn: 'root',\n      factory: () => typeof ngServerMode !== 'undefined' && ngServerMode ? new NullViewportScroller() : new BrowserViewportScroller(inject(DOCUMENT), window)\n    });\n  }\n  return ViewportScroller;\n})();\n/**\n * Manages the scroll position for a browser window.\n */\nclass BrowserViewportScroller {\n  document;\n  window;\n  offset = () => [0, 0];\n  constructor(document, window) {\n    this.document = document;\n    this.window = window;\n  }\n  /**\n   * Configures the top offset used when scrolling to an anchor.\n   * @param offset A position in screen coordinates (a tuple with x and y values)\n   * or a function that returns the top offset position.\n   *\n   */\n  setOffset(offset) {\n    if (Array.isArray(offset)) {\n      this.offset = () => offset;\n    } else {\n      this.offset = offset;\n    }\n  }\n  /**\n   * Retrieves the current scroll position.\n   * @returns The position in screen coordinates.\n   */\n  getScrollPosition() {\n    return [this.window.scrollX, this.window.scrollY];\n  }\n  /**\n   * Sets the scroll position.\n   * @param position The new position in screen coordinates.\n   */\n  scrollToPosition(position) {\n    this.window.scrollTo(position[0], position[1]);\n  }\n  /**\n   * Scrolls to an element and attempts to focus the element.\n   *\n   * Note that the function name here is misleading in that the target string may be an ID for a\n   * non-anchor element.\n   *\n   * @param target The ID of an element or name of the anchor.\n   *\n   * @see https://html.spec.whatwg.org/#the-indicated-part-of-the-document\n   * @see https://html.spec.whatwg.org/#scroll-to-fragid\n   */\n  scrollToAnchor(target) {\n    const elSelected = findAnchorFromDocument(this.document, target);\n    if (elSelected) {\n      this.scrollToElement(elSelected);\n      // After scrolling to the element, the spec dictates that we follow the focus steps for the\n      // target. Rather than following the robust steps, simply attempt focus.\n      //\n      // @see https://html.spec.whatwg.org/#get-the-focusable-area\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOrForeignElement/focus\n      // @see https://html.spec.whatwg.org/#focusable-area\n      elSelected.focus();\n    }\n  }\n  /**\n   * Disables automatic scroll restoration provided by the browser.\n   */\n  setHistoryScrollRestoration(scrollRestoration) {\n    this.window.history.scrollRestoration = scrollRestoration;\n  }\n  /**\n   * Scrolls to an element using the native offset and the specified offset set on this scroller.\n   *\n   * The offset can be used when we know that there is a floating header and scrolling naively to an\n   * element (ex: `scrollIntoView`) leaves the element hidden behind the floating header.\n   */\n  scrollToElement(el) {\n    const rect = el.getBoundingClientRect();\n    const left = rect.left + this.window.pageXOffset;\n    const top = rect.top + this.window.pageYOffset;\n    const offset = this.offset();\n    this.window.scrollTo(left - offset[0], top - offset[1]);\n  }\n}\nfunction findAnchorFromDocument(document, target) {\n  const documentResult = document.getElementById(target) || document.getElementsByName(target)[0];\n  if (documentResult) {\n    return documentResult;\n  }\n  // `getElementById` and `getElementsByName` won't pierce through the shadow DOM so we\n  // have to traverse the DOM manually and do the lookup through the shadow roots.\n  if (typeof document.createTreeWalker === 'function' && document.body && typeof document.body.attachShadow === 'function') {\n    const treeWalker = document.createTreeWalker(document.body, NodeFilter.SHOW_ELEMENT);\n    let currentNode = treeWalker.currentNode;\n    while (currentNode) {\n      const shadowRoot = currentNode.shadowRoot;\n      if (shadowRoot) {\n        // Note that `ShadowRoot` doesn't support `getElementsByName`\n        // so we have to fall back to `querySelector`.\n        const result = shadowRoot.getElementById(target) || shadowRoot.querySelector(`[name=\"${target}\"]`);\n        if (result) {\n          return result;\n        }\n      }\n      currentNode = treeWalker.nextNode();\n    }\n  }\n  return null;\n}\n/**\n * Provides an empty implementation of the viewport scroller.\n */\nclass NullViewportScroller {\n  /**\n   * Empty implementation\n   */\n  setOffset(offset) {}\n  /**\n   * Empty implementation\n   */\n  getScrollPosition() {\n    return [0, 0];\n  }\n  /**\n   * Empty implementation\n   */\n  scrollToPosition(position) {}\n  /**\n   * Empty implementation\n   */\n  scrollToAnchor(anchor) {}\n  /**\n   * Empty implementation\n   */\n  setHistoryScrollRestoration(scrollRestoration) {}\n}\n\n/**\n * Value (out of 100) of the requested quality for placeholder images.\n */\nconst PLACEHOLDER_QUALITY = '20';\n\n// Converts a string that represents a URL into a URL class instance.\nfunction getUrl(src, win) {\n  // Don't use a base URL is the URL is absolute.\n  return isAbsoluteUrl(src) ? new URL(src) : new URL(src, win.location.href);\n}\n// Checks whether a URL is absolute (i.e. starts with `http://` or `https://`).\nfunction isAbsoluteUrl(src) {\n  return /^https?:\\/\\//.test(src);\n}\n// Given a URL, extract the hostname part.\n// If a URL is a relative one - the URL is returned as is.\nfunction extractHostname(url) {\n  return isAbsoluteUrl(url) ? new URL(url).hostname : url;\n}\nfunction isValidPath(path) {\n  const isString = typeof path === 'string';\n  if (!isString || path.trim() === '') {\n    return false;\n  }\n  // Calling new URL() will throw if the path string is malformed\n  try {\n    const url = new URL(path);\n    return true;\n  } catch {\n    return false;\n  }\n}\nfunction normalizePath(path) {\n  return path.endsWith('/') ? path.slice(0, -1) : path;\n}\nfunction normalizeSrc(src) {\n  return src.startsWith('/') ? src.slice(1) : src;\n}\n\n/**\n * Noop image loader that does no transformation to the original src and just returns it as is.\n * This loader is used as a default one if more specific logic is not provided in an app config.\n *\n * @see {@link ImageLoader}\n * @see {@link NgOptimizedImage}\n */\nconst noopImageLoader = config => config.src;\n/**\n * Injection token that configures the image loader function.\n *\n * @see {@link ImageLoader}\n * @see {@link NgOptimizedImage}\n * @publicApi\n */\nconst IMAGE_LOADER = /*#__PURE__*/new InjectionToken(ngDevMode ? 'ImageLoader' : '', {\n  providedIn: 'root',\n  factory: () => noopImageLoader\n});\n/**\n * Internal helper function that makes it easier to introduce custom image loaders for the\n * `NgOptimizedImage` directive. It is enough to specify a URL builder function to obtain full DI\n * configuration for a given loader: a DI token corresponding to the actual loader function, plus DI\n * tokens managing preconnect check functionality.\n * @param buildUrlFn a function returning a full URL based on loader's configuration\n * @param exampleUrls example of full URLs for a given loader (used in error messages)\n * @returns a set of DI providers corresponding to the configured image loader\n */\nfunction createImageLoader(buildUrlFn, exampleUrls) {\n  return function provideImageLoader(path) {\n    if (!isValidPath(path)) {\n      throwInvalidPathError(path, exampleUrls || []);\n    }\n    // The trailing / is stripped (if provided) to make URL construction (concatenation) easier in\n    // the individual loader functions.\n    path = normalizePath(path);\n    const loaderFn = config => {\n      if (isAbsoluteUrl(config.src)) {\n        // Image loader functions expect an image file name (e.g. `my-image.png`)\n        // or a relative path + a file name (e.g. `/a/b/c/my-image.png`) as an input,\n        // so the final absolute URL can be constructed.\n        // When an absolute URL is provided instead - the loader can not\n        // build a final URL, thus the error is thrown to indicate that.\n        throwUnexpectedAbsoluteUrlError(path, config.src);\n      }\n      return buildUrlFn(path, {\n        ...config,\n        src: normalizeSrc(config.src)\n      });\n    };\n    const providers = [{\n      provide: IMAGE_LOADER,\n      useValue: loaderFn\n    }];\n    return providers;\n  };\n}\nfunction throwInvalidPathError(path, exampleUrls) {\n  throw new _RuntimeError(2959 /* RuntimeErrorCode.INVALID_LOADER_ARGUMENTS */, ngDevMode && `Image loader has detected an invalid path (\\`${path}\\`). ` + `To fix this, supply a path using one of the following formats: ${exampleUrls.join(' or ')}`);\n}\nfunction throwUnexpectedAbsoluteUrlError(path, url) {\n  throw new _RuntimeError(2959 /* RuntimeErrorCode.INVALID_LOADER_ARGUMENTS */, ngDevMode && `Image loader has detected a \\`<img>\\` tag with an invalid \\`ngSrc\\` attribute: ${url}. ` + `This image loader expects \\`ngSrc\\` to be a relative URL - ` + `however the provided value is an absolute URL. ` + `To fix this, provide \\`ngSrc\\` as a path relative to the base URL ` + `configured for this loader (\\`${path}\\`).`);\n}\n\n/**\n * Function that generates an ImageLoader for [Cloudflare Image\n * Resizing](https://developers.cloudflare.com/images/image-resizing/) and turns it into an Angular\n * provider. Note: Cloudflare has multiple image products - this provider is specifically for\n * Cloudflare Image Resizing; it will not work with Cloudflare Images or Cloudflare Polish.\n *\n * @param path Your domain name, e.g. https://mysite.com\n * @returns Provider that provides an ImageLoader function\n *\n * @publicApi\n */\nconst provideCloudflareLoader = /*#__PURE__*/createImageLoader(createCloudflareUrl, ngDevMode ? ['https://<ZONE>/cdn-cgi/image/<OPTIONS>/<SOURCE-IMAGE>'] : undefined);\nfunction createCloudflareUrl(path, config) {\n  let params = `format=auto`;\n  if (config.width) {\n    params += `,width=${config.width}`;\n  }\n  // When requesting a placeholder image we ask for a low quality image to reduce the load time.\n  if (config.isPlaceholder) {\n    params += `,quality=${PLACEHOLDER_QUALITY}`;\n  }\n  // Cloudflare image URLs format:\n  // https://developers.cloudflare.com/images/image-resizing/url-format/\n  return `${path}/cdn-cgi/image/${params}/${config.src}`;\n}\n\n/**\n * Name and URL tester for Cloudinary.\n */\nconst cloudinaryLoaderInfo = {\n  name: 'Cloudinary',\n  testUrl: isCloudinaryUrl\n};\nconst CLOUDINARY_LOADER_REGEX = /https?\\:\\/\\/[^\\/]+\\.cloudinary\\.com\\/.+/;\n/**\n * Tests whether a URL is from Cloudinary CDN.\n */\nfunction isCloudinaryUrl(url) {\n  return CLOUDINARY_LOADER_REGEX.test(url);\n}\n/**\n * Function that generates an ImageLoader for Cloudinary and turns it into an Angular provider.\n *\n * @param path Base URL of your Cloudinary images\n * This URL should match one of the following formats:\n * https://res.cloudinary.com/mysite\n * https://mysite.cloudinary.com\n * https://subdomain.mysite.com\n * @returns Set of providers to configure the Cloudinary loader.\n *\n * @publicApi\n */\nconst provideCloudinaryLoader = /*#__PURE__*/createImageLoader(createCloudinaryUrl, ngDevMode ? ['https://res.cloudinary.com/mysite', 'https://mysite.cloudinary.com', 'https://subdomain.mysite.com'] : undefined);\nfunction createCloudinaryUrl(path, config) {\n  // Cloudinary image URLformat:\n  // https://cloudinary.com/documentation/image_transformations#transformation_url_structure\n  // Example of a Cloudinary image URL:\n  // https://res.cloudinary.com/mysite/image/upload/c_scale,f_auto,q_auto,w_600/marketing/tile-topics-m.png\n  // For a placeholder image, we use the lowest image setting available to reduce the load time\n  // else we use the auto size\n  const quality = config.isPlaceholder ? 'q_auto:low' : 'q_auto';\n  let params = `f_auto,${quality}`;\n  if (config.width) {\n    params += `,w_${config.width}`;\n  }\n  if (config.loaderParams?.['rounded']) {\n    params += `,r_max`;\n  }\n  return `${path}/image/upload/${params}/${config.src}`;\n}\n\n/**\n * Name and URL tester for ImageKit.\n */\nconst imageKitLoaderInfo = {\n  name: 'ImageKit',\n  testUrl: isImageKitUrl\n};\nconst IMAGE_KIT_LOADER_REGEX = /https?\\:\\/\\/[^\\/]+\\.imagekit\\.io\\/.+/;\n/**\n * Tests whether a URL is from ImageKit CDN.\n */\nfunction isImageKitUrl(url) {\n  return IMAGE_KIT_LOADER_REGEX.test(url);\n}\n/**\n * Function that generates an ImageLoader for ImageKit and turns it into an Angular provider.\n *\n * @param path Base URL of your ImageKit images\n * This URL should match one of the following formats:\n * https://ik.imagekit.io/myaccount\n * https://subdomain.mysite.com\n * @returns Set of providers to configure the ImageKit loader.\n *\n * @publicApi\n */\nconst provideImageKitLoader = /*#__PURE__*/createImageLoader(createImagekitUrl, ngDevMode ? ['https://ik.imagekit.io/mysite', 'https://subdomain.mysite.com'] : undefined);\nfunction createImagekitUrl(path, config) {\n  // Example of an ImageKit image URL:\n  // https://ik.imagekit.io/demo/tr:w-300,h-300/medium_cafe_B1iTdD0C.jpg\n  const {\n    src,\n    width\n  } = config;\n  const params = [];\n  if (width) {\n    params.push(`w-${width}`);\n  }\n  // When requesting a placeholder image we ask for a low quality image to reduce the load time.\n  if (config.isPlaceholder) {\n    params.push(`q-${PLACEHOLDER_QUALITY}`);\n  }\n  const urlSegments = params.length ? [path, `tr:${params.join(',')}`, src] : [path, src];\n  const url = new URL(urlSegments.join('/'));\n  return url.href;\n}\n\n/**\n * Name and URL tester for Imgix.\n */\nconst imgixLoaderInfo = {\n  name: 'Imgix',\n  testUrl: isImgixUrl\n};\nconst IMGIX_LOADER_REGEX = /https?\\:\\/\\/[^\\/]+\\.imgix\\.net\\/.+/;\n/**\n * Tests whether a URL is from Imgix CDN.\n */\nfunction isImgixUrl(url) {\n  return IMGIX_LOADER_REGEX.test(url);\n}\n/**\n * Function that generates an ImageLoader for Imgix and turns it into an Angular provider.\n *\n * @param path path to the desired Imgix origin,\n * e.g. https://somepath.imgix.net or https://images.mysite.com\n * @returns Set of providers to configure the Imgix loader.\n *\n * @publicApi\n */\nconst provideImgixLoader = /*#__PURE__*/createImageLoader(createImgixUrl, ngDevMode ? ['https://somepath.imgix.net/'] : undefined);\nfunction createImgixUrl(path, config) {\n  const url = new URL(`${path}/${config.src}`);\n  // This setting ensures the smallest allowable format is set.\n  url.searchParams.set('auto', 'format');\n  if (config.width) {\n    url.searchParams.set('w', config.width.toString());\n  }\n  // When requesting a placeholder image we ask a low quality image to reduce the load time.\n  if (config.isPlaceholder) {\n    url.searchParams.set('q', PLACEHOLDER_QUALITY);\n  }\n  return url.href;\n}\n\n/**\n * Name and URL tester for Netlify.\n */\nconst netlifyLoaderInfo = {\n  name: 'Netlify',\n  testUrl: isNetlifyUrl\n};\nconst NETLIFY_LOADER_REGEX = /https?\\:\\/\\/[^\\/]+\\.netlify\\.app\\/.+/;\n/**\n * Tests whether a URL is from a Netlify site. This won't catch sites with a custom domain,\n * but it's a good start for sites in development. This is only used to warn users who haven't\n * configured an image loader.\n */\nfunction isNetlifyUrl(url) {\n  return NETLIFY_LOADER_REGEX.test(url);\n}\n/**\n * Function that generates an ImageLoader for Netlify and turns it into an Angular provider.\n *\n * @param path optional URL of the desired Netlify site. Defaults to the current site.\n * @returns Set of providers to configure the Netlify loader.\n *\n * @publicApi\n */\nfunction provideNetlifyLoader(path) {\n  if (path && !isValidPath(path)) {\n    throw new _RuntimeError(2959 /* RuntimeErrorCode.INVALID_LOADER_ARGUMENTS */, ngDevMode && `Image loader has detected an invalid path (\\`${path}\\`). ` + `To fix this, supply either the full URL to the Netlify site, or leave it empty to use the current site.`);\n  }\n  if (path) {\n    const url = new URL(path);\n    path = url.origin;\n  }\n  const loaderFn = config => {\n    return createNetlifyUrl(config, path);\n  };\n  const providers = [{\n    provide: IMAGE_LOADER,\n    useValue: loaderFn\n  }];\n  return providers;\n}\nconst validParams = /*#__PURE__*/new Map([['height', 'h'], ['fit', 'fit'], ['quality', 'q'], ['q', 'q'], ['position', 'position']]);\nfunction createNetlifyUrl(config, path) {\n  // Note: `path` can be undefined, in which case we use a fake one to construct a `URL` instance.\n  const url = new URL(path ?? 'https://a/');\n  url.pathname = '/.netlify/images';\n  if (!isAbsoluteUrl(config.src) && !config.src.startsWith('/')) {\n    config.src = '/' + config.src;\n  }\n  url.searchParams.set('url', config.src);\n  if (config.width) {\n    url.searchParams.set('w', config.width.toString());\n  }\n  // When requesting a placeholder image we ask for a low quality image to reduce the load time.\n  // If the quality is specified in the loader config - always use provided value.\n  const configQuality = config.loaderParams?.['quality'] ?? config.loaderParams?.['q'];\n  if (config.isPlaceholder && !configQuality) {\n    url.searchParams.set('q', PLACEHOLDER_QUALITY);\n  }\n  for (const [param, value] of Object.entries(config.loaderParams ?? {})) {\n    if (validParams.has(param)) {\n      url.searchParams.set(validParams.get(param), value.toString());\n    } else {\n      if (ngDevMode) {\n        console.warn(_formatRuntimeError(2959 /* RuntimeErrorCode.INVALID_LOADER_ARGUMENTS */, `The Netlify image loader has detected an \\`<img>\\` tag with the unsupported attribute \"\\`${param}\\`\".`));\n      }\n    }\n  }\n  // The \"a\" hostname is used for relative URLs, so we can remove it from the final URL.\n  return url.hostname === 'a' ? url.href.replace(url.origin, '') : url.href;\n}\n\n// Assembles directive details string, useful for error messages.\nfunction imgDirectiveDetails(ngSrc, includeNgSrc = true) {\n  const ngSrcInfo = includeNgSrc ? `(activated on an <img> element with the \\`ngSrc=\"${ngSrc}\"\\`) ` : '';\n  return `The NgOptimizedImage directive ${ngSrcInfo}has detected that`;\n}\n\n/**\n * Asserts that the application is in development mode. Throws an error if the application is in\n * production mode. This assert can be used to make sure that there is no dev-mode code invoked in\n * the prod mode accidentally.\n */\nfunction assertDevMode(checkName) {\n  if (!ngDevMode) {\n    throw new _RuntimeError(2958 /* RuntimeErrorCode.UNEXPECTED_DEV_MODE_CHECK_IN_PROD_MODE */, `Unexpected invocation of the ${checkName} in the prod mode. ` + `Please make sure that the prod mode is enabled for production builds.`);\n  }\n}\n\n/**\n * Observer that detects whether an image with `NgOptimizedImage`\n * is treated as a Largest Contentful Paint (LCP) element. If so,\n * asserts that the image has the `priority` attribute.\n *\n * Note: this is a dev-mode only class and it does not appear in prod bundles,\n * thus there is no `ngDevMode` use in the code.\n *\n * Based on https://web.dev/lcp/#measure-lcp-in-javascript.\n */\nlet LCPImageObserver = /*#__PURE__*/(() => {\n  class LCPImageObserver {\n    // Map of full image URLs -> original `ngSrc` values.\n    images = new Map();\n    window = null;\n    observer = null;\n    constructor() {\n      const isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n      assertDevMode('LCP checker');\n      const win = inject(DOCUMENT).defaultView;\n      if (isBrowser && typeof PerformanceObserver !== 'undefined') {\n        this.window = win;\n        this.observer = this.initPerformanceObserver();\n      }\n    }\n    /**\n     * Inits PerformanceObserver and subscribes to LCP events.\n     * Based on https://web.dev/lcp/#measure-lcp-in-javascript\n     */\n    initPerformanceObserver() {\n      const observer = new PerformanceObserver(entryList => {\n        const entries = entryList.getEntries();\n        if (entries.length === 0) return;\n        // We use the latest entry produced by the `PerformanceObserver` as the best\n        // signal on which element is actually an LCP one. As an example, the first image to load on\n        // a page, by virtue of being the only thing on the page so far, is often a LCP candidate\n        // and gets reported by PerformanceObserver, but isn't necessarily the LCP element.\n        const lcpElement = entries[entries.length - 1];\n        // Cast to `any` due to missing `element` on the `LargestContentfulPaint` type of entry.\n        // See https://developer.mozilla.org/en-US/docs/Web/API/LargestContentfulPaint\n        const imgSrc = lcpElement.element?.src ?? '';\n        // Exclude `data:` and `blob:` URLs, since they are not supported by the directive.\n        if (imgSrc.startsWith('data:') || imgSrc.startsWith('blob:')) return;\n        const img = this.images.get(imgSrc);\n        if (!img) return;\n        if (!img.priority && !img.alreadyWarnedPriority) {\n          img.alreadyWarnedPriority = true;\n          logMissingPriorityError(imgSrc);\n        }\n        if (img.modified && !img.alreadyWarnedModified) {\n          img.alreadyWarnedModified = true;\n          logModifiedWarning(imgSrc);\n        }\n      });\n      observer.observe({\n        type: 'largest-contentful-paint',\n        buffered: true\n      });\n      return observer;\n    }\n    registerImage(rewrittenSrc, originalNgSrc, isPriority) {\n      if (!this.observer) return;\n      const newObservedImageState = {\n        priority: isPriority,\n        modified: false,\n        alreadyWarnedModified: false,\n        alreadyWarnedPriority: false\n      };\n      this.images.set(getUrl(rewrittenSrc, this.window).href, newObservedImageState);\n    }\n    unregisterImage(rewrittenSrc) {\n      if (!this.observer) return;\n      this.images.delete(getUrl(rewrittenSrc, this.window).href);\n    }\n    updateImage(originalSrc, newSrc) {\n      if (!this.observer) return;\n      const originalUrl = getUrl(originalSrc, this.window).href;\n      const img = this.images.get(originalUrl);\n      if (img) {\n        img.modified = true;\n        this.images.set(getUrl(newSrc, this.window).href, img);\n        this.images.delete(originalUrl);\n      }\n    }\n    ngOnDestroy() {\n      if (!this.observer) return;\n      this.observer.disconnect();\n      this.images.clear();\n    }\n    static ɵfac = function LCPImageObserver_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LCPImageObserver)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: LCPImageObserver,\n      factory: LCPImageObserver.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return LCPImageObserver;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction logMissingPriorityError(ngSrc) {\n  const directiveDetails = imgDirectiveDetails(ngSrc);\n  console.error(_formatRuntimeError(2955 /* RuntimeErrorCode.LCP_IMG_MISSING_PRIORITY */, `${directiveDetails} this image is the Largest Contentful Paint (LCP) ` + `element but was not marked \"priority\". This image should be marked ` + `\"priority\" in order to prioritize its loading. ` + `To fix this, add the \"priority\" attribute.`));\n}\nfunction logModifiedWarning(ngSrc) {\n  const directiveDetails = imgDirectiveDetails(ngSrc);\n  console.warn(_formatRuntimeError(2964 /* RuntimeErrorCode.LCP_IMG_NGSRC_MODIFIED */, `${directiveDetails} this image is the Largest Contentful Paint (LCP) ` + `element and has had its \"ngSrc\" attribute modified. This can cause ` + `slower loading performance. It is recommended not to modify the \"ngSrc\" ` + `property on any image which could be the LCP element.`));\n}\n\n// Set of origins that are always excluded from the preconnect checks.\nconst INTERNAL_PRECONNECT_CHECK_BLOCKLIST = /*#__PURE__*/new Set(['localhost', '127.0.0.1', '0.0.0.0']);\n/**\n * Injection token to configure which origins should be excluded\n * from the preconnect checks. It can either be a single string or an array of strings\n * to represent a group of origins, for example:\n *\n * ```ts\n *  {provide: PRECONNECT_CHECK_BLOCKLIST, useValue: 'https://your-domain.com'}\n * ```\n *\n * or:\n *\n * ```ts\n *  {provide: PRECONNECT_CHECK_BLOCKLIST,\n *   useValue: ['https://your-domain-1.com', 'https://your-domain-2.com']}\n * ```\n *\n * @publicApi\n */\nconst PRECONNECT_CHECK_BLOCKLIST = /*#__PURE__*/new InjectionToken(ngDevMode ? 'PRECONNECT_CHECK_BLOCKLIST' : '');\n/**\n * Contains the logic to detect whether an image, marked with the \"priority\" attribute\n * has a corresponding `<link rel=\"preconnect\">` tag in the `document.head`.\n *\n * Note: this is a dev-mode only class, which should not appear in prod bundles,\n * thus there is no `ngDevMode` use in the code.\n */\nlet PreconnectLinkChecker = /*#__PURE__*/(() => {\n  class PreconnectLinkChecker {\n    document = inject(DOCUMENT);\n    /**\n     * Set of <link rel=\"preconnect\"> tags found on this page.\n     * The `null` value indicates that there was no DOM query operation performed.\n     */\n    preconnectLinks = null;\n    /*\n     * Keep track of all already seen origin URLs to avoid repeating the same check.\n     */\n    alreadySeen = new Set();\n    window = this.document.defaultView;\n    blocklist = new Set(INTERNAL_PRECONNECT_CHECK_BLOCKLIST);\n    constructor() {\n      assertDevMode('preconnect link checker');\n      const blocklist = inject(PRECONNECT_CHECK_BLOCKLIST, {\n        optional: true\n      });\n      if (blocklist) {\n        this.populateBlocklist(blocklist);\n      }\n    }\n    populateBlocklist(origins) {\n      if (Array.isArray(origins)) {\n        deepForEach(origins, origin => {\n          this.blocklist.add(extractHostname(origin));\n        });\n      } else {\n        this.blocklist.add(extractHostname(origins));\n      }\n    }\n    /**\n     * Checks that a preconnect resource hint exists in the head for the\n     * given src.\n     *\n     * @param rewrittenSrc src formatted with loader\n     * @param originalNgSrc ngSrc value\n     */\n    assertPreconnect(rewrittenSrc, originalNgSrc) {\n      if (typeof ngServerMode !== 'undefined' && ngServerMode) return;\n      const imgUrl = getUrl(rewrittenSrc, this.window);\n      if (this.blocklist.has(imgUrl.hostname) || this.alreadySeen.has(imgUrl.origin)) return;\n      // Register this origin as seen, so we don't check it again later.\n      this.alreadySeen.add(imgUrl.origin);\n      // Note: we query for preconnect links only *once* and cache the results\n      // for the entire lifespan of an application, since it's unlikely that the\n      // list would change frequently. This allows to make sure there are no\n      // performance implications of making extra DOM lookups for each image.\n      this.preconnectLinks ??= this.queryPreconnectLinks();\n      if (!this.preconnectLinks.has(imgUrl.origin)) {\n        console.warn(_formatRuntimeError(2956 /* RuntimeErrorCode.PRIORITY_IMG_MISSING_PRECONNECT_TAG */, `${imgDirectiveDetails(originalNgSrc)} there is no preconnect tag present for this ` + `image. Preconnecting to the origin(s) that serve priority images ensures that these ` + `images are delivered as soon as possible. To fix this, please add the following ` + `element into the <head> of the document:\\n` + `  <link rel=\"preconnect\" href=\"${imgUrl.origin}\">`));\n      }\n    }\n    queryPreconnectLinks() {\n      const preconnectUrls = new Set();\n      const links = this.document.querySelectorAll('link[rel=preconnect]');\n      for (const link of links) {\n        const url = getUrl(link.href, this.window);\n        preconnectUrls.add(url.origin);\n      }\n      return preconnectUrls;\n    }\n    ngOnDestroy() {\n      this.preconnectLinks?.clear();\n      this.alreadySeen.clear();\n    }\n    static ɵfac = function PreconnectLinkChecker_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PreconnectLinkChecker)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: PreconnectLinkChecker,\n      factory: PreconnectLinkChecker.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return PreconnectLinkChecker;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Invokes a callback for each element in the array. Also invokes a callback\n * recursively for each nested array.\n */\nfunction deepForEach(input, fn) {\n  for (let value of input) {\n    Array.isArray(value) ? deepForEach(value, fn) : fn(value);\n  }\n}\n\n/**\n * In SSR scenarios, a preload `<link>` element is generated for priority images.\n * Having a large number of preload tags may negatively affect the performance,\n * so we warn developers (by throwing an error) if the number of preloaded images\n * is above a certain threshold. This const specifies this threshold.\n */\nconst DEFAULT_PRELOADED_IMAGES_LIMIT = 5;\n/**\n * Helps to keep track of priority images that already have a corresponding\n * preload tag (to avoid generating multiple preload tags with the same URL).\n *\n * This Set tracks the original src passed into the `ngSrc` input not the src after it has been\n * run through the specified `IMAGE_LOADER`.\n */\nconst PRELOADED_IMAGES = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'NG_OPTIMIZED_PRELOADED_IMAGES' : '', {\n  providedIn: 'root',\n  factory: () => new Set()\n});\n\n/**\n * @description Contains the logic needed to track and add preload link tags to the `<head>` tag. It\n * will also track what images have already had preload link tags added so as to not duplicate link\n * tags.\n *\n * In dev mode this service will validate that the number of preloaded images does not exceed the\n * configured default preloaded images limit: {@link DEFAULT_PRELOADED_IMAGES_LIMIT}.\n */\nlet PreloadLinkCreator = /*#__PURE__*/(() => {\n  class PreloadLinkCreator {\n    preloadedImages = inject(PRELOADED_IMAGES);\n    document = inject(DOCUMENT);\n    errorShown = false;\n    /**\n     * @description Add a preload `<link>` to the `<head>` of the `index.html` that is served from the\n     * server while using Angular Universal and SSR to kick off image loads for high priority images.\n     *\n     * The `sizes` (passed in from the user) and `srcset` (parsed and formatted from `ngSrcset`)\n     * properties used to set the corresponding attributes, `imagesizes` and `imagesrcset`\n     * respectively, on the preload `<link>` tag so that the correctly sized image is preloaded from\n     * the CDN.\n     *\n     * {@link https://web.dev/preload-responsive-images/#imagesrcset-and-imagesizes}\n     *\n     * @param renderer The `Renderer2` passed in from the directive\n     * @param src The original src of the image that is set on the `ngSrc` input.\n     * @param srcset The parsed and formatted srcset created from the `ngSrcset` input\n     * @param sizes The value of the `sizes` attribute passed in to the `<img>` tag\n     */\n    createPreloadLinkTag(renderer, src, srcset, sizes) {\n      if (ngDevMode && !this.errorShown && this.preloadedImages.size >= DEFAULT_PRELOADED_IMAGES_LIMIT) {\n        this.errorShown = true;\n        console.warn(_formatRuntimeError(2961 /* RuntimeErrorCode.TOO_MANY_PRELOADED_IMAGES */, `The \\`NgOptimizedImage\\` directive has detected that more than ` + `${DEFAULT_PRELOADED_IMAGES_LIMIT} images were marked as priority. ` + `This might negatively affect an overall performance of the page. ` + `To fix this, remove the \"priority\" attribute from images with less priority.`));\n      }\n      if (this.preloadedImages.has(src)) {\n        return;\n      }\n      this.preloadedImages.add(src);\n      const preload = renderer.createElement('link');\n      renderer.setAttribute(preload, 'as', 'image');\n      renderer.setAttribute(preload, 'href', src);\n      renderer.setAttribute(preload, 'rel', 'preload');\n      renderer.setAttribute(preload, 'fetchpriority', 'high');\n      if (sizes) {\n        renderer.setAttribute(preload, 'imageSizes', sizes);\n      }\n      if (srcset) {\n        renderer.setAttribute(preload, 'imageSrcset', srcset);\n      }\n      renderer.appendChild(this.document.head, preload);\n    }\n    static ɵfac = function PreloadLinkCreator_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PreloadLinkCreator)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: PreloadLinkCreator,\n      factory: PreloadLinkCreator.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return PreloadLinkCreator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * When a Base64-encoded image is passed as an input to the `NgOptimizedImage` directive,\n * an error is thrown. The image content (as a string) might be very long, thus making\n * it hard to read an error message if the entire string is included. This const defines\n * the number of characters that should be included into the error message. The rest\n * of the content is truncated.\n */\nconst BASE64_IMG_MAX_LENGTH_IN_ERROR = 50;\n/**\n * RegExpr to determine whether a src in a srcset is using width descriptors.\n * Should match something like: \"100w, 200w\".\n */\nconst VALID_WIDTH_DESCRIPTOR_SRCSET = /^((\\s*\\d+w\\s*(,|$)){1,})$/;\n/**\n * RegExpr to determine whether a src in a srcset is using density descriptors.\n * Should match something like: \"1x, 2x, 50x\". Also supports decimals like \"1.5x, 1.50x\".\n */\nconst VALID_DENSITY_DESCRIPTOR_SRCSET = /^((\\s*\\d+(\\.\\d+)?x\\s*(,|$)){1,})$/;\n/**\n * Srcset values with a density descriptor higher than this value will actively\n * throw an error. Such densities are not permitted as they cause image sizes\n * to be unreasonably large and slow down LCP.\n */\nconst ABSOLUTE_SRCSET_DENSITY_CAP = 3;\n/**\n * Used only in error message text to communicate best practices, as we will\n * only throw based on the slightly more conservative ABSOLUTE_SRCSET_DENSITY_CAP.\n */\nconst RECOMMENDED_SRCSET_DENSITY_CAP = 2;\n/**\n * Used in generating automatic density-based srcsets\n */\nconst DENSITY_SRCSET_MULTIPLIERS = [1, 2];\n/**\n * Used to determine which breakpoints to use on full-width images\n */\nconst VIEWPORT_BREAKPOINT_CUTOFF = 640;\n/**\n * Used to determine whether two aspect ratios are similar in value.\n */\nconst ASPECT_RATIO_TOLERANCE = 0.1;\n/**\n * Used to determine whether the image has been requested at an overly\n * large size compared to the actual rendered image size (after taking\n * into account a typical device pixel ratio). In pixels.\n */\nconst OVERSIZED_IMAGE_TOLERANCE = 1000;\n/**\n * Used to limit automatic srcset generation of very large sources for\n * fixed-size images. In pixels.\n */\nconst FIXED_SRCSET_WIDTH_LIMIT = 1920;\nconst FIXED_SRCSET_HEIGHT_LIMIT = 1080;\n/**\n * Default blur radius of the CSS filter used on placeholder images, in pixels\n */\nconst PLACEHOLDER_BLUR_AMOUNT = 15;\n/**\n * Placeholder dimension (height or width) limit in pixels. Angular produces a warning\n * when this limit is crossed.\n */\nconst PLACEHOLDER_DIMENSION_LIMIT = 1000;\n/**\n * Used to warn or error when the user provides an overly large dataURL for the placeholder\n * attribute.\n * Character count of Base64 images is 1 character per byte, and base64 encoding is approximately\n * 33% larger than base images, so 4000 characters is around 3KB on disk and 10000 characters is\n * around 7.7KB. Experimentally, 4000 characters is about 20x20px in PNG or medium-quality JPEG\n * format, and 10,000 is around 50x50px, but there's quite a bit of variation depending on how the\n * image is saved.\n */\nconst DATA_URL_WARN_LIMIT = 4000;\nconst DATA_URL_ERROR_LIMIT = 10000;\n/** Info about built-in loaders we can test for. */\nconst BUILT_IN_LOADERS = [imgixLoaderInfo, imageKitLoaderInfo, cloudinaryLoaderInfo, netlifyLoaderInfo];\n/**\n * Threshold for the PRIORITY_TRUE_COUNT\n */\nconst PRIORITY_COUNT_THRESHOLD = 10;\n/**\n * This count is used to log a devMode warning\n * when the count of directive instances with priority=true\n * exceeds the threshold PRIORITY_COUNT_THRESHOLD\n */\nlet IMGS_WITH_PRIORITY_ATTR_COUNT = 0;\n/**\n * Directive that improves image loading performance by enforcing best practices.\n *\n * `NgOptimizedImage` ensures that the loading of the Largest Contentful Paint (LCP) image is\n * prioritized by:\n * - Automatically setting the `fetchpriority` attribute on the `<img>` tag\n * - Lazy loading non-priority images by default\n * - Automatically generating a preconnect link tag in the document head\n *\n * In addition, the directive:\n * - Generates appropriate asset URLs if a corresponding `ImageLoader` function is provided\n * - Automatically generates a srcset\n * - Requires that `width` and `height` are set\n * - Warns if `width` or `height` have been set incorrectly\n * - Warns if the image will be visually distorted when rendered\n *\n * @usageNotes\n * The `NgOptimizedImage` directive is marked as [standalone](guide/components/importing) and can\n * be imported directly.\n *\n * Follow the steps below to enable and use the directive:\n * 1. Import it into the necessary NgModule or a standalone Component.\n * 2. Optionally provide an `ImageLoader` if you use an image hosting service.\n * 3. Update the necessary `<img>` tags in templates and replace `src` attributes with `ngSrc`.\n * Using a `ngSrc` allows the directive to control when the `src` gets set, which triggers an image\n * download.\n *\n * Step 1: import the `NgOptimizedImage` directive.\n *\n * ```ts\n * import { NgOptimizedImage } from '@angular/common';\n *\n * // Include it into the necessary NgModule\n * @NgModule({\n *   imports: [NgOptimizedImage],\n * })\n * class AppModule {}\n *\n * // ... or a standalone Component\n * @Component({\n *   imports: [NgOptimizedImage],\n * })\n * class MyStandaloneComponent {}\n * ```\n *\n * Step 2: configure a loader.\n *\n * To use the **default loader**: no additional code changes are necessary. The URL returned by the\n * generic loader will always match the value of \"src\". In other words, this loader applies no\n * transformations to the resource URL and the value of the `ngSrc` attribute will be used as is.\n *\n * To use an existing loader for a **third-party image service**: add the provider factory for your\n * chosen service to the `providers` array. In the example below, the Imgix loader is used:\n *\n * ```ts\n * import {provideImgixLoader} from '@angular/common';\n *\n * // Call the function and add the result to the `providers` array:\n * providers: [\n *   provideImgixLoader(\"https://my.base.url/\"),\n * ],\n * ```\n *\n * The `NgOptimizedImage` directive provides the following functions:\n * - `provideCloudflareLoader`\n * - `provideCloudinaryLoader`\n * - `provideImageKitLoader`\n * - `provideImgixLoader`\n *\n * If you use a different image provider, you can create a custom loader function as described\n * below.\n *\n * To use a **custom loader**: provide your loader function as a value for the `IMAGE_LOADER` DI\n * token.\n *\n * ```ts\n * import {IMAGE_LOADER, ImageLoaderConfig} from '@angular/common';\n *\n * // Configure the loader using the `IMAGE_LOADER` token.\n * providers: [\n *   {\n *      provide: IMAGE_LOADER,\n *      useValue: (config: ImageLoaderConfig) => {\n *        return `https://example.com/${config.src}-${config.width}.jpg`;\n *      }\n *   },\n * ],\n * ```\n *\n * Step 3: update `<img>` tags in templates to use `ngSrc` instead of `src`.\n *\n * ```html\n * <img ngSrc=\"logo.png\" width=\"200\" height=\"100\">\n * ```\n *\n * @publicApi\n */\nlet NgOptimizedImage = /*#__PURE__*/(() => {\n  class NgOptimizedImage {\n    imageLoader = inject(IMAGE_LOADER);\n    config = processConfig(inject(_IMAGE_CONFIG));\n    renderer = inject(Renderer2);\n    imgElement = inject(ElementRef).nativeElement;\n    injector = inject(Injector);\n    // An LCP image observer should be injected only in development mode.\n    // Do not assign it to `null` to avoid having a redundant property in the production bundle.\n    lcpObserver;\n    /**\n     * Calculate the rewritten `src` once and store it.\n     * This is needed to avoid repetitive calculations and make sure the directive cleanup in the\n     * `ngOnDestroy` does not rely on the `IMAGE_LOADER` logic (which in turn can rely on some other\n     * instance that might be already destroyed).\n     */\n    _renderedSrc = null;\n    /**\n     * Name of the source image.\n     * Image name will be processed by the image loader and the final URL will be applied as the `src`\n     * property of the image.\n     */\n    ngSrc;\n    /**\n     * A comma separated list of width or density descriptors.\n     * The image name will be taken from `ngSrc` and combined with the list of width or density\n     * descriptors to generate the final `srcset` property of the image.\n     *\n     * Example:\n     * ```html\n     * <img ngSrc=\"hello.jpg\" ngSrcset=\"100w, 200w\" />  =>\n     * <img src=\"path/hello.jpg\" srcset=\"path/hello.jpg?w=100 100w, path/hello.jpg?w=200 200w\" />\n     * ```\n     */\n    ngSrcset;\n    /**\n     * The base `sizes` attribute passed through to the `<img>` element.\n     * Providing sizes causes the image to create an automatic responsive srcset.\n     */\n    sizes;\n    /**\n     * For responsive images: the intrinsic width of the image in pixels.\n     * For fixed size images: the desired rendered width of the image in pixels.\n     */\n    width;\n    /**\n     * For responsive images: the intrinsic height of the image in pixels.\n     * For fixed size images: the desired rendered height of the image in pixels.\n     */\n    height;\n    /**\n     * The desired loading behavior (lazy, eager, or auto). Defaults to `lazy`,\n     * which is recommended for most images.\n     *\n     * Warning: Setting images as loading=\"eager\" or loading=\"auto\" marks them\n     * as non-priority images and can hurt loading performance. For images which\n     * may be the LCP element, use the `priority` attribute instead of `loading`.\n     */\n    loading;\n    /**\n     * Indicates whether this image should have a high priority.\n     */\n    priority = false;\n    /**\n     * Data to pass through to custom loaders.\n     */\n    loaderParams;\n    /**\n     * Disables automatic srcset generation for this image.\n     */\n    disableOptimizedSrcset = false;\n    /**\n     * Sets the image to \"fill mode\", which eliminates the height/width requirement and adds\n     * styles such that the image fills its containing element.\n     */\n    fill = false;\n    /**\n     * A URL or data URL for an image to be used as a placeholder while this image loads.\n     */\n    placeholder;\n    /**\n     * Configuration object for placeholder settings. Options:\n     *   * blur: Setting this to false disables the automatic CSS blur.\n     */\n    placeholderConfig;\n    /**\n     * Value of the `src` attribute if set on the host `<img>` element.\n     * This input is exclusively read to assert that `src` is not set in conflict\n     * with `ngSrc` and that images don't start to load until a lazy loading strategy is set.\n     * @internal\n     */\n    src;\n    /**\n     * Value of the `srcset` attribute if set on the host `<img>` element.\n     * This input is exclusively read to assert that `srcset` is not set in conflict\n     * with `ngSrcset` and that images don't start to load until a lazy loading strategy is set.\n     * @internal\n     */\n    srcset;\n    constructor() {\n      if (ngDevMode) {\n        this.lcpObserver = this.injector.get(LCPImageObserver);\n        // Using `DestroyRef` to avoid having an empty `ngOnDestroy` method since this\n        // is only run in development mode.\n        const destroyRef = inject(DestroyRef);\n        destroyRef.onDestroy(() => {\n          if (!this.priority && this._renderedSrc !== null) {\n            this.lcpObserver.unregisterImage(this._renderedSrc);\n          }\n        });\n      }\n    }\n    /** @nodoc */\n    ngOnInit() {\n      _performanceMarkFeature('NgOptimizedImage');\n      if (ngDevMode) {\n        const ngZone = this.injector.get(NgZone);\n        assertNonEmptyInput(this, 'ngSrc', this.ngSrc);\n        assertValidNgSrcset(this, this.ngSrcset);\n        assertNoConflictingSrc(this);\n        if (this.ngSrcset) {\n          assertNoConflictingSrcset(this);\n        }\n        assertNotBase64Image(this);\n        assertNotBlobUrl(this);\n        if (this.fill) {\n          assertEmptyWidthAndHeight(this);\n          // This leaves the Angular zone to avoid triggering unnecessary change detection cycles when\n          // `load` tasks are invoked on images.\n          ngZone.runOutsideAngular(() => assertNonZeroRenderedHeight(this, this.imgElement, this.renderer));\n        } else {\n          assertNonEmptyWidthAndHeight(this);\n          if (this.height !== undefined) {\n            assertGreaterThanZero(this, this.height, 'height');\n          }\n          if (this.width !== undefined) {\n            assertGreaterThanZero(this, this.width, 'width');\n          }\n          // Only check for distorted images when not in fill mode, where\n          // images may be intentionally stretched, cropped or letterboxed.\n          ngZone.runOutsideAngular(() => assertNoImageDistortion(this, this.imgElement, this.renderer));\n        }\n        assertValidLoadingInput(this);\n        if (!this.ngSrcset) {\n          assertNoComplexSizes(this);\n        }\n        assertValidPlaceholder(this, this.imageLoader);\n        assertNotMissingBuiltInLoader(this.ngSrc, this.imageLoader);\n        assertNoNgSrcsetWithoutLoader(this, this.imageLoader);\n        assertNoLoaderParamsWithoutLoader(this, this.imageLoader);\n        ngZone.runOutsideAngular(() => {\n          this.lcpObserver.registerImage(this.getRewrittenSrc(), this.ngSrc, this.priority);\n        });\n        if (this.priority) {\n          const checker = this.injector.get(PreconnectLinkChecker);\n          checker.assertPreconnect(this.getRewrittenSrc(), this.ngSrc);\n          if (typeof ngServerMode !== 'undefined' && !ngServerMode) {\n            const applicationRef = this.injector.get(ApplicationRef);\n            assetPriorityCountBelowThreshold(applicationRef);\n          }\n        }\n      }\n      if (this.placeholder) {\n        this.removePlaceholderOnLoad(this.imgElement);\n      }\n      this.setHostAttributes();\n    }\n    setHostAttributes() {\n      // Must set width/height explicitly in case they are bound (in which case they will\n      // only be reflected and not found by the browser)\n      if (this.fill) {\n        this.sizes ||= '100vw';\n      } else {\n        this.setHostAttribute('width', this.width.toString());\n        this.setHostAttribute('height', this.height.toString());\n      }\n      this.setHostAttribute('loading', this.getLoadingBehavior());\n      this.setHostAttribute('fetchpriority', this.getFetchPriority());\n      // The `data-ng-img` attribute flags an image as using the directive, to allow\n      // for analysis of the directive's performance.\n      this.setHostAttribute('ng-img', 'true');\n      // The `src` and `srcset` attributes should be set last since other attributes\n      // could affect the image's loading behavior.\n      const rewrittenSrcset = this.updateSrcAndSrcset();\n      if (this.sizes) {\n        if (this.getLoadingBehavior() === 'lazy') {\n          this.setHostAttribute('sizes', 'auto, ' + this.sizes);\n        } else {\n          this.setHostAttribute('sizes', this.sizes);\n        }\n      } else {\n        if (this.ngSrcset && VALID_WIDTH_DESCRIPTOR_SRCSET.test(this.ngSrcset) && this.getLoadingBehavior() === 'lazy') {\n          this.setHostAttribute('sizes', 'auto, 100vw');\n        }\n      }\n      if (typeof ngServerMode !== 'undefined' && ngServerMode && this.priority) {\n        const preloadLinkCreator = this.injector.get(PreloadLinkCreator);\n        preloadLinkCreator.createPreloadLinkTag(this.renderer, this.getRewrittenSrc(), rewrittenSrcset, this.sizes);\n      }\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (ngDevMode) {\n        assertNoPostInitInputChange(this, changes, ['ngSrcset', 'width', 'height', 'priority', 'fill', 'loading', 'sizes', 'loaderParams', 'disableOptimizedSrcset']);\n      }\n      if (changes['ngSrc'] && !changes['ngSrc'].isFirstChange()) {\n        const oldSrc = this._renderedSrc;\n        this.updateSrcAndSrcset(true);\n        if (ngDevMode) {\n          const newSrc = this._renderedSrc;\n          if (oldSrc && newSrc && oldSrc !== newSrc) {\n            const ngZone = this.injector.get(NgZone);\n            ngZone.runOutsideAngular(() => {\n              this.lcpObserver.updateImage(oldSrc, newSrc);\n            });\n          }\n        }\n      }\n      if (ngDevMode && changes['placeholder']?.currentValue && typeof ngServerMode !== 'undefined' && !ngServerMode) {\n        assertPlaceholderDimensions(this, this.imgElement);\n      }\n    }\n    callImageLoader(configWithoutCustomParams) {\n      let augmentedConfig = configWithoutCustomParams;\n      if (this.loaderParams) {\n        augmentedConfig.loaderParams = this.loaderParams;\n      }\n      return this.imageLoader(augmentedConfig);\n    }\n    getLoadingBehavior() {\n      if (!this.priority && this.loading !== undefined) {\n        return this.loading;\n      }\n      return this.priority ? 'eager' : 'lazy';\n    }\n    getFetchPriority() {\n      return this.priority ? 'high' : 'auto';\n    }\n    getRewrittenSrc() {\n      // ImageLoaderConfig supports setting a width property. However, we're not setting width here\n      // because if the developer uses rendered width instead of intrinsic width in the HTML width\n      // attribute, the image requested may be too small for 2x+ screens.\n      if (!this._renderedSrc) {\n        const imgConfig = {\n          src: this.ngSrc\n        };\n        // Cache calculated image src to reuse it later in the code.\n        this._renderedSrc = this.callImageLoader(imgConfig);\n      }\n      return this._renderedSrc;\n    }\n    getRewrittenSrcset() {\n      const widthSrcSet = VALID_WIDTH_DESCRIPTOR_SRCSET.test(this.ngSrcset);\n      const finalSrcs = this.ngSrcset.split(',').filter(src => src !== '').map(srcStr => {\n        srcStr = srcStr.trim();\n        const width = widthSrcSet ? parseFloat(srcStr) : parseFloat(srcStr) * this.width;\n        return `${this.callImageLoader({\n          src: this.ngSrc,\n          width\n        })} ${srcStr}`;\n      });\n      return finalSrcs.join(', ');\n    }\n    getAutomaticSrcset() {\n      if (this.sizes) {\n        return this.getResponsiveSrcset();\n      } else {\n        return this.getFixedSrcset();\n      }\n    }\n    getResponsiveSrcset() {\n      const {\n        breakpoints\n      } = this.config;\n      let filteredBreakpoints = breakpoints;\n      if (this.sizes?.trim() === '100vw') {\n        // Since this is a full-screen-width image, our srcset only needs to include\n        // breakpoints with full viewport widths.\n        filteredBreakpoints = breakpoints.filter(bp => bp >= VIEWPORT_BREAKPOINT_CUTOFF);\n      }\n      const finalSrcs = filteredBreakpoints.map(bp => `${this.callImageLoader({\n        src: this.ngSrc,\n        width: bp\n      })} ${bp}w`);\n      return finalSrcs.join(', ');\n    }\n    updateSrcAndSrcset(forceSrcRecalc = false) {\n      if (forceSrcRecalc) {\n        // Reset cached value, so that the followup `getRewrittenSrc()` call\n        // will recalculate it and update the cache.\n        this._renderedSrc = null;\n      }\n      const rewrittenSrc = this.getRewrittenSrc();\n      this.setHostAttribute('src', rewrittenSrc);\n      let rewrittenSrcset = undefined;\n      if (this.ngSrcset) {\n        rewrittenSrcset = this.getRewrittenSrcset();\n      } else if (this.shouldGenerateAutomaticSrcset()) {\n        rewrittenSrcset = this.getAutomaticSrcset();\n      }\n      if (rewrittenSrcset) {\n        this.setHostAttribute('srcset', rewrittenSrcset);\n      }\n      return rewrittenSrcset;\n    }\n    getFixedSrcset() {\n      const finalSrcs = DENSITY_SRCSET_MULTIPLIERS.map(multiplier => `${this.callImageLoader({\n        src: this.ngSrc,\n        width: this.width * multiplier\n      })} ${multiplier}x`);\n      return finalSrcs.join(', ');\n    }\n    shouldGenerateAutomaticSrcset() {\n      let oversizedImage = false;\n      if (!this.sizes) {\n        oversizedImage = this.width > FIXED_SRCSET_WIDTH_LIMIT || this.height > FIXED_SRCSET_HEIGHT_LIMIT;\n      }\n      return !this.disableOptimizedSrcset && !this.srcset && this.imageLoader !== noopImageLoader && !oversizedImage;\n    }\n    /**\n     * Returns an image url formatted for use with the CSS background-image property. Expects one of:\n     * * A base64 encoded image, which is wrapped and passed through.\n     * * A boolean. If true, calls the image loader to generate a small placeholder url.\n     */\n    generatePlaceholder(placeholderInput) {\n      const {\n        placeholderResolution\n      } = this.config;\n      if (placeholderInput === true) {\n        return `url(${this.callImageLoader({\n          src: this.ngSrc,\n          width: placeholderResolution,\n          isPlaceholder: true\n        })})`;\n      } else if (typeof placeholderInput === 'string') {\n        return `url(${placeholderInput})`;\n      }\n      return null;\n    }\n    /**\n     * Determines if blur should be applied, based on an optional boolean\n     * property `blur` within the optional configuration object `placeholderConfig`.\n     */\n    shouldBlurPlaceholder(placeholderConfig) {\n      if (!placeholderConfig || !placeholderConfig.hasOwnProperty('blur')) {\n        return true;\n      }\n      return Boolean(placeholderConfig.blur);\n    }\n    removePlaceholderOnLoad(img) {\n      const callback = () => {\n        const changeDetectorRef = this.injector.get(ChangeDetectorRef);\n        removeLoadListenerFn();\n        removeErrorListenerFn();\n        this.placeholder = false;\n        changeDetectorRef.markForCheck();\n      };\n      const removeLoadListenerFn = this.renderer.listen(img, 'load', callback);\n      const removeErrorListenerFn = this.renderer.listen(img, 'error', callback);\n      callOnLoadIfImageIsLoaded(img, callback);\n    }\n    setHostAttribute(name, value) {\n      this.renderer.setAttribute(this.imgElement, name, value);\n    }\n    static ɵfac = function NgOptimizedImage_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgOptimizedImage)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgOptimizedImage,\n      selectors: [[\"img\", \"ngSrc\", \"\"]],\n      hostVars: 18,\n      hostBindings: function NgOptimizedImage_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"position\", ctx.fill ? \"absolute\" : null)(\"width\", ctx.fill ? \"100%\" : null)(\"height\", ctx.fill ? \"100%\" : null)(\"inset\", ctx.fill ? \"0\" : null)(\"background-size\", ctx.placeholder ? \"cover\" : null)(\"background-position\", ctx.placeholder ? \"50% 50%\" : null)(\"background-repeat\", ctx.placeholder ? \"no-repeat\" : null)(\"background-image\", ctx.placeholder ? ctx.generatePlaceholder(ctx.placeholder) : null)(\"filter\", ctx.placeholder && ctx.shouldBlurPlaceholder(ctx.placeholderConfig) ? \"blur(15px)\" : null);\n        }\n      },\n      inputs: {\n        ngSrc: [2, \"ngSrc\", \"ngSrc\", unwrapSafeUrl],\n        ngSrcset: \"ngSrcset\",\n        sizes: \"sizes\",\n        width: [2, \"width\", \"width\", numberAttribute],\n        height: [2, \"height\", \"height\", numberAttribute],\n        loading: \"loading\",\n        priority: [2, \"priority\", \"priority\", booleanAttribute],\n        loaderParams: \"loaderParams\",\n        disableOptimizedSrcset: [2, \"disableOptimizedSrcset\", \"disableOptimizedSrcset\", booleanAttribute],\n        fill: [2, \"fill\", \"fill\", booleanAttribute],\n        placeholder: [2, \"placeholder\", \"placeholder\", booleanOrUrlAttribute],\n        placeholderConfig: \"placeholderConfig\",\n        src: \"src\",\n        srcset: \"srcset\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return NgOptimizedImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/***** Helpers *****/\n/**\n * Sorts provided config breakpoints and uses defaults.\n */\nfunction processConfig(config) {\n  let sortedBreakpoints = {};\n  if (config.breakpoints) {\n    sortedBreakpoints.breakpoints = config.breakpoints.sort((a, b) => a - b);\n  }\n  return Object.assign({}, _IMAGE_CONFIG_DEFAULTS, config, sortedBreakpoints);\n}\n/***** Assert functions *****/\n/**\n * Verifies that there is no `src` set on a host element.\n */\nfunction assertNoConflictingSrc(dir) {\n  if (dir.src) {\n    throw new _RuntimeError(2950 /* RuntimeErrorCode.UNEXPECTED_SRC_ATTR */, `${imgDirectiveDetails(dir.ngSrc)} both \\`src\\` and \\`ngSrc\\` have been set. ` + `Supplying both of these attributes breaks lazy loading. ` + `The NgOptimizedImage directive sets \\`src\\` itself based on the value of \\`ngSrc\\`. ` + `To fix this, please remove the \\`src\\` attribute.`);\n  }\n}\n/**\n * Verifies that there is no `srcset` set on a host element.\n */\nfunction assertNoConflictingSrcset(dir) {\n  if (dir.srcset) {\n    throw new _RuntimeError(2951 /* RuntimeErrorCode.UNEXPECTED_SRCSET_ATTR */, `${imgDirectiveDetails(dir.ngSrc)} both \\`srcset\\` and \\`ngSrcset\\` have been set. ` + `Supplying both of these attributes breaks lazy loading. ` + `The NgOptimizedImage directive sets \\`srcset\\` itself based on the value of ` + `\\`ngSrcset\\`. To fix this, please remove the \\`srcset\\` attribute.`);\n  }\n}\n/**\n * Verifies that the `ngSrc` is not a Base64-encoded image.\n */\nfunction assertNotBase64Image(dir) {\n  let ngSrc = dir.ngSrc.trim();\n  if (ngSrc.startsWith('data:')) {\n    if (ngSrc.length > BASE64_IMG_MAX_LENGTH_IN_ERROR) {\n      ngSrc = ngSrc.substring(0, BASE64_IMG_MAX_LENGTH_IN_ERROR) + '...';\n    }\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc, false)} \\`ngSrc\\` is a Base64-encoded string ` + `(${ngSrc}). NgOptimizedImage does not support Base64-encoded strings. ` + `To fix this, disable the NgOptimizedImage directive for this element ` + `by removing \\`ngSrc\\` and using a standard \\`src\\` attribute instead.`);\n  }\n}\n/**\n * Verifies that the 'sizes' only includes responsive values.\n */\nfunction assertNoComplexSizes(dir) {\n  let sizes = dir.sizes;\n  if (sizes?.match(/((\\)|,)\\s|^)\\d+px/)) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc, false)} \\`sizes\\` was set to a string including ` + `pixel values. For automatic \\`srcset\\` generation, \\`sizes\\` must only include responsive ` + `values, such as \\`sizes=\"50vw\"\\` or \\`sizes=\"(min-width: 768px) 50vw, 100vw\"\\`. ` + `To fix this, modify the \\`sizes\\` attribute, or provide your own \\`ngSrcset\\` value directly.`);\n  }\n}\nfunction assertValidPlaceholder(dir, imageLoader) {\n  assertNoPlaceholderConfigWithoutPlaceholder(dir);\n  assertNoRelativePlaceholderWithoutLoader(dir, imageLoader);\n  assertNoOversizedDataUrl(dir);\n}\n/**\n * Verifies that placeholderConfig isn't being used without placeholder\n */\nfunction assertNoPlaceholderConfigWithoutPlaceholder(dir) {\n  if (dir.placeholderConfig && !dir.placeholder) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc, false)} \\`placeholderConfig\\` options were provided for an ` + `image that does not use the \\`placeholder\\` attribute, and will have no effect.`);\n  }\n}\n/**\n * Warns if a relative URL placeholder is specified, but no loader is present to provide the small\n * image.\n */\nfunction assertNoRelativePlaceholderWithoutLoader(dir, imageLoader) {\n  if (dir.placeholder === true && imageLoader === noopImageLoader) {\n    throw new _RuntimeError(2963 /* RuntimeErrorCode.MISSING_NECESSARY_LOADER */, `${imgDirectiveDetails(dir.ngSrc)} the \\`placeholder\\` attribute is set to true but ` + `no image loader is configured (i.e. the default one is being used), ` + `which would result in the same image being used for the primary image and its placeholder. ` + `To fix this, provide a loader or remove the \\`placeholder\\` attribute from the image.`);\n  }\n}\n/**\n * Warns or throws an error if an oversized dataURL placeholder is provided.\n */\nfunction assertNoOversizedDataUrl(dir) {\n  if (dir.placeholder && typeof dir.placeholder === 'string' && dir.placeholder.startsWith('data:')) {\n    if (dir.placeholder.length > DATA_URL_ERROR_LIMIT) {\n      throw new _RuntimeError(2965 /* RuntimeErrorCode.OVERSIZED_PLACEHOLDER */, `${imgDirectiveDetails(dir.ngSrc)} the \\`placeholder\\` attribute is set to a data URL which is longer ` + `than ${DATA_URL_ERROR_LIMIT} characters. This is strongly discouraged, as large inline placeholders ` + `directly increase the bundle size of Angular and hurt page load performance. To fix this, generate ` + `a smaller data URL placeholder.`);\n    }\n    if (dir.placeholder.length > DATA_URL_WARN_LIMIT) {\n      console.warn(_formatRuntimeError(2965 /* RuntimeErrorCode.OVERSIZED_PLACEHOLDER */, `${imgDirectiveDetails(dir.ngSrc)} the \\`placeholder\\` attribute is set to a data URL which is longer ` + `than ${DATA_URL_WARN_LIMIT} characters. This is discouraged, as large inline placeholders ` + `directly increase the bundle size of Angular and hurt page load performance. For better loading performance, ` + `generate a smaller data URL placeholder.`));\n    }\n  }\n}\n/**\n * Verifies that the `ngSrc` is not a Blob URL.\n */\nfunction assertNotBlobUrl(dir) {\n  const ngSrc = dir.ngSrc.trim();\n  if (ngSrc.startsWith('blob:')) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} \\`ngSrc\\` was set to a blob URL (${ngSrc}). ` + `Blob URLs are not supported by the NgOptimizedImage directive. ` + `To fix this, disable the NgOptimizedImage directive for this element ` + `by removing \\`ngSrc\\` and using a regular \\`src\\` attribute instead.`);\n  }\n}\n/**\n * Verifies that the input is set to a non-empty string.\n */\nfunction assertNonEmptyInput(dir, name, value) {\n  const isString = typeof value === 'string';\n  const isEmptyString = isString && value.trim() === '';\n  if (!isString || isEmptyString) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} \\`${name}\\` has an invalid value ` + `(\\`${value}\\`). To fix this, change the value to a non-empty string.`);\n  }\n}\n/**\n * Verifies that the `ngSrcset` is in a valid format, e.g. \"100w, 200w\" or \"1x, 2x\".\n */\nfunction assertValidNgSrcset(dir, value) {\n  if (value == null) return;\n  assertNonEmptyInput(dir, 'ngSrcset', value);\n  const stringVal = value;\n  const isValidWidthDescriptor = VALID_WIDTH_DESCRIPTOR_SRCSET.test(stringVal);\n  const isValidDensityDescriptor = VALID_DENSITY_DESCRIPTOR_SRCSET.test(stringVal);\n  if (isValidDensityDescriptor) {\n    assertUnderDensityCap(dir, stringVal);\n  }\n  const isValidSrcset = isValidWidthDescriptor || isValidDensityDescriptor;\n  if (!isValidSrcset) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} \\`ngSrcset\\` has an invalid value (\\`${value}\\`). ` + `To fix this, supply \\`ngSrcset\\` using a comma-separated list of one or more width ` + `descriptors (e.g. \"100w, 200w\") or density descriptors (e.g. \"1x, 2x\").`);\n  }\n}\nfunction assertUnderDensityCap(dir, value) {\n  const underDensityCap = value.split(',').every(num => num === '' || parseFloat(num) <= ABSOLUTE_SRCSET_DENSITY_CAP);\n  if (!underDensityCap) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the \\`ngSrcset\\` contains an unsupported image density:` + `\\`${value}\\`. NgOptimizedImage generally recommends a max image density of ` + `${RECOMMENDED_SRCSET_DENSITY_CAP}x but supports image densities up to ` + `${ABSOLUTE_SRCSET_DENSITY_CAP}x. The human eye cannot distinguish between image densities ` + `greater than ${RECOMMENDED_SRCSET_DENSITY_CAP}x - which makes them unnecessary for ` + `most use cases. Images that will be pinch-zoomed are typically the primary use case for ` + `${ABSOLUTE_SRCSET_DENSITY_CAP}x images. Please remove the high density descriptor and try again.`);\n  }\n}\n/**\n * Creates a `RuntimeError` instance to represent a situation when an input is set after\n * the directive has initialized.\n */\nfunction postInitInputChangeError(dir, inputName) {\n  let reason;\n  if (inputName === 'width' || inputName === 'height') {\n    reason = `Changing \\`${inputName}\\` may result in different attribute value ` + `applied to the underlying image element and cause layout shifts on a page.`;\n  } else {\n    reason = `Changing the \\`${inputName}\\` would have no effect on the underlying ` + `image element, because the resource loading has already occurred.`;\n  }\n  return new _RuntimeError(2953 /* RuntimeErrorCode.UNEXPECTED_INPUT_CHANGE */, `${imgDirectiveDetails(dir.ngSrc)} \\`${inputName}\\` was updated after initialization. ` + `The NgOptimizedImage directive will not react to this input change. ${reason} ` + `To fix this, either switch \\`${inputName}\\` to a static value ` + `or wrap the image element in an @if that is gated on the necessary value.`);\n}\n/**\n * Verify that none of the listed inputs has changed.\n */\nfunction assertNoPostInitInputChange(dir, changes, inputs) {\n  inputs.forEach(input => {\n    const isUpdated = changes.hasOwnProperty(input);\n    if (isUpdated && !changes[input].isFirstChange()) {\n      if (input === 'ngSrc') {\n        // When the `ngSrc` input changes, we detect that only in the\n        // `ngOnChanges` hook, thus the `ngSrc` is already set. We use\n        // `ngSrc` in the error message, so we use a previous value, but\n        // not the updated one in it.\n        dir = {\n          ngSrc: changes[input].previousValue\n        };\n      }\n      throw postInitInputChangeError(dir, input);\n    }\n  });\n}\n/**\n * Verifies that a specified input is a number greater than 0.\n */\nfunction assertGreaterThanZero(dir, inputValue, inputName) {\n  const validNumber = typeof inputValue === 'number' && inputValue > 0;\n  const validString = typeof inputValue === 'string' && /^\\d+$/.test(inputValue.trim()) && parseInt(inputValue) > 0;\n  if (!validNumber && !validString) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} \\`${inputName}\\` has an invalid value. ` + `To fix this, provide \\`${inputName}\\` as a number greater than 0.`);\n  }\n}\n/**\n * Verifies that the rendered image is not visually distorted. Effectively this is checking:\n * - Whether the \"width\" and \"height\" attributes reflect the actual dimensions of the image.\n * - Whether image styling is \"correct\" (see below for a longer explanation).\n */\nfunction assertNoImageDistortion(dir, img, renderer) {\n  const callback = () => {\n    removeLoadListenerFn();\n    removeErrorListenerFn();\n    const computedStyle = window.getComputedStyle(img);\n    let renderedWidth = parseFloat(computedStyle.getPropertyValue('width'));\n    let renderedHeight = parseFloat(computedStyle.getPropertyValue('height'));\n    const boxSizing = computedStyle.getPropertyValue('box-sizing');\n    if (boxSizing === 'border-box') {\n      const paddingTop = computedStyle.getPropertyValue('padding-top');\n      const paddingRight = computedStyle.getPropertyValue('padding-right');\n      const paddingBottom = computedStyle.getPropertyValue('padding-bottom');\n      const paddingLeft = computedStyle.getPropertyValue('padding-left');\n      renderedWidth -= parseFloat(paddingRight) + parseFloat(paddingLeft);\n      renderedHeight -= parseFloat(paddingTop) + parseFloat(paddingBottom);\n    }\n    const renderedAspectRatio = renderedWidth / renderedHeight;\n    const nonZeroRenderedDimensions = renderedWidth !== 0 && renderedHeight !== 0;\n    const intrinsicWidth = img.naturalWidth;\n    const intrinsicHeight = img.naturalHeight;\n    const intrinsicAspectRatio = intrinsicWidth / intrinsicHeight;\n    const suppliedWidth = dir.width;\n    const suppliedHeight = dir.height;\n    const suppliedAspectRatio = suppliedWidth / suppliedHeight;\n    // Tolerance is used to account for the impact of subpixel rendering.\n    // Due to subpixel rendering, the rendered, intrinsic, and supplied\n    // aspect ratios of a correctly configured image may not exactly match.\n    // For example, a `width=4030 height=3020` image might have a rendered\n    // size of \"1062w, 796.48h\". (An aspect ratio of 1.334... vs. 1.333...)\n    const inaccurateDimensions = Math.abs(suppliedAspectRatio - intrinsicAspectRatio) > ASPECT_RATIO_TOLERANCE;\n    const stylingDistortion = nonZeroRenderedDimensions && Math.abs(intrinsicAspectRatio - renderedAspectRatio) > ASPECT_RATIO_TOLERANCE;\n    if (inaccurateDimensions) {\n      console.warn(_formatRuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the aspect ratio of the image does not match ` + `the aspect ratio indicated by the width and height attributes. ` + `\\nIntrinsic image size: ${intrinsicWidth}w x ${intrinsicHeight}h ` + `(aspect-ratio: ${round(intrinsicAspectRatio)}). \\nSupplied width and height attributes: ` + `${suppliedWidth}w x ${suppliedHeight}h (aspect-ratio: ${round(suppliedAspectRatio)}). ` + `\\nTo fix this, update the width and height attributes.`));\n    } else if (stylingDistortion) {\n      console.warn(_formatRuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the aspect ratio of the rendered image ` + `does not match the image's intrinsic aspect ratio. ` + `\\nIntrinsic image size: ${intrinsicWidth}w x ${intrinsicHeight}h ` + `(aspect-ratio: ${round(intrinsicAspectRatio)}). \\nRendered image size: ` + `${renderedWidth}w x ${renderedHeight}h (aspect-ratio: ` + `${round(renderedAspectRatio)}). \\nThis issue can occur if \"width\" and \"height\" ` + `attributes are added to an image without updating the corresponding ` + `image styling. To fix this, adjust image styling. In most cases, ` + `adding \"height: auto\" or \"width: auto\" to the image styling will fix ` + `this issue.`));\n    } else if (!dir.ngSrcset && nonZeroRenderedDimensions) {\n      // If `ngSrcset` hasn't been set, sanity check the intrinsic size.\n      const recommendedWidth = RECOMMENDED_SRCSET_DENSITY_CAP * renderedWidth;\n      const recommendedHeight = RECOMMENDED_SRCSET_DENSITY_CAP * renderedHeight;\n      const oversizedWidth = intrinsicWidth - recommendedWidth >= OVERSIZED_IMAGE_TOLERANCE;\n      const oversizedHeight = intrinsicHeight - recommendedHeight >= OVERSIZED_IMAGE_TOLERANCE;\n      if (oversizedWidth || oversizedHeight) {\n        console.warn(_formatRuntimeError(2960 /* RuntimeErrorCode.OVERSIZED_IMAGE */, `${imgDirectiveDetails(dir.ngSrc)} the intrinsic image is significantly ` + `larger than necessary. ` + `\\nRendered image size: ${renderedWidth}w x ${renderedHeight}h. ` + `\\nIntrinsic image size: ${intrinsicWidth}w x ${intrinsicHeight}h. ` + `\\nRecommended intrinsic image size: ${recommendedWidth}w x ${recommendedHeight}h. ` + `\\nNote: Recommended intrinsic image size is calculated assuming a maximum DPR of ` + `${RECOMMENDED_SRCSET_DENSITY_CAP}. To improve loading time, resize the image ` + `or consider using the \"ngSrcset\" and \"sizes\" attributes.`));\n      }\n    }\n  };\n  const removeLoadListenerFn = renderer.listen(img, 'load', callback);\n  // We only listen to the `error` event to remove the `load` event listener because it will not be\n  // fired if the image fails to load. This is done to prevent memory leaks in development mode\n  // because image elements aren't garbage-collected properly. It happens because zone.js stores the\n  // event listener directly on the element and closures capture `dir`.\n  const removeErrorListenerFn = renderer.listen(img, 'error', () => {\n    removeLoadListenerFn();\n    removeErrorListenerFn();\n  });\n  callOnLoadIfImageIsLoaded(img, callback);\n}\n/**\n * Verifies that a specified input is set.\n */\nfunction assertNonEmptyWidthAndHeight(dir) {\n  let missingAttributes = [];\n  if (dir.width === undefined) missingAttributes.push('width');\n  if (dir.height === undefined) missingAttributes.push('height');\n  if (missingAttributes.length > 0) {\n    throw new _RuntimeError(2954 /* RuntimeErrorCode.REQUIRED_INPUT_MISSING */, `${imgDirectiveDetails(dir.ngSrc)} these required attributes ` + `are missing: ${missingAttributes.map(attr => `\"${attr}\"`).join(', ')}. ` + `Including \"width\" and \"height\" attributes will prevent image-related layout shifts. ` + `To fix this, include \"width\" and \"height\" attributes on the image tag or turn on ` + `\"fill\" mode with the \\`fill\\` attribute.`);\n  }\n}\n/**\n * Verifies that width and height are not set. Used in fill mode, where those attributes don't make\n * sense.\n */\nfunction assertEmptyWidthAndHeight(dir) {\n  if (dir.width || dir.height) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the attributes \\`height\\` and/or \\`width\\` are present ` + `along with the \\`fill\\` attribute. Because \\`fill\\` mode causes an image to fill its containing ` + `element, the size attributes have no effect and should be removed.`);\n  }\n}\n/**\n * Verifies that the rendered image has a nonzero height. If the image is in fill mode, provides\n * guidance that this can be caused by the containing element's CSS position property.\n */\nfunction assertNonZeroRenderedHeight(dir, img, renderer) {\n  const callback = () => {\n    removeLoadListenerFn();\n    removeErrorListenerFn();\n    const renderedHeight = img.clientHeight;\n    if (dir.fill && renderedHeight === 0) {\n      console.warn(_formatRuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the height of the fill-mode image is zero. ` + `This is likely because the containing element does not have the CSS 'position' ` + `property set to one of the following: \"relative\", \"fixed\", or \"absolute\". ` + `To fix this problem, make sure the container element has the CSS 'position' ` + `property defined and the height of the element is not zero.`));\n    }\n  };\n  const removeLoadListenerFn = renderer.listen(img, 'load', callback);\n  // See comments in the `assertNoImageDistortion`.\n  const removeErrorListenerFn = renderer.listen(img, 'error', () => {\n    removeLoadListenerFn();\n    removeErrorListenerFn();\n  });\n  callOnLoadIfImageIsLoaded(img, callback);\n}\n/**\n * Verifies that the `loading` attribute is set to a valid input &\n * is not used on priority images.\n */\nfunction assertValidLoadingInput(dir) {\n  if (dir.loading && dir.priority) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the \\`loading\\` attribute ` + `was used on an image that was marked \"priority\". ` + `Setting \\`loading\\` on priority images is not allowed ` + `because these images will always be eagerly loaded. ` + `To fix this, remove the “loading” attribute from the priority image.`);\n  }\n  const validInputs = ['auto', 'eager', 'lazy'];\n  if (typeof dir.loading === 'string' && !validInputs.includes(dir.loading)) {\n    throw new _RuntimeError(2952 /* RuntimeErrorCode.INVALID_INPUT */, `${imgDirectiveDetails(dir.ngSrc)} the \\`loading\\` attribute ` + `has an invalid value (\\`${dir.loading}\\`). ` + `To fix this, provide a valid value (\"lazy\", \"eager\", or \"auto\").`);\n  }\n}\n/**\n * Warns if NOT using a loader (falling back to the generic loader) and\n * the image appears to be hosted on one of the image CDNs for which\n * we do have a built-in image loader. Suggests switching to the\n * built-in loader.\n *\n * @param ngSrc Value of the ngSrc attribute\n * @param imageLoader ImageLoader provided\n */\nfunction assertNotMissingBuiltInLoader(ngSrc, imageLoader) {\n  if (imageLoader === noopImageLoader) {\n    let builtInLoaderName = '';\n    for (const loader of BUILT_IN_LOADERS) {\n      if (loader.testUrl(ngSrc)) {\n        builtInLoaderName = loader.name;\n        break;\n      }\n    }\n    if (builtInLoaderName) {\n      console.warn(_formatRuntimeError(2962 /* RuntimeErrorCode.MISSING_BUILTIN_LOADER */, `NgOptimizedImage: It looks like your images may be hosted on the ` + `${builtInLoaderName} CDN, but your app is not using Angular's ` + `built-in loader for that CDN. We recommend switching to use ` + `the built-in by calling \\`provide${builtInLoaderName}Loader()\\` ` + `in your \\`providers\\` and passing it your instance's base URL. ` + `If you don't want to use the built-in loader, define a custom ` + `loader function using IMAGE_LOADER to silence this warning.`));\n    }\n  }\n}\n/**\n * Warns if ngSrcset is present and no loader is configured (i.e. the default one is being used).\n */\nfunction assertNoNgSrcsetWithoutLoader(dir, imageLoader) {\n  if (dir.ngSrcset && imageLoader === noopImageLoader) {\n    console.warn(_formatRuntimeError(2963 /* RuntimeErrorCode.MISSING_NECESSARY_LOADER */, `${imgDirectiveDetails(dir.ngSrc)} the \\`ngSrcset\\` attribute is present but ` + `no image loader is configured (i.e. the default one is being used), ` + `which would result in the same image being used for all configured sizes. ` + `To fix this, provide a loader or remove the \\`ngSrcset\\` attribute from the image.`));\n  }\n}\n/**\n * Warns if loaderParams is present and no loader is configured (i.e. the default one is being\n * used).\n */\nfunction assertNoLoaderParamsWithoutLoader(dir, imageLoader) {\n  if (dir.loaderParams && imageLoader === noopImageLoader) {\n    console.warn(_formatRuntimeError(2963 /* RuntimeErrorCode.MISSING_NECESSARY_LOADER */, `${imgDirectiveDetails(dir.ngSrc)} the \\`loaderParams\\` attribute is present but ` + `no image loader is configured (i.e. the default one is being used), ` + `which means that the loaderParams data will not be consumed and will not affect the URL. ` + `To fix this, provide a custom loader or remove the \\`loaderParams\\` attribute from the image.`));\n  }\n}\n/**\n * Warns if the priority attribute is used too often on page load\n */\nasync function assetPriorityCountBelowThreshold(appRef) {\n  if (IMGS_WITH_PRIORITY_ATTR_COUNT === 0) {\n    IMGS_WITH_PRIORITY_ATTR_COUNT++;\n    await appRef.whenStable();\n    if (IMGS_WITH_PRIORITY_ATTR_COUNT > PRIORITY_COUNT_THRESHOLD) {\n      console.warn(_formatRuntimeError(2966 /* RuntimeErrorCode.TOO_MANY_PRIORITY_ATTRIBUTES */, `NgOptimizedImage: The \"priority\" attribute is set to true more than ${PRIORITY_COUNT_THRESHOLD} times (${IMGS_WITH_PRIORITY_ATTR_COUNT} times). ` + `Marking too many images as \"high\" priority can hurt your application's LCP (https://web.dev/lcp). ` + `\"Priority\" should only be set on the image expected to be the page's LCP element.`));\n    }\n  } else {\n    IMGS_WITH_PRIORITY_ATTR_COUNT++;\n  }\n}\n/**\n * Warns if placeholder's dimension are over a threshold.\n *\n * This assert function is meant to only run on the browser.\n */\nfunction assertPlaceholderDimensions(dir, imgElement) {\n  const computedStyle = window.getComputedStyle(imgElement);\n  let renderedWidth = parseFloat(computedStyle.getPropertyValue('width'));\n  let renderedHeight = parseFloat(computedStyle.getPropertyValue('height'));\n  if (renderedWidth > PLACEHOLDER_DIMENSION_LIMIT || renderedHeight > PLACEHOLDER_DIMENSION_LIMIT) {\n    console.warn(_formatRuntimeError(2967 /* RuntimeErrorCode.PLACEHOLDER_DIMENSION_LIMIT_EXCEEDED */, `${imgDirectiveDetails(dir.ngSrc)} it uses a placeholder image, but at least one ` + `of the dimensions attribute (height or width) exceeds the limit of ${PLACEHOLDER_DIMENSION_LIMIT}px. ` + `To fix this, use a smaller image as a placeholder.`));\n  }\n}\nfunction callOnLoadIfImageIsLoaded(img, callback) {\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#dom-img-complete\n  // The spec defines that `complete` is truthy once its request state is fully available.\n  // The image may already be available if it’s loaded from the browser cache.\n  // In that case, the `load` event will not fire at all, meaning that all setup\n  // callbacks listening for the `load` event will not be invoked.\n  // In Safari, there is a known behavior where the `complete` property of an\n  // `HTMLImageElement` may sometimes return `true` even when the image is not fully loaded.\n  // Checking both `img.complete` and `img.naturalWidth` is the most reliable way to\n  // determine if an image has been fully loaded, especially in browsers where the\n  // `complete` property may return `true` prematurely.\n  if (img.complete && img.naturalWidth) {\n    callback();\n  }\n}\nfunction round(input) {\n  return Number.isInteger(input) ? input : input.toFixed(2);\n}\n// Transform function to handle SafeValue input for ngSrc. This doesn't do any sanitization,\n// as that is not needed for img.src and img.srcset. This transform is purely for compatibility.\nfunction unwrapSafeUrl(value) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  return _unwrapSafeValue(value);\n}\n// Transform function to handle inputs which may be booleans, strings, or string representations\n// of boolean values. Used for the placeholder attribute.\nfunction booleanOrUrlAttribute(value) {\n  if (typeof value === 'string' && value !== 'true' && value !== 'false' && value !== '') {\n    return value;\n  }\n  return booleanAttribute(value);\n}\nexport { DOCUMENT, IMAGE_LOADER, NgOptimizedImage, PRECONNECT_CHECK_BLOCKLIST, VERSION, ViewportScroller, isPlatformBrowser, provideCloudflareLoader, provideCloudinaryLoader, provideImageKitLoader, provideImgixLoader, provideNetlifyLoader, registerLocaleData, NullViewportScroller as ɵNullViewportScroller };\n","/**\n * @license Angular v19.2.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { isPlatformServer, DOCUMENT, ɵgetDOM as _getDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ɵRuntimeError as _RuntimeError, Inject, Injectable, APP_ID, CSP_NONCE, PLATFORM_ID, Optional, ViewEncapsulation, ɵTracingService as _TracingService, RendererStyleFlags2 } from '@angular/core';\n\n/**\n * The injection token for plugins of the `EventManager` service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'EventManagerPlugins' : '');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nlet EventManager = /*#__PURE__*/(() => {\n  class EventManager {\n    _zone;\n    _plugins;\n    _eventNameToPlugin = new Map();\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n      this._zone = _zone;\n      plugins.forEach(plugin => {\n        plugin.manager = this;\n      });\n      this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @param options Options that configure how the event listener is bound.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler, options) {\n      const plugin = this._findPluginFor(eventName);\n      return plugin.addEventListener(element, eventName, handler, options);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n      return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n      let plugin = this._eventNameToPlugin.get(eventName);\n      if (plugin) {\n        return plugin;\n      }\n      const plugins = this._plugins;\n      plugin = plugins.find(plugin => plugin.supports(eventName));\n      if (!plugin) {\n        throw new _RuntimeError(5101 /* RuntimeErrorCode.NO_PLUGIN_FOR_EVENT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `No event manager plugin found for event ${eventName}`);\n      }\n      this._eventNameToPlugin.set(eventName, plugin);\n      return plugin;\n    }\n    static ɵfac = function EventManager_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EventManager)(i0.ɵɵinject(EVENT_MANAGER_PLUGINS), i0.ɵɵinject(i0.NgZone));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: EventManager,\n      factory: EventManager.ɵfac\n    });\n  }\n  return EventManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The plugin definition for the `EventManager` class\n *\n * It can be used as a base class to create custom manager plugins, i.e. you can create your own\n * class that extends the `EventManagerPlugin` one.\n *\n * @publicApi\n */\nclass EventManagerPlugin {\n  _doc;\n  // TODO: remove (has some usage in G3)\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n  // Using non-null assertion because it's set by EventManager's constructor\n  manager;\n}\n\n/** The style elements attribute name used to set value of `APP_ID` token. */\nconst APP_ID_ATTRIBUTE_NAME = 'ng-app-id';\n/**\n * Removes all provided elements from the document.\n * @param elements An array of HTML Elements.\n */\nfunction removeElements(elements) {\n  for (const element of elements) {\n    element.remove();\n  }\n}\n/**\n * Creates a `style` element with the provided inline style content.\n * @param style A string of the inline style content.\n * @param doc A DOM Document to use to create the element.\n * @returns An HTMLStyleElement instance.\n */\nfunction createStyleElement(style, doc) {\n  const styleElement = doc.createElement('style');\n  styleElement.textContent = style;\n  return styleElement;\n}\n/**\n * Searches a DOM document's head element for style elements with a matching application\n * identifier attribute (`ng-app-id`) to the provide identifier and adds usage records for each.\n * @param doc An HTML DOM document instance.\n * @param appId A string containing an Angular application identifer.\n * @param inline A Map object for tracking inline (defined via `styles` in component decorator) style usage.\n * @param external A Map object for tracking external (defined via `styleUrls` in component decorator) style usage.\n */\nfunction addServerStyles(doc, appId, inline, external) {\n  const elements = doc.head?.querySelectorAll(`style[${APP_ID_ATTRIBUTE_NAME}=\"${appId}\"],link[${APP_ID_ATTRIBUTE_NAME}=\"${appId}\"]`);\n  if (elements) {\n    for (const styleElement of elements) {\n      styleElement.removeAttribute(APP_ID_ATTRIBUTE_NAME);\n      if (styleElement instanceof HTMLLinkElement) {\n        // Only use filename from href\n        // The href is build time generated with a unique value to prevent duplicates.\n        external.set(styleElement.href.slice(styleElement.href.lastIndexOf('/') + 1), {\n          usage: 0,\n          elements: [styleElement]\n        });\n      } else if (styleElement.textContent) {\n        inline.set(styleElement.textContent, {\n          usage: 0,\n          elements: [styleElement]\n        });\n      }\n    }\n  }\n}\n/**\n * Creates a `link` element for the provided external style URL.\n * @param url A string of the URL for the stylesheet.\n * @param doc A DOM Document to use to create the element.\n * @returns An HTMLLinkElement instance.\n */\nfunction createLinkElement(url, doc) {\n  const linkElement = doc.createElement('link');\n  linkElement.setAttribute('rel', 'stylesheet');\n  linkElement.setAttribute('href', url);\n  return linkElement;\n}\nlet SharedStylesHost = /*#__PURE__*/(() => {\n  class SharedStylesHost {\n    doc;\n    appId;\n    nonce;\n    /**\n     * Provides usage information for active inline style content and associated HTML <style> elements.\n     * Embedded styles typically originate from the `styles` metadata of a rendered component.\n     */\n    inline = new Map();\n    /**\n     * Provides usage information for active external style URLs and the associated HTML <link> elements.\n     * External styles typically originate from the `ɵɵExternalStylesFeature` of a rendered component.\n     */\n    external = new Map();\n    /**\n     * Set of host DOM nodes that will have styles attached.\n     */\n    hosts = new Set();\n    /**\n     * Whether the application code is currently executing on a server.\n     */\n    isServer;\n    constructor(doc, appId, nonce, platformId = {}) {\n      this.doc = doc;\n      this.appId = appId;\n      this.nonce = nonce;\n      this.isServer = isPlatformServer(platformId);\n      addServerStyles(doc, appId, this.inline, this.external);\n      this.hosts.add(doc.head);\n    }\n    /**\n     * Adds embedded styles to the DOM via HTML `style` elements.\n     * @param styles An array of style content strings.\n     */\n    addStyles(styles, urls) {\n      for (const value of styles) {\n        this.addUsage(value, this.inline, createStyleElement);\n      }\n      urls?.forEach(value => this.addUsage(value, this.external, createLinkElement));\n    }\n    /**\n     * Removes embedded styles from the DOM that were added as HTML `style` elements.\n     * @param styles An array of style content strings.\n     */\n    removeStyles(styles, urls) {\n      for (const value of styles) {\n        this.removeUsage(value, this.inline);\n      }\n      urls?.forEach(value => this.removeUsage(value, this.external));\n    }\n    addUsage(value, usages, creator) {\n      // Attempt to get any current usage of the value\n      const record = usages.get(value);\n      // If existing, just increment the usage count\n      if (record) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && record.usage === 0) {\n          // A usage count of zero indicates a preexisting server generated style.\n          // This attribute is solely used for debugging purposes of SSR style reuse.\n          record.elements.forEach(element => element.setAttribute('ng-style-reused', ''));\n        }\n        record.usage++;\n      } else {\n        // Otherwise, create an entry to track the elements and add element for each host\n        usages.set(value, {\n          usage: 1,\n          elements: [...this.hosts].map(host => this.addElement(host, creator(value, this.doc)))\n        });\n      }\n    }\n    removeUsage(value, usages) {\n      // Attempt to get any current usage of the value\n      const record = usages.get(value);\n      // If there is a record, reduce the usage count and if no longer used,\n      // remove from DOM and delete usage record.\n      if (record) {\n        record.usage--;\n        if (record.usage <= 0) {\n          removeElements(record.elements);\n          usages.delete(value);\n        }\n      }\n    }\n    ngOnDestroy() {\n      for (const [, {\n        elements\n      }] of [...this.inline, ...this.external]) {\n        removeElements(elements);\n      }\n      this.hosts.clear();\n    }\n    /**\n     * Adds a host node to the set of style hosts and adds all existing style usage to\n     * the newly added host node.\n     *\n     * This is currently only used for Shadow DOM encapsulation mode.\n     */\n    addHost(hostNode) {\n      this.hosts.add(hostNode);\n      // Add existing styles to new host\n      for (const [style, {\n        elements\n      }] of this.inline) {\n        elements.push(this.addElement(hostNode, createStyleElement(style, this.doc)));\n      }\n      for (const [url, {\n        elements\n      }] of this.external) {\n        elements.push(this.addElement(hostNode, createLinkElement(url, this.doc)));\n      }\n    }\n    removeHost(hostNode) {\n      this.hosts.delete(hostNode);\n    }\n    addElement(host, element) {\n      // Add a nonce if present\n      if (this.nonce) {\n        element.setAttribute('nonce', this.nonce);\n      }\n      // Add application identifier when on the server to support client-side reuse\n      if (this.isServer) {\n        element.setAttribute(APP_ID_ATTRIBUTE_NAME, this.appId);\n      }\n      // Insert the element into the DOM with the host node as parent\n      return host.appendChild(element);\n    }\n    static ɵfac = function SharedStylesHost_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SharedStylesHost)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(APP_ID), i0.ɵɵinject(CSP_NONCE, 8), i0.ɵɵinject(PLATFORM_ID));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: SharedStylesHost,\n      factory: SharedStylesHost.ɵfac\n    });\n  }\n  return SharedStylesHost;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n  'math': 'http://www.w3.org/1998/Math/MathML'\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst SOURCEMAP_URL_REGEXP = /\\/\\*#\\s*sourceMappingURL=(.+?)\\s*\\*\\//;\nconst PROTOCOL_REGEXP = /^https?:/;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * The default value for the `REMOVE_STYLES_ON_COMPONENT_DESTROY` DI token.\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT = true;\n/**\n * A DI token that indicates whether styles\n * of destroyed components should be removed from DOM.\n *\n * By default, the value is set to `true`.\n * @publicApi\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY = /*#__PURE__*/new InjectionToken(ngDevMode ? 'RemoveStylesOnCompDestroy' : '', {\n  providedIn: 'root',\n  factory: () => REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT\n});\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimStylesContent(compId, styles) {\n  return styles.map(s => s.replace(COMPONENT_REGEX, compId));\n}\n/**\n * Prepends a baseHref to the `sourceMappingURL` within the provided CSS content.\n * If the `sourceMappingURL` contains an inline (encoded) map, the function skips processing.\n *\n * @note For inline stylesheets, the `sourceMappingURL` is relative to the page's origin\n * and not the provided baseHref. This function is needed as when accessing the page with a URL\n * containing two or more segments.\n * For example, if the baseHref is set to `/`, and you visit a URL like `http://localhost/foo/bar`,\n * the map would be requested from `http://localhost/foo/bar/comp.css.map` instead of what you'd expect,\n * which is `http://localhost/comp.css.map`. This behavior is corrected by modifying the `sourceMappingURL`\n * to ensure external source maps are loaded relative to the baseHref.\n *\n\n * @param baseHref - The base URL to prepend to the `sourceMappingURL`.\n * @param styles - An array of CSS content strings, each potentially containing a `sourceMappingURL`.\n * @returns The updated array of CSS content strings with modified `sourceMappingURL` values,\n * or the original content if no modification is needed.\n */\nfunction addBaseHrefToCssSourceMap(baseHref, styles) {\n  if (!baseHref) {\n    return styles;\n  }\n  const absoluteBaseHrefUrl = new URL(baseHref, 'http://localhost');\n  return styles.map(cssContent => {\n    if (!cssContent.includes('sourceMappingURL=')) {\n      return cssContent;\n    }\n    return cssContent.replace(SOURCEMAP_URL_REGEXP, (_, sourceMapUrl) => {\n      if (sourceMapUrl[0] === '/' || sourceMapUrl.startsWith('data:') || PROTOCOL_REGEXP.test(sourceMapUrl)) {\n        return `/*# sourceMappingURL=${sourceMapUrl} */`;\n      }\n      const {\n        pathname: resolvedSourceMapUrl\n      } = new URL(sourceMapUrl, absoluteBaseHrefUrl);\n      return `/*# sourceMappingURL=${resolvedSourceMapUrl} */`;\n    });\n  });\n}\nlet DomRendererFactory2 = /*#__PURE__*/(() => {\n  class DomRendererFactory2 {\n    eventManager;\n    sharedStylesHost;\n    appId;\n    removeStylesOnCompDestroy;\n    doc;\n    platformId;\n    ngZone;\n    nonce;\n    tracingService;\n    rendererByCompId = new Map();\n    defaultRenderer;\n    platformIsServer;\n    constructor(eventManager, sharedStylesHost, appId, removeStylesOnCompDestroy, doc, platformId, ngZone, nonce = null, tracingService = null) {\n      this.eventManager = eventManager;\n      this.sharedStylesHost = sharedStylesHost;\n      this.appId = appId;\n      this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n      this.doc = doc;\n      this.platformId = platformId;\n      this.ngZone = ngZone;\n      this.nonce = nonce;\n      this.tracingService = tracingService;\n      this.platformIsServer = isPlatformServer(platformId);\n      this.defaultRenderer = new DefaultDomRenderer2(eventManager, doc, ngZone, this.platformIsServer, this.tracingService);\n    }\n    createRenderer(element, type) {\n      if (!element || !type) {\n        return this.defaultRenderer;\n      }\n      if (this.platformIsServer && type.encapsulation === ViewEncapsulation.ShadowDom) {\n        // Domino does not support shadow DOM.\n        type = {\n          ...type,\n          encapsulation: ViewEncapsulation.Emulated\n        };\n      }\n      const renderer = this.getOrCreateRenderer(element, type);\n      // Renderers have different logic due to different encapsulation behaviours.\n      // Ex: for emulated, an attribute is added to the element.\n      if (renderer instanceof EmulatedEncapsulationDomRenderer2) {\n        renderer.applyToHost(element);\n      } else if (renderer instanceof NoneEncapsulationDomRenderer) {\n        renderer.applyStyles();\n      }\n      return renderer;\n    }\n    getOrCreateRenderer(element, type) {\n      const rendererByCompId = this.rendererByCompId;\n      let renderer = rendererByCompId.get(type.id);\n      if (!renderer) {\n        const doc = this.doc;\n        const ngZone = this.ngZone;\n        const eventManager = this.eventManager;\n        const sharedStylesHost = this.sharedStylesHost;\n        const removeStylesOnCompDestroy = this.removeStylesOnCompDestroy;\n        const platformIsServer = this.platformIsServer;\n        const tracingService = this.tracingService;\n        switch (type.encapsulation) {\n          case ViewEncapsulation.Emulated:\n            renderer = new EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, type, this.appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService);\n            break;\n          case ViewEncapsulation.ShadowDom:\n            return new ShadowDomRenderer(eventManager, sharedStylesHost, element, type, doc, ngZone, this.nonce, platformIsServer, tracingService);\n          default:\n            renderer = new NoneEncapsulationDomRenderer(eventManager, sharedStylesHost, type, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService);\n            break;\n        }\n        rendererByCompId.set(type.id, renderer);\n      }\n      return renderer;\n    }\n    ngOnDestroy() {\n      this.rendererByCompId.clear();\n    }\n    /**\n     * Used during HMR to clear any cached data about a component.\n     * @param componentId ID of the component that is being replaced.\n     */\n    componentReplaced(componentId) {\n      this.rendererByCompId.delete(componentId);\n    }\n    static ɵfac = function DomRendererFactory2_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DomRendererFactory2)(i0.ɵɵinject(EventManager), i0.ɵɵinject(SharedStylesHost), i0.ɵɵinject(APP_ID), i0.ɵɵinject(REMOVE_STYLES_ON_COMPONENT_DESTROY), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(CSP_NONCE), i0.ɵɵinject(_TracingService, 8));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DomRendererFactory2,\n      factory: DomRendererFactory2.ɵfac\n    });\n  }\n  return DomRendererFactory2;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass DefaultDomRenderer2 {\n  eventManager;\n  doc;\n  ngZone;\n  platformIsServer;\n  tracingService;\n  data = /*#__PURE__*/Object.create(null);\n  /**\n   * By default this renderer throws when encountering synthetic properties\n   * This can be disabled for example by the AsyncAnimationRendererFactory\n   */\n  throwOnSyntheticProps = true;\n  constructor(eventManager, doc, ngZone, platformIsServer, tracingService) {\n    this.eventManager = eventManager;\n    this.doc = doc;\n    this.ngZone = ngZone;\n    this.platformIsServer = platformIsServer;\n    this.tracingService = tracingService;\n  }\n  destroy() {}\n  destroyNode = null;\n  createElement(name, namespace) {\n    if (namespace) {\n      // TODO: `|| namespace` was added in\n      // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n      // support how Ivy passed around the namespace URI rather than short name at the time. It did\n      // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n      // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n      // namespaces should be and make it consistent.\n      // Related issues:\n      // https://github.com/angular/angular/issues/44028\n      // https://github.com/angular/angular/issues/44883\n      return this.doc.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n    return this.doc.createElement(name);\n  }\n  createComment(value) {\n    return this.doc.createComment(value);\n  }\n  createText(value) {\n    return this.doc.createTextNode(value);\n  }\n  appendChild(parent, newChild) {\n    const targetParent = isTemplateNode(parent) ? parent.content : parent;\n    targetParent.appendChild(newChild);\n  }\n  insertBefore(parent, newChild, refChild) {\n    if (parent) {\n      const targetParent = isTemplateNode(parent) ? parent.content : parent;\n      targetParent.insertBefore(newChild, refChild);\n    }\n  }\n  removeChild(_parent, oldChild) {\n    oldChild.remove();\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    let el = typeof selectorOrNode === 'string' ? this.doc.querySelector(selectorOrNode) : selectorOrNode;\n    if (!el) {\n      throw new _RuntimeError(-5104 /* RuntimeErrorCode.ROOT_NODE_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) && `The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n    return el;\n  }\n  parentNode(node) {\n    return node.parentNode;\n  }\n  nextSibling(node) {\n    return node.nextSibling;\n  }\n  setAttribute(el, name, value, namespace) {\n    if (namespace) {\n      name = namespace + ':' + name;\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n  removeAttribute(el, name, namespace) {\n    if (namespace) {\n      const namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n  addClass(el, name) {\n    el.classList.add(name);\n  }\n  removeClass(el, name) {\n    el.classList.remove(name);\n  }\n  setStyle(el, style, value, flags) {\n    if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n      el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n  removeStyle(el, style, flags) {\n    if (flags & RendererStyleFlags2.DashCase) {\n      // removeProperty has no effect when used on camelCased properties.\n      el.style.removeProperty(style);\n    } else {\n      el.style[style] = '';\n    }\n  }\n  setProperty(el, name, value) {\n    if (el == null) {\n      return;\n    }\n    (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n  setValue(node, value) {\n    node.nodeValue = value;\n  }\n  listen(target, event, callback, options) {\n    (typeof ngDevMode === 'undefined' || ngDevMode) && this.throwOnSyntheticProps && checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      target = _getDOM().getGlobalEventTarget(this.doc, target);\n      if (!target) {\n        throw new _RuntimeError(5102 /* RuntimeErrorCode.UNSUPPORTED_EVENT_TARGET */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Unsupported event target ${target} for event ${event}`);\n      }\n    }\n    let wrappedCallback = this.decoratePreventDefault(callback);\n    if (this.tracingService?.wrapEventListener) {\n      wrappedCallback = this.tracingService.wrapEventListener(target, event, wrappedCallback);\n    }\n    return this.eventManager.addEventListener(target, event, wrappedCallback, options);\n  }\n  decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle\n    // the two differently. In the first case, the special '__ngUnwrap__' token is passed to the\n    // unwrap the listener (see below).\n    return event => {\n      // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n      // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The\n      // debug_node can inspect the listener toString contents for the existence of this special\n      // token. Because the token is a string literal, it is ensured to not be modified by compiled\n      // code.\n      if (event === '__ngUnwrap__') {\n        return eventHandler;\n      }\n      // Run the event handler inside the ngZone because event handlers are not patched\n      // by Zone on the server. This is required only for tests.\n      const allowDefaultBehavior = this.platformIsServer ? this.ngZone.runGuarded(() => eventHandler(event)) : eventHandler(event);\n      if (allowDefaultBehavior === false) {\n        event.preventDefault();\n      }\n      return undefined;\n    };\n  }\n}\nconst AT_CHARCODE = /*#__PURE__*/(() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new _RuntimeError(5105 /* RuntimeErrorCode.UNEXPECTED_SYNTHETIC_PROPERTY */, `Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Make sure \\`provideAnimationsAsync()\\`, \\`provideAnimations()\\` or \\`provideNoopAnimations()\\` call was added to a list of providers used to bootstrap an application.\n  - There is a corresponding animation configuration named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.dev/api/core/Component#animations).`);\n  }\n}\nfunction isTemplateNode(node) {\n  return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  sharedStylesHost;\n  hostEl;\n  shadowRoot;\n  constructor(eventManager, sharedStylesHost, hostEl, component, doc, ngZone, nonce, platformIsServer, tracingService) {\n    super(eventManager, doc, ngZone, platformIsServer, tracingService);\n    this.sharedStylesHost = sharedStylesHost;\n    this.hostEl = hostEl;\n    this.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    let styles = component.styles;\n    if (ngDevMode) {\n      // We only do this in development, as for production users should not add CSS sourcemaps to components.\n      const baseHref = _getDOM().getBaseHref(doc) ?? '';\n      styles = addBaseHrefToCssSourceMap(baseHref, styles);\n    }\n    styles = shimStylesContent(component.id, styles);\n    for (const style of styles) {\n      const styleEl = document.createElement('style');\n      if (nonce) {\n        styleEl.setAttribute('nonce', nonce);\n      }\n      styleEl.textContent = style;\n      this.shadowRoot.appendChild(styleEl);\n    }\n    // Apply any external component styles to the shadow root for the component's element.\n    // The ShadowDOM renderer uses an alternative execution path for component styles that\n    // does not use the SharedStylesHost that other encapsulation modes leverage. Much like\n    // the manual addition of embedded styles directly above, any external stylesheets\n    // must be manually added here to ensure ShadowDOM components are correctly styled.\n    // TODO: Consider reworking the DOM Renderers to consolidate style handling.\n    const styleUrls = component.getExternalStyles?.();\n    if (styleUrls) {\n      for (const styleUrl of styleUrls) {\n        const linkEl = createLinkElement(styleUrl, doc);\n        if (nonce) {\n          linkEl.setAttribute('nonce', nonce);\n        }\n        this.shadowRoot.appendChild(linkEl);\n      }\n    }\n  }\n  nodeOrShadowRoot(node) {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n  appendChild(parent, newChild) {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n  insertBefore(parent, newChild, refChild) {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n  removeChild(_parent, oldChild) {\n    return super.removeChild(null, oldChild);\n  }\n  parentNode(node) {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n  destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n}\nclass NoneEncapsulationDomRenderer extends DefaultDomRenderer2 {\n  sharedStylesHost;\n  removeStylesOnCompDestroy;\n  styles;\n  styleUrls;\n  constructor(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService, compId) {\n    super(eventManager, doc, ngZone, platformIsServer, tracingService);\n    this.sharedStylesHost = sharedStylesHost;\n    this.removeStylesOnCompDestroy = removeStylesOnCompDestroy;\n    let styles = component.styles;\n    if (ngDevMode) {\n      // We only do this in development, as for production users should not add CSS sourcemaps to components.\n      const baseHref = _getDOM().getBaseHref(doc) ?? '';\n      styles = addBaseHrefToCssSourceMap(baseHref, styles);\n    }\n    this.styles = compId ? shimStylesContent(compId, styles) : styles;\n    this.styleUrls = component.getExternalStyles?.(compId);\n  }\n  applyStyles() {\n    this.sharedStylesHost.addStyles(this.styles, this.styleUrls);\n  }\n  destroy() {\n    if (!this.removeStylesOnCompDestroy) {\n      return;\n    }\n    this.sharedStylesHost.removeStyles(this.styles, this.styleUrls);\n  }\n}\nclass EmulatedEncapsulationDomRenderer2 extends NoneEncapsulationDomRenderer {\n  contentAttr;\n  hostAttr;\n  constructor(eventManager, sharedStylesHost, component, appId, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService) {\n    const compId = appId + '-' + component.id;\n    super(eventManager, sharedStylesHost, component, removeStylesOnCompDestroy, doc, ngZone, platformIsServer, tracingService, compId);\n    this.contentAttr = shimContentAttribute(compId);\n    this.hostAttr = shimHostAttribute(compId);\n  }\n  applyToHost(element) {\n    this.applyStyles();\n    this.setAttribute(element, this.hostAttr, '');\n  }\n  createElement(parent, name) {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\nexport { DomRendererFactory2, EVENT_MANAGER_PLUGINS, EventManager, EventManagerPlugin, REMOVE_STYLES_ON_COMPONENT_DESTROY, SharedStylesHost };\n","/**\n * @license Angular v19.2.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter as _DomAdapter, ɵsetRootDomAdapter as _setRootDomAdapter, ɵparseCookieValue as _parseCookieValue, ɵgetDOM as _getDOM, DOCUMENT, CommonModule, XhrFactory, ɵPLATFORM_BROWSER_ID as _PLATFORM_BROWSER_ID } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { ɵglobal as _global, ɵRuntimeError as _RuntimeError, Injectable, Inject, createPlatformFactory, ɵinternalCreateApplication as _internalCreateApplication, inject, InjectionToken, ApplicationModule, ɵINJECTOR_SCOPE as _INJECTOR_SCOPE, ErrorHandler, RendererFactory2, ɵTESTABILITY_GETTER as _TESTABILITY_GETTER, NgZone, TestabilityRegistry, Testability, ɵTESTABILITY as _TESTABILITY, platformCore, PLATFORM_ID, PLATFORM_INITIALIZER, ɵsetDocument as _setDocument, NgModule } from '@angular/core';\nimport { EventManagerPlugin, EVENT_MANAGER_PLUGINS, DomRendererFactory2, SharedStylesHost, EventManager } from './dom_renderer-DGKzginR.mjs';\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass BrowserDomAdapter extends _DomAdapter {\n  supportsDOMEvents = true;\n  static makeCurrent() {\n    _setRootDomAdapter(new BrowserDomAdapter());\n  }\n  onAndCancel(el, evt, listener, options) {\n    el.addEventListener(evt, listener, options);\n    return () => {\n      el.removeEventListener(evt, listener, options);\n    };\n  }\n  dispatchEvent(el, evt) {\n    el.dispatchEvent(evt);\n  }\n  remove(node) {\n    node.remove();\n  }\n  createElement(tagName, doc) {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n  createHtmlDocument() {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n  getDefaultDocument() {\n    return document;\n  }\n  isElementNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n  isShadowRoot(node) {\n    return node instanceof DocumentFragment;\n  }\n  /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n  getGlobalEventTarget(doc, target) {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n  getBaseHref(doc) {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n  resetBaseElement() {\n    baseElement = null;\n  }\n  getUserAgent() {\n    return window.navigator.userAgent;\n  }\n  getCookie(name) {\n    return _parseCookieValue(document.cookie, name);\n  }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n  baseElement = baseElement || document.querySelector('base');\n  return baseElement ? baseElement.getAttribute('href') : null;\n}\nfunction relativePath(url) {\n  // The base URL doesn't really matter, we just need it so relative paths have something\n  // to resolve against. In the browser `HTMLBaseElement.href` is always absolute.\n  return new URL(url, document.baseURI).pathname;\n}\nclass BrowserGetTestability {\n  addToWindow(registry) {\n    _global['getAngularTestability'] = (elem, findInAncestors = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new _RuntimeError(5103 /* RuntimeErrorCode.TESTABILITY_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Could not find testability for element.');\n      }\n      return testability;\n    };\n    _global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n    _global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n    const whenAllStable = callback => {\n      const testabilities = _global['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      const decrement = function () {\n        count--;\n        if (count == 0) {\n          callback();\n        }\n      };\n      testabilities.forEach(testability => {\n        testability.whenStable(decrement);\n      });\n    };\n    if (!_global['frameworkStabilizers']) {\n      _global['frameworkStabilizers'] = [];\n    }\n    _global['frameworkStabilizers'].push(whenAllStable);\n  }\n  findTestabilityInTree(registry, elem, findInAncestors) {\n    if (elem == null) {\n      return null;\n    }\n    const t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (_getDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, elem.host, true);\n    }\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nlet BrowserXhr = /*#__PURE__*/(() => {\n  class BrowserXhr {\n    build() {\n      return new XMLHttpRequest();\n    }\n    static ɵfac = function BrowserXhr_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrowserXhr)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: BrowserXhr,\n      factory: BrowserXhr.ɵfac\n    });\n  }\n  return BrowserXhr;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DomEventsPlugin = /*#__PURE__*/(() => {\n  class DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n      super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n      return true;\n    }\n    addEventListener(element, eventName, handler, options) {\n      element.addEventListener(eventName, handler, options);\n      return () => this.removeEventListener(element, eventName, handler, options);\n    }\n    removeEventListener(target, eventName, callback, options) {\n      return target.removeEventListener(eventName, callback, options);\n    }\n    static ɵfac = function DomEventsPlugin_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DomEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DomEventsPlugin,\n      factory: DomEventsPlugin.ɵfac\n    });\n  }\n  return DomEventsPlugin;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n  'alt': event => event.altKey,\n  'control': event => event.ctrlKey,\n  'meta': event => event.metaKey,\n  'shift': event => event.shiftKey\n};\n/**\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nlet KeyEventsPlugin = /*#__PURE__*/(() => {\n  class KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n      super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n      return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler, options) {\n      const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n      const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n      return this.manager.getZone().runOutsideAngular(() => {\n        return _getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler, options);\n      });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n    static parseEventName(eventName) {\n      const parts = eventName.toLowerCase().split('.');\n      const domEventName = parts.shift();\n      if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n        return null;\n      }\n      const key = KeyEventsPlugin._normalizeKey(parts.pop());\n      let fullKey = '';\n      let codeIX = parts.indexOf('code');\n      if (codeIX > -1) {\n        parts.splice(codeIX, 1);\n        fullKey = 'code.';\n      }\n      MODIFIER_KEYS.forEach(modifierName => {\n        const index = parts.indexOf(modifierName);\n        if (index > -1) {\n          parts.splice(index, 1);\n          fullKey += modifierName + '.';\n        }\n      });\n      fullKey += key;\n      if (parts.length != 0 || key.length === 0) {\n        // returning null instead of throwing to let another plugin process the event\n        return null;\n      }\n      // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n      //       The code must remain in the `result['domEventName']` form.\n      // return {domEventName, fullKey};\n      const result = {};\n      result['domEventName'] = domEventName;\n      result['fullKey'] = fullKey;\n      return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n    static matchEventFullKeyCode(event, fullKeyCode) {\n      let keycode = _keyMap[event.key] || event.key;\n      let key = '';\n      if (fullKeyCode.indexOf('code.') > -1) {\n        keycode = event.code;\n        key = 'code.';\n      }\n      // the keycode could be unidentified so we have to check here\n      if (keycode == null || !keycode) return false;\n      keycode = keycode.toLowerCase();\n      if (keycode === ' ') {\n        keycode = 'space'; // for readability\n      } else if (keycode === '.') {\n        keycode = 'dot'; // because '.' is used as a separator in event names\n      }\n      MODIFIER_KEYS.forEach(modifierName => {\n        if (modifierName !== keycode) {\n          const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n          if (modifierGetter(event)) {\n            key += modifierName + '.';\n          }\n        }\n      });\n      key += keycode;\n      return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n      return event => {\n        if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n          zone.runGuarded(() => handler(event));\n        }\n      };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n      return keyName === 'esc' ? 'escape' : keyName;\n    }\n    static ɵfac = function KeyEventsPlugin_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || KeyEventsPlugin)(i0.ɵɵinject(DOCUMENT));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: KeyEventsPlugin,\n      factory: KeyEventsPlugin.ɵfac\n    });\n  }\n  return KeyEventsPlugin;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/components/importing).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```angular-ts\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```ts\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```ts\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```ts\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction bootstrapApplication(rootComponent, options) {\n  return _internalCreateApplication({\n    rootComponent,\n    ...createProvidersConfig(options)\n  });\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction createApplication(options) {\n  return _internalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n  return {\n    appProviders: [...BROWSER_MODULE_PROVIDERS, ...(options?.providers ?? [])],\n    platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n  };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideProtractorTestingSupport` call results in app\n  // code.\n  return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n  return new ErrorHandler();\n}\nfunction _document() {\n  // Tell ivy about the global document\n  _setDocument(document);\n  return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: _PLATFORM_BROWSER_ID\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document\n}];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = /*#__PURE__*/createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [{\n  provide: _TESTABILITY_GETTER,\n  useClass: BrowserGetTestability\n}, {\n  provide: _TESTABILITY,\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, _TESTABILITY_GETTER]\n}, {\n  provide: Testability,\n  // Also provide as `Testability` for backwards-compatibility.\n  useClass: Testability,\n  deps: [NgZone, TestabilityRegistry, _TESTABILITY_GETTER]\n}];\nconst BROWSER_MODULE_PROVIDERS = [{\n  provide: _INJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, DomRendererFactory2, SharedStylesHost, EventManager, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: XhrFactory,\n  useClass: BrowserXhr\n}, typeof ngDevMode === 'undefined' || ngDevMode ? {\n  provide: BROWSER_MODULE_PROVIDERS_MARKER,\n  useValue: true\n} : []];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nlet BrowserModule = /*#__PURE__*/(() => {\n  class BrowserModule {\n    constructor() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        const providersAlreadyPresent = inject(BROWSER_MODULE_PROVIDERS_MARKER, {\n          optional: true,\n          skipSelf: true\n        });\n        if (providersAlreadyPresent) {\n          throw new _RuntimeError(5100 /* RuntimeErrorCode.BROWSER_MODULE_ALREADY_LOADED */, `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` + `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n        }\n      }\n    }\n    static ɵfac = function BrowserModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BrowserModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: BrowserModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n      imports: [CommonModule, ApplicationModule]\n    });\n  }\n  return BrowserModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { BrowserDomAdapter, BrowserGetTestability, BrowserModule, DomEventsPlugin, KeyEventsPlugin, bootstrapApplication, createApplication, platformBrowser, provideProtractorTestingSupport };\n","/**\n * @license Angular v19.2.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nexport { BrowserModule, bootstrapApplication, createApplication, platformBrowser, provideProtractorTestingSupport, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, KeyEventsPlugin as ɵKeyEventsPlugin } from './browser-X3l5Bmdq.mjs';\nimport { ɵgetDOM as _getDOM, DOCUMENT } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Inject, Injectable, ɵglobal as _global, ApplicationRef, InjectionToken, Injector, Optional, ɵConsole as _Console, NgModule, ɵRuntimeError as _RuntimeError, ɵXSS_SECURITY_URL as _XSS_SECURITY_URL, SecurityContext, ɵallowSanitizationBypassAndThrow as _allowSanitizationBypassAndThrow, ɵunwrapSafeValue as _unwrapSafeValue, ɵ_sanitizeUrl as __sanitizeUrl, ɵ_sanitizeHtml as __sanitizeHtml, ɵbypassSanitizationTrustHtml as _bypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle as _bypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript as _bypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl as _bypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl as _bypassSanitizationTrustResourceUrl, forwardRef, makeEnvironmentProviders, ɵwithDomHydration as _withDomHydration, ɵwithEventReplay as _withEventReplay, ɵwithI18nSupport as _withI18nSupport, ɵwithIncrementalHydration as _withIncrementalHydration, ENVIRONMENT_INITIALIZER, inject, NgZone, ɵZONELESS_ENABLED as _ZONELESS_ENABLED, ɵformatRuntimeError as _formatRuntimeError, Version } from '@angular/core';\nimport { EVENT_MANAGER_PLUGINS, EventManagerPlugin } from './dom_renderer-DGKzginR.mjs';\nexport { EventManager, REMOVE_STYLES_ON_COMPONENT_DESTROY, DomRendererFactory2 as ɵDomRendererFactory2, SharedStylesHost as ɵSharedStylesHost } from './dom_renderer-DGKzginR.mjs';\nimport { ɵwithHttpTransferCache as _withHttpTransferCache } from '@angular/common/http';\n\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nlet Meta = /*#__PURE__*/(() => {\n  class Meta {\n    _doc;\n    _dom;\n    constructor(_doc) {\n      this._doc = _doc;\n      this._dom = _getDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n      if (!tag) return null;\n      return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n      if (!tags) return [];\n      return tags.reduce((result, tag) => {\n        if (tag) {\n          result.push(this._getOrCreateElement(tag, forceCreation));\n        }\n        return result;\n      }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n      if (!attrSelector) return null;\n      return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n      if (!attrSelector) return [];\n      const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n      return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n      if (!tag) return null;\n      selector = selector || this._parseSelector(tag);\n      const meta = this.getTag(selector);\n      if (meta) {\n        return this._setMetaElementAttributes(tag, meta);\n      }\n      return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n      this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n      if (meta) {\n        this._dom.remove(meta);\n      }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n      if (!forceCreation) {\n        const selector = this._parseSelector(meta);\n        // It's allowed to have multiple elements with the same name so it's not enough to\n        // just check that element with the same name already present on the page. We also need to\n        // check if element has tag attributes\n        const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n        if (elem !== undefined) return elem;\n      }\n      const element = this._dom.createElement('meta');\n      this._setMetaElementAttributes(meta, element);\n      const head = this._doc.getElementsByTagName('head')[0];\n      head.appendChild(element);\n      return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n      Object.keys(tag).forEach(prop => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n      return el;\n    }\n    _parseSelector(tag) {\n      const attr = tag.name ? 'name' : 'property';\n      return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n      return Object.keys(tag).every(key => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n      return META_KEYS_MAP[prop] || prop;\n    }\n    static ɵfac = function Meta_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Meta)(i0.ɵɵinject(DOCUMENT));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Meta,\n      factory: Meta.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return Meta;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nlet Title = /*#__PURE__*/(() => {\n  class Title {\n    _doc;\n    constructor(_doc) {\n      this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n      return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n      this._doc.title = newTitle || '';\n    }\n    static ɵfac = function Title_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Title)(i0.ɵɵinject(DOCUMENT));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Title,\n      factory: Title.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return Title;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = _global['ng'] = _global['ng'] || {};\n    ng[name] = value;\n  }\n}\nclass ChangeDetectionPerfRecord {\n  msPerTick;\n  numTicks;\n  constructor(msPerTick, numTicks) {\n    this.msPerTick = msPerTick;\n    this.numTicks = numTicks;\n  }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n  appRef;\n  constructor(ref) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  }\n  // tslint:disable:no-console\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```ts\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n  timeChangeDetection(config) {\n    const record = config && config['record'];\n    const profileName = 'Change Detection';\n    // Profiler is not available in Android browsers without dev tools opened\n    if (record && 'profile' in console && typeof console.profile === 'function') {\n      console.profile(profileName);\n    }\n    const start = performance.now();\n    let numTicks = 0;\n    while (numTicks < 5 || performance.now() - start < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const end = performance.now();\n    if (record && 'profileEnd' in console && typeof console.profileEnd === 'function') {\n      console.profileEnd(profileName);\n    }\n    const msPerTick = (end - start) / numTicks;\n    console.log(`ran ${numTicks} change detection cycles`);\n    console.log(`${msPerTick.toFixed(2)} ms per check`);\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all() {\n    return () => true;\n  }\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n  static css(selector) {\n    return debugElement => {\n      return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n    };\n  }\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n  static directive(type) {\n    return debugNode => debugNode.providerTokens.indexOf(type) !== -1;\n  }\n}\nfunction elementMatches(n, selector) {\n  if (_getDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n  return false;\n}\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n  'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see {@link HammerGestureConfig}\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'HammerGestureConfig' : '');\n/**\n * Injection token used to provide a HammerLoader to Angular.\n *\n * @see {@link HammerLoader}\n *\n * @publicApi\n */\nconst HAMMER_LOADER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'HammerLoader' : '');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nlet HammerGestureConfig = /*#__PURE__*/(() => {\n  class HammerGestureConfig {\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n    overrides = {};\n    /**\n     * Properties whose default values can be overridden for a given event.\n     * Different sets of properties apply to different events.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    options;\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n      const mc = new Hammer(element, this.options);\n      mc.get('pinch').set({\n        enable: true\n      });\n      mc.get('rotate').set({\n        enable: true\n      });\n      for (const eventName in this.overrides) {\n        mc.get(eventName).set(this.overrides[eventName]);\n      }\n      return mc;\n    }\n    static ɵfac = function HammerGestureConfig_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HammerGestureConfig)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HammerGestureConfig,\n      factory: HammerGestureConfig.ɵfac\n    });\n  }\n  return HammerGestureConfig;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nlet HammerGesturesPlugin = /*#__PURE__*/(() => {\n  class HammerGesturesPlugin extends EventManagerPlugin {\n    _config;\n    _injector;\n    loader;\n    _loaderPromise = null;\n    constructor(doc, _config, _injector, loader) {\n      super(doc);\n      this._config = _config;\n      this._injector = _injector;\n      this.loader = loader;\n    }\n    supports(eventName) {\n      if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n        return false;\n      }\n      if (!window.Hammer && !this.loader) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          // Get a `Console` through an injector to tree-shake the\n          // class when it is unused in production.\n          const _console = this._injector.get(_Console);\n          _console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` + `loaded and no custom loader has been specified.`);\n        }\n        return false;\n      }\n      return true;\n    }\n    addEventListener(element, eventName, handler) {\n      const zone = this.manager.getZone();\n      eventName = eventName.toLowerCase();\n      // If Hammer is not present but a loader is specified, we defer adding the event listener\n      // until Hammer is loaded.\n      if (!window.Hammer && this.loader) {\n        this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n        // This `addEventListener` method returns a function to remove the added listener.\n        // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n        // than remove anything.\n        let cancelRegistration = false;\n        let deregister = () => {\n          cancelRegistration = true;\n        };\n        zone.runOutsideAngular(() => this._loaderPromise.then(() => {\n          // If Hammer isn't actually loaded when the custom loader resolves, give up.\n          if (!window.Hammer) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n              const _console = this._injector.get(_Console);\n              _console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n            }\n            deregister = () => {};\n            return;\n          }\n          if (!cancelRegistration) {\n            // Now that Hammer is loaded and the listener is being loaded for real,\n            // the deregistration function changes from canceling registration to\n            // removal.\n            deregister = this.addEventListener(element, eventName, handler);\n          }\n        }).catch(() => {\n          if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const _console = this._injector.get(_Console);\n            _console.warn(`The \"${eventName}\" event cannot be bound because the custom ` + `Hammer.JS loader failed.`);\n          }\n          deregister = () => {};\n        }));\n        // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n        // can change the behavior of `deregister` once the listener is added. Using a closure in\n        // this way allows us to avoid any additional data structures to track listener removal.\n        return () => {\n          deregister();\n        };\n      }\n      return zone.runOutsideAngular(() => {\n        // Creating the manager bind events, must be done outside of angular\n        const mc = this._config.buildHammer(element);\n        const callback = function (eventObj) {\n          zone.runGuarded(function () {\n            handler(eventObj);\n          });\n        };\n        mc.on(eventName, callback);\n        return () => {\n          mc.off(eventName, callback);\n          // destroy mc to prevent memory leak\n          if (typeof mc.destroy === 'function') {\n            mc.destroy();\n          }\n        };\n      });\n    }\n    isCustomEvent(eventName) {\n      return this._config.events.indexOf(eventName) > -1;\n    }\n    static ɵfac = function HammerGesturesPlugin_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HammerGesturesPlugin)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(HAMMER_GESTURE_CONFIG), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(HAMMER_LOADER, 8));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HammerGesturesPlugin,\n      factory: HammerGesturesPlugin.ɵfac\n    });\n  }\n  return HammerGesturesPlugin;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's `EventManager`.\n *\n * @publicApi\n */\nlet HammerModule = /*#__PURE__*/(() => {\n  class HammerModule {\n    static ɵfac = function HammerModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HammerModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: HammerModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [{\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, Injector, [new Optional(), HAMMER_LOADER]]\n      }, {\n        provide: HAMMER_GESTURE_CONFIG,\n        useClass: HammerGestureConfig\n      }]\n    });\n  }\n  return HammerModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nlet DomSanitizer = /*#__PURE__*/(() => {\n  class DomSanitizer {\n    static ɵfac = function DomSanitizer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DomSanitizer)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DomSanitizer,\n      factory: function DomSanitizer_Factory(__ngFactoryType__) {\n        let __ngConditionalFactory__ = null;\n        if (__ngFactoryType__) {\n          __ngConditionalFactory__ = new (__ngFactoryType__ || DomSanitizer)();\n        } else {\n          __ngConditionalFactory__ = i0.ɵɵinject(DomSanitizerImpl);\n        }\n        return __ngConditionalFactory__;\n      },\n      providedIn: 'root'\n    });\n  }\n  return DomSanitizer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DomSanitizerImpl = /*#__PURE__*/(() => {\n  class DomSanitizerImpl extends DomSanitizer {\n    _doc;\n    constructor(_doc) {\n      super();\n      this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n      if (value == null) return null;\n      switch (ctx) {\n        case SecurityContext.NONE:\n          return value;\n        case SecurityContext.HTML:\n          if (_allowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n            return _unwrapSafeValue(value);\n          }\n          return __sanitizeHtml(this._doc, String(value)).toString();\n        case SecurityContext.STYLE:\n          if (_allowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n            return _unwrapSafeValue(value);\n          }\n          return value;\n        case SecurityContext.SCRIPT:\n          if (_allowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n            return _unwrapSafeValue(value);\n          }\n          throw new _RuntimeError(5200 /* RuntimeErrorCode.SANITIZATION_UNSAFE_SCRIPT */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'unsafe value used in a script context');\n        case SecurityContext.URL:\n          if (_allowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n            return _unwrapSafeValue(value);\n          }\n          return __sanitizeUrl(String(value));\n        case SecurityContext.RESOURCE_URL:\n          if (_allowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n            return _unwrapSafeValue(value);\n          }\n          throw new _RuntimeError(5201 /* RuntimeErrorCode.SANITIZATION_UNSAFE_RESOURCE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `unsafe value used in a resource URL context (see ${_XSS_SECURITY_URL})`);\n        default:\n          throw new _RuntimeError(5202 /* RuntimeErrorCode.SANITIZATION_UNEXPECTED_CTX */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Unexpected SecurityContext ${ctx} (see ${_XSS_SECURITY_URL})`);\n      }\n    }\n    bypassSecurityTrustHtml(value) {\n      return _bypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n      return _bypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n      return _bypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n      return _bypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n      return _bypassSanitizationTrustResourceUrl(value);\n    }\n    static ɵfac = function DomSanitizerImpl_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DomSanitizerImpl)(i0.ɵɵinject(DOCUMENT));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DomSanitizerImpl,\n      factory: DomSanitizerImpl.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DomSanitizerImpl;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The list of features as an enum to uniquely type each `HydrationFeature`.\n * @see {@link HydrationFeature}\n *\n * @publicApi\n */\nvar HydrationFeatureKind = /*#__PURE__*/function (HydrationFeatureKind) {\n  HydrationFeatureKind[HydrationFeatureKind[\"NoHttpTransferCache\"] = 0] = \"NoHttpTransferCache\";\n  HydrationFeatureKind[HydrationFeatureKind[\"HttpTransferCacheOptions\"] = 1] = \"HttpTransferCacheOptions\";\n  HydrationFeatureKind[HydrationFeatureKind[\"I18nSupport\"] = 2] = \"I18nSupport\";\n  HydrationFeatureKind[HydrationFeatureKind[\"EventReplay\"] = 3] = \"EventReplay\";\n  HydrationFeatureKind[HydrationFeatureKind[\"IncrementalHydration\"] = 4] = \"IncrementalHydration\";\n  return HydrationFeatureKind;\n}(HydrationFeatureKind || {});\n/**\n * Helper function to create an object that represents a Hydration feature.\n */\nfunction hydrationFeature(ɵkind, ɵproviders = [], ɵoptions = {}) {\n  return {\n    ɵkind,\n    ɵproviders\n  };\n}\n/**\n * Disables HTTP transfer cache. Effectively causes HTTP requests to be performed twice: once on the\n * server and other one on the browser.\n *\n * @publicApi\n */\nfunction withNoHttpTransferCache() {\n  // This feature has no providers and acts as a flag that turns off\n  // HTTP transfer cache (which otherwise is turned on by default).\n  return hydrationFeature(HydrationFeatureKind.NoHttpTransferCache);\n}\n/**\n * The function accepts an object, which allows to configure cache parameters,\n * such as which headers should be included (no headers are included by default),\n * whether POST requests should be cached or a callback function to determine if a\n * particular request should be cached.\n *\n * @publicApi\n */\nfunction withHttpTransferCacheOptions(options) {\n  // This feature has no providers and acts as a flag to pass options to the HTTP transfer cache.\n  return hydrationFeature(HydrationFeatureKind.HttpTransferCacheOptions, _withHttpTransferCache(options));\n}\n/**\n * Enables support for hydrating i18n blocks.\n *\n * @developerPreview\n * @publicApi\n */\nfunction withI18nSupport() {\n  return hydrationFeature(HydrationFeatureKind.I18nSupport, _withI18nSupport());\n}\n/**\n * Enables support for replaying user events (e.g. `click`s) that happened on a page\n * before hydration logic has completed. Once an application is hydrated, all captured\n * events are replayed and relevant event listeners are executed.\n *\n * @usageNotes\n *\n * Basic example of how you can enable event replay in your application when\n * `bootstrapApplication` function is used:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration(withEventReplay())]\n * });\n * ```\n * @publicApi\n * @see {@link provideClientHydration}\n */\nfunction withEventReplay() {\n  return hydrationFeature(HydrationFeatureKind.EventReplay, _withEventReplay());\n}\n/**\n * Enables support for incremental hydration using the `hydrate` trigger syntax.\n *\n * @usageNotes\n *\n * Basic example of how you can enable incremental hydration in your application when\n * the `bootstrapApplication` function is used:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration(withIncrementalHydration())]\n * });\n * ```\n * @experimental\n * @publicApi\n * @see {@link provideClientHydration}\n */\nfunction withIncrementalHydration() {\n  return hydrationFeature(HydrationFeatureKind.IncrementalHydration, _withIncrementalHydration());\n}\n/**\n * Returns an `ENVIRONMENT_INITIALIZER` token setup with a function\n * that verifies whether compatible ZoneJS was used in an application\n * and logs a warning in a console if it's not the case.\n */\nfunction provideZoneJsCompatibilityDetector() {\n  return [{\n    provide: ENVIRONMENT_INITIALIZER,\n    useValue: () => {\n      const ngZone = inject(NgZone);\n      const isZoneless = inject(_ZONELESS_ENABLED);\n      // Checking `ngZone instanceof NgZone` would be insufficient here,\n      // because custom implementations might use NgZone as a base class.\n      if (!isZoneless && ngZone.constructor !== NgZone) {\n        const console = inject(_Console);\n        const message = _formatRuntimeError(-5e3 /* RuntimeErrorCode.UNSUPPORTED_ZONEJS_INSTANCE */, 'Angular detected that hydration was enabled for an application ' + 'that uses a custom or a noop Zone.js implementation. ' + 'This is not yet a fully supported configuration.');\n        console.warn(message);\n      }\n    },\n    multi: true\n  }];\n}\n/**\n * Sets up providers necessary to enable hydration functionality for the application.\n *\n * By default, the function enables the recommended set of features for the optimal\n * performance for most of the applications. It includes the following features:\n *\n * * Reconciling DOM hydration. Learn more about it [here](guide/hydration).\n * * [`HttpClient`](api/common/http/HttpClient) response caching while running on the server and\n * transferring this cache to the client to avoid extra HTTP requests. Learn more about data caching\n * [here](guide/ssr#caching-data-when-using-httpclient).\n *\n * These functions allow you to disable some of the default features or enable new ones:\n *\n * * {@link withNoHttpTransferCache} to disable HTTP transfer cache\n * * {@link withHttpTransferCacheOptions} to configure some HTTP transfer cache options\n * * {@link withI18nSupport} to enable hydration support for i18n blocks\n * * {@link withEventReplay} to enable support for replaying user events\n *\n * @usageNotes\n *\n * Basic example of how you can enable hydration in your application when\n * `bootstrapApplication` function is used:\n * ```ts\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration()]\n * });\n * ```\n *\n * Alternatively if you are using NgModules, you would add `provideClientHydration`\n * to your root app module's provider list.\n * ```ts\n * @NgModule({\n *   declarations: [RootCmp],\n *   bootstrap: [RootCmp],\n *   providers: [provideClientHydration()],\n * })\n * export class AppModule {}\n * ```\n *\n * @see {@link withNoHttpTransferCache}\n * @see {@link withHttpTransferCacheOptions}\n * @see {@link withI18nSupport}\n * @see {@link withEventReplay}\n *\n * @param features Optional features to configure additional hydration behaviors.\n * @returns A set of providers to enable hydration.\n *\n * @publicApi\n */\nfunction provideClientHydration(...features) {\n  const providers = [];\n  const featuresKind = new Set();\n  for (const {\n    ɵproviders,\n    ɵkind\n  } of features) {\n    featuresKind.add(ɵkind);\n    if (ɵproviders.length) {\n      providers.push(ɵproviders);\n    }\n  }\n  const hasHttpTransferCacheOptions = featuresKind.has(HydrationFeatureKind.HttpTransferCacheOptions);\n  if (typeof ngDevMode !== 'undefined' && ngDevMode && featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) && hasHttpTransferCacheOptions) {\n    // TODO: Make this a runtime error\n    throw new Error('Configuration error: found both withHttpTransferCacheOptions() and withNoHttpTransferCache() in the same call to provideClientHydration(), which is a contradiction.');\n  }\n  return makeEnvironmentProviders([typeof ngDevMode !== 'undefined' && ngDevMode ? provideZoneJsCompatibilityDetector() : [], _withDomHydration(), featuresKind.has(HydrationFeatureKind.NoHttpTransferCache) || hasHttpTransferCacheOptions ? [] : _withHttpTransferCache({}), providers]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n/**\n * @publicApi\n */\nconst VERSION = /*#__PURE__*/new Version('19.2.7');\nexport { By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManagerPlugin, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, HydrationFeatureKind, Meta, Title, VERSION, disableDebugTools, enableDebugTools, provideClientHydration, withEventReplay, withHttpTransferCacheOptions, withI18nSupport, withIncrementalHydration, withNoHttpTransferCache, DomSanitizerImpl as ɵDomSanitizerImpl, HammerGesturesPlugin as ɵHammerGesturesPlugin };\n","/**\n * @license Angular v19.2.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT, Location } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { ɵisPromise as _isPromise, ɵRuntimeError as _RuntimeError, Injectable, ɵisNgModule as _isNgModule, isStandalone, createEnvironmentInjector, InjectionToken, EventEmitter, input, inject, ViewContainerRef, ChangeDetectorRef, Output, Input, Directive, reflectComponentType, ɵisInjectable as _isInjectable, runInInjectionContext, Component, NgModuleFactory, Compiler, NgZone, afterNextRender, EnvironmentInjector, DestroyRef, ɵConsole as _Console, ɵPendingTasksInternal as _PendingTasksInternal } from '@angular/core';\nimport { isObservable, from, of, BehaviorSubject, combineLatest, EmptyError, concat, defer, pipe, throwError, EMPTY, ConnectableObservable, Subject, Subscription } from 'rxjs';\nimport { map, switchMap, take, startWith, filter, mergeMap, first, concatMap, tap, catchError, scan, defaultIfEmpty, last as last$1, takeLast, finalize, refCount, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/platform-browser';\n\n/**\n * The primary routing outlet.\n *\n * @publicApi\n */\nconst PRIMARY_OUTLET = 'primary';\n/**\n * A private symbol used to store the value of `Route.title` inside the `Route.data` if it is a\n * static string or `Route.resolve` if anything else. This allows us to reuse the existing route\n * data/resolvers to support the title feature without new instrumentation in the `Router` pipeline.\n */\nconst RouteTitleKey = /* @__PURE__ */Symbol('RouteTitle');\nclass ParamsAsMap {\n  params;\n  constructor(params) {\n    this.params = params || {};\n  }\n  has(name) {\n    return Object.prototype.hasOwnProperty.call(this.params, name);\n  }\n  get(name) {\n    if (this.has(name)) {\n      const v = this.params[name];\n      return Array.isArray(v) ? v[0] : v;\n    }\n    return null;\n  }\n  getAll(name) {\n    if (this.has(name)) {\n      const v = this.params[name];\n      return Array.isArray(v) ? v : [v];\n    }\n    return [];\n  }\n  get keys() {\n    return Object.keys(this.params);\n  }\n}\n/**\n * Converts a `Params` instance to a `ParamMap`.\n * @param params The instance to convert.\n * @returns The new map instance.\n *\n * @publicApi\n */\nfunction convertToParamMap(params) {\n  return new ParamsAsMap(params);\n}\n/**\n * Matches the route configuration (`route`) against the actual URL (`segments`).\n *\n * When no matcher is defined on a `Route`, this is the matcher used by the Router by default.\n *\n * @param segments The remaining unmatched segments in the current navigation\n * @param segmentGroup The current segment group being matched\n * @param route The `Route` to match against.\n *\n * @see {@link UrlMatchResult}\n * @see {@link Route}\n *\n * @returns The resulting match information or `null` if the `route` should not match.\n * @publicApi\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n  const parts = route.path.split('/');\n  if (parts.length > segments.length) {\n    // The actual URL is shorter than the config, no match\n    return null;\n  }\n  if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || parts.length < segments.length)) {\n    // The config is longer than the actual URL but we are looking for a full match, return null\n    return null;\n  }\n  const posParams = {};\n  // Check each config part against the actual URL\n  for (let index = 0; index < parts.length; index++) {\n    const part = parts[index];\n    const segment = segments[index];\n    const isParameter = part[0] === ':';\n    if (isParameter) {\n      posParams[part.substring(1)] = segment;\n    } else if (part !== segment.path) {\n      // The actual URL part does not match the config, no match\n      return null;\n    }\n  }\n  return {\n    consumed: segments.slice(0, parts.length),\n    posParams\n  };\n}\nfunction shallowEqualArrays(a, b) {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; ++i) {\n    if (!shallowEqual(a[i], b[i])) return false;\n  }\n  return true;\n}\nfunction shallowEqual(a, b) {\n  // While `undefined` should never be possible, it would sometimes be the case in IE 11\n  // and pre-chromium Edge. The check below accounts for this edge case.\n  const k1 = a ? getDataKeys(a) : undefined;\n  const k2 = b ? getDataKeys(b) : undefined;\n  if (!k1 || !k2 || k1.length != k2.length) {\n    return false;\n  }\n  let key;\n  for (let i = 0; i < k1.length; i++) {\n    key = k1[i];\n    if (!equalArraysOrString(a[key], b[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Gets the keys of an object, including `symbol` keys.\n */\nfunction getDataKeys(obj) {\n  return [...Object.keys(obj), ...Object.getOwnPropertySymbols(obj)];\n}\n/**\n * Test equality for arrays of strings or a string.\n */\nfunction equalArraysOrString(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) return false;\n    const aSorted = [...a].sort();\n    const bSorted = [...b].sort();\n    return aSorted.every((val, index) => bSorted[index] === val);\n  } else {\n    return a === b;\n  }\n}\n/**\n * Return the last element of an array.\n */\nfunction last(a) {\n  return a.length > 0 ? a[a.length - 1] : null;\n}\nfunction wrapIntoObservable(value) {\n  if (isObservable(value)) {\n    return value;\n  }\n  if (_isPromise(value)) {\n    // Use `Promise.resolve()` to wrap promise-like instances.\n    // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n    // change detection.\n    return from(Promise.resolve(value));\n  }\n  return of(value);\n}\nconst pathCompareMap = {\n  'exact': equalSegmentGroups,\n  'subset': containsSegmentGroup\n};\nconst paramCompareMap = {\n  'exact': equalParams,\n  'subset': containsParams,\n  'ignored': () => true\n};\nfunction containsTree(container, containee, options) {\n  return pathCompareMap[options.paths](container.root, containee.root, options.matrixParams) && paramCompareMap[options.queryParams](container.queryParams, containee.queryParams) && !(options.fragment === 'exact' && container.fragment !== containee.fragment);\n}\nfunction equalParams(container, containee) {\n  // TODO: This does not handle array params correctly.\n  return shallowEqual(container, containee);\n}\nfunction equalSegmentGroups(container, containee, matrixParams) {\n  if (!equalPath(container.segments, containee.segments)) return false;\n  if (!matrixParamsMatch(container.segments, containee.segments, matrixParams)) {\n    return false;\n  }\n  if (container.numberOfChildren !== containee.numberOfChildren) return false;\n  for (const c in containee.children) {\n    if (!container.children[c]) return false;\n    if (!equalSegmentGroups(container.children[c], containee.children[c], matrixParams)) return false;\n  }\n  return true;\n}\nfunction containsParams(container, containee) {\n  return Object.keys(containee).length <= Object.keys(container).length && Object.keys(containee).every(key => equalArraysOrString(container[key], containee[key]));\n}\nfunction containsSegmentGroup(container, containee, matrixParams) {\n  return containsSegmentGroupHelper(container, containee, containee.segments, matrixParams);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths, matrixParams) {\n  if (container.segments.length > containeePaths.length) {\n    const current = container.segments.slice(0, containeePaths.length);\n    if (!equalPath(current, containeePaths)) return false;\n    if (containee.hasChildren()) return false;\n    if (!matrixParamsMatch(current, containeePaths, matrixParams)) return false;\n    return true;\n  } else if (container.segments.length === containeePaths.length) {\n    if (!equalPath(container.segments, containeePaths)) return false;\n    if (!matrixParamsMatch(container.segments, containeePaths, matrixParams)) return false;\n    for (const c in containee.children) {\n      if (!container.children[c]) return false;\n      if (!containsSegmentGroup(container.children[c], containee.children[c], matrixParams)) {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    const current = containeePaths.slice(0, container.segments.length);\n    const next = containeePaths.slice(container.segments.length);\n    if (!equalPath(container.segments, current)) return false;\n    if (!matrixParamsMatch(container.segments, current, matrixParams)) return false;\n    if (!container.children[PRIMARY_OUTLET]) return false;\n    return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next, matrixParams);\n  }\n}\nfunction matrixParamsMatch(containerPaths, containeePaths, options) {\n  return containeePaths.every((containeeSegment, i) => {\n    return paramCompareMap[options](containerPaths[i].parameters, containeeSegment.parameters);\n  });\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * @usageNotes\n * ### Example\n *\n * ```ts\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlTree {\n  root;\n  queryParams;\n  fragment;\n  /** @internal */\n  _queryParamMap;\n  constructor(/** The root segment group of the URL tree */\n  root = new UrlSegmentGroup([], {}), /** The query params of the URL */\n  queryParams = {}, /** The fragment of the URL */\n  fragment = null) {\n    this.root = root;\n    this.queryParams = queryParams;\n    this.fragment = fragment;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (root.segments.length > 0) {\n        throw new _RuntimeError(4015 /* RuntimeErrorCode.INVALID_ROOT_URL_SEGMENT */, 'The root `UrlSegmentGroup` should not contain `segments`. ' + 'Instead, these segments belong in the `children` so they can be associated with a named outlet.');\n      }\n    }\n  }\n  get queryParamMap() {\n    this._queryParamMap ??= convertToParamMap(this.queryParams);\n    return this._queryParamMap;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return DEFAULT_SERIALIZER.serialize(this);\n  }\n}\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n * @publicApi\n */\nclass UrlSegmentGroup {\n  segments;\n  children;\n  /** The parent node in the url tree */\n  parent = null;\n  constructor(/** The URL segments of this group. See `UrlSegment` for more information */\n  segments, /** The list of children of this group */\n  children) {\n    this.segments = segments;\n    this.children = children;\n    Object.values(children).forEach(v => v.parent = this);\n  }\n  /** Whether the segment has child segments */\n  hasChildren() {\n    return this.numberOfChildren > 0;\n  }\n  /** Number of child segments */\n  get numberOfChildren() {\n    return Object.keys(this.children).length;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return serializePaths(this);\n  }\n}\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * @usageNotes\n * ### Example\n *\n * ```ts\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlSegment {\n  path;\n  parameters;\n  /** @internal */\n  _parameterMap;\n  constructor(/** The path part of a URL segment */\n  path, /** The matrix parameters associated with a segment */\n  parameters) {\n    this.path = path;\n    this.parameters = parameters;\n  }\n  get parameterMap() {\n    this._parameterMap ??= convertToParamMap(this.parameters);\n    return this._parameterMap;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return serializePath(this);\n  }\n}\nfunction equalSegments(as, bs) {\n  return equalPath(as, bs) && as.every((a, i) => shallowEqual(a.parameters, bs[i].parameters));\n}\nfunction equalPath(as, bs) {\n  if (as.length !== bs.length) return false;\n  return as.every((a, i) => a.path === bs[i].path);\n}\nfunction mapChildrenIntoArray(segment, fn) {\n  let res = [];\n  Object.entries(segment.children).forEach(([childOutlet, child]) => {\n    if (childOutlet === PRIMARY_OUTLET) {\n      res = res.concat(fn(child, childOutlet));\n    }\n  });\n  Object.entries(segment.children).forEach(([childOutlet, child]) => {\n    if (childOutlet !== PRIMARY_OUTLET) {\n      res = res.concat(fn(child, childOutlet));\n    }\n  });\n  return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n * @publicApi\n */\nlet UrlSerializer = /*#__PURE__*/(() => {\n  class UrlSerializer {\n    static ɵfac = function UrlSerializer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UrlSerializer)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UrlSerializer,\n      factory: () => (() => new DefaultUrlSerializer())(),\n      providedIn: 'root'\n    });\n  }\n  return UrlSerializer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * @publicApi\n */\nclass DefaultUrlSerializer {\n  /** Parses a url into a `UrlTree` */\n  parse(url) {\n    const p = new UrlParser(url);\n    return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n  }\n  /** Converts a `UrlTree` into a url */\n  serialize(tree) {\n    const segment = `/${serializeSegment(tree.root, true)}`;\n    const query = serializeQueryParams(tree.queryParams);\n    const fragment = typeof tree.fragment === `string` ? `#${encodeUriFragment(tree.fragment)}` : '';\n    return `${segment}${query}${fragment}`;\n  }\n}\nconst DEFAULT_SERIALIZER = /*#__PURE__*/new DefaultUrlSerializer();\nfunction serializePaths(segment) {\n  return segment.segments.map(p => serializePath(p)).join('/');\n}\nfunction serializeSegment(segment, root) {\n  if (!segment.hasChildren()) {\n    return serializePaths(segment);\n  }\n  if (root) {\n    const primary = segment.children[PRIMARY_OUTLET] ? serializeSegment(segment.children[PRIMARY_OUTLET], false) : '';\n    const children = [];\n    Object.entries(segment.children).forEach(([k, v]) => {\n      if (k !== PRIMARY_OUTLET) {\n        children.push(`${k}:${serializeSegment(v, false)}`);\n      }\n    });\n    return children.length > 0 ? `${primary}(${children.join('//')})` : primary;\n  } else {\n    const children = mapChildrenIntoArray(segment, (v, k) => {\n      if (k === PRIMARY_OUTLET) {\n        return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n      }\n      return [`${k}:${serializeSegment(v, false)}`];\n    });\n    // use no parenthesis if the only child is a primary outlet route\n    if (Object.keys(segment.children).length === 1 && segment.children[PRIMARY_OUTLET] != null) {\n      return `${serializePaths(segment)}/${children[0]}`;\n    }\n    return `${serializePaths(segment)}/(${children.join('//')})`;\n  }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\nfunction encodeUriString(s) {\n  return encodeURIComponent(s).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriQuery(s) {\n  return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriFragment(s) {\n  return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriSegment(s) {\n  return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nfunction decode(s) {\n  return decodeURIComponent(s);\n}\n// Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\nfunction decodeQuery(s) {\n  return decode(s.replace(/\\+/g, '%20'));\n}\nfunction serializePath(path) {\n  return `${encodeUriSegment(path.path)}${serializeMatrixParams(path.parameters)}`;\n}\nfunction serializeMatrixParams(params) {\n  return Object.entries(params).map(([key, value]) => `;${encodeUriSegment(key)}=${encodeUriSegment(value)}`).join('');\n}\nfunction serializeQueryParams(params) {\n  const strParams = Object.entries(params).map(([name, value]) => {\n    return Array.isArray(value) ? value.map(v => `${encodeUriQuery(name)}=${encodeUriQuery(v)}`).join('&') : `${encodeUriQuery(name)}=${encodeUriQuery(value)}`;\n  }).filter(s => s);\n  return strParams.length ? `?${strParams.join('&')}` : '';\n}\nconst SEGMENT_RE = /^[^\\/()?;#]+/;\nfunction matchSegments(str) {\n  const match = str.match(SEGMENT_RE);\n  return match ? match[0] : '';\n}\nconst MATRIX_PARAM_SEGMENT_RE = /^[^\\/()?;=#]+/;\nfunction matchMatrixKeySegments(str) {\n  const match = str.match(MATRIX_PARAM_SEGMENT_RE);\n  return match ? match[0] : '';\n}\nconst QUERY_PARAM_RE = /^[^=?&#]+/;\n// Return the name of the query param at the start of the string or an empty string\nfunction matchQueryParams(str) {\n  const match = str.match(QUERY_PARAM_RE);\n  return match ? match[0] : '';\n}\nconst QUERY_PARAM_VALUE_RE = /^[^&#]+/;\n// Return the value of the query param at the start of the string or an empty string\nfunction matchUrlQueryParamValue(str) {\n  const match = str.match(QUERY_PARAM_VALUE_RE);\n  return match ? match[0] : '';\n}\nclass UrlParser {\n  url;\n  remaining;\n  constructor(url) {\n    this.url = url;\n    this.remaining = url;\n  }\n  parseRootSegment() {\n    this.consumeOptional('/');\n    if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n      return new UrlSegmentGroup([], {});\n    }\n    // The root segment group never has segments\n    return new UrlSegmentGroup([], this.parseChildren());\n  }\n  parseQueryParams() {\n    const params = {};\n    if (this.consumeOptional('?')) {\n      do {\n        this.parseQueryParam(params);\n      } while (this.consumeOptional('&'));\n    }\n    return params;\n  }\n  parseFragment() {\n    return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n  }\n  parseChildren() {\n    if (this.remaining === '') {\n      return {};\n    }\n    this.consumeOptional('/');\n    const segments = [];\n    if (!this.peekStartsWith('(')) {\n      segments.push(this.parseSegment());\n    }\n    while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n      this.capture('/');\n      segments.push(this.parseSegment());\n    }\n    let children = {};\n    if (this.peekStartsWith('/(')) {\n      this.capture('/');\n      children = this.parseParens(true);\n    }\n    let res = {};\n    if (this.peekStartsWith('(')) {\n      res = this.parseParens(false);\n    }\n    if (segments.length > 0 || Object.keys(children).length > 0) {\n      res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n    }\n    return res;\n  }\n  // parse a segment with its matrix parameters\n  // ie `name;k1=v1;k2`\n  parseSegment() {\n    const path = matchSegments(this.remaining);\n    if (path === '' && this.peekStartsWith(';')) {\n      throw new _RuntimeError(4009 /* RuntimeErrorCode.EMPTY_PATH_WITH_PARAMS */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Empty path url segment cannot have parameters: '${this.remaining}'.`);\n    }\n    this.capture(path);\n    return new UrlSegment(decode(path), this.parseMatrixParams());\n  }\n  parseMatrixParams() {\n    const params = {};\n    while (this.consumeOptional(';')) {\n      this.parseParam(params);\n    }\n    return params;\n  }\n  parseParam(params) {\n    const key = matchMatrixKeySegments(this.remaining);\n    if (!key) {\n      return;\n    }\n    this.capture(key);\n    let value = '';\n    if (this.consumeOptional('=')) {\n      const valueMatch = matchSegments(this.remaining);\n      if (valueMatch) {\n        value = valueMatch;\n        this.capture(value);\n      }\n    }\n    params[decode(key)] = decode(value);\n  }\n  // Parse a single query parameter `name[=value]`\n  parseQueryParam(params) {\n    const key = matchQueryParams(this.remaining);\n    if (!key) {\n      return;\n    }\n    this.capture(key);\n    let value = '';\n    if (this.consumeOptional('=')) {\n      const valueMatch = matchUrlQueryParamValue(this.remaining);\n      if (valueMatch) {\n        value = valueMatch;\n        this.capture(value);\n      }\n    }\n    const decodedKey = decodeQuery(key);\n    const decodedVal = decodeQuery(value);\n    if (params.hasOwnProperty(decodedKey)) {\n      // Append to existing values\n      let currentVal = params[decodedKey];\n      if (!Array.isArray(currentVal)) {\n        currentVal = [currentVal];\n        params[decodedKey] = currentVal;\n      }\n      currentVal.push(decodedVal);\n    } else {\n      // Create a new value\n      params[decodedKey] = decodedVal;\n    }\n  }\n  // parse `(a/b//outlet_name:c/d)`\n  parseParens(allowPrimary) {\n    const segments = {};\n    this.capture('(');\n    while (!this.consumeOptional(')') && this.remaining.length > 0) {\n      const path = matchSegments(this.remaining);\n      const next = this.remaining[path.length];\n      // if is is not one of these characters, then the segment was unescaped\n      // or the group was not closed\n      if (next !== '/' && next !== ')' && next !== ';') {\n        throw new _RuntimeError(4010 /* RuntimeErrorCode.UNPARSABLE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot parse url '${this.url}'`);\n      }\n      let outletName = undefined;\n      if (path.indexOf(':') > -1) {\n        outletName = path.slice(0, path.indexOf(':'));\n        this.capture(outletName);\n        this.capture(':');\n      } else if (allowPrimary) {\n        outletName = PRIMARY_OUTLET;\n      }\n      const children = this.parseChildren();\n      segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] : new UrlSegmentGroup([], children);\n      this.consumeOptional('//');\n    }\n    return segments;\n  }\n  peekStartsWith(str) {\n    return this.remaining.startsWith(str);\n  }\n  // Consumes the prefix when it is present and returns whether it has been consumed\n  consumeOptional(str) {\n    if (this.peekStartsWith(str)) {\n      this.remaining = this.remaining.substring(str.length);\n      return true;\n    }\n    return false;\n  }\n  capture(str) {\n    if (!this.consumeOptional(str)) {\n      throw new _RuntimeError(4011 /* RuntimeErrorCode.UNEXPECTED_VALUE_IN_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Expected \"${str}\".`);\n    }\n  }\n}\nfunction createRoot(rootCandidate) {\n  return rootCandidate.segments.length > 0 ? new UrlSegmentGroup([], {\n    [PRIMARY_OUTLET]: rootCandidate\n  }) : rootCandidate;\n}\n/**\n * Recursively\n * - merges primary segment children into their parents\n * - drops empty children (those which have no segments and no children themselves). This latter\n * prevents serializing a group into something like `/a(aux:)`, where `aux` is an empty child\n * segment.\n * - merges named outlets without a primary segment sibling into the children. This prevents\n * serializing a URL like `//(a:a)(b:b) instead of `/(a:a//b:b)` when the aux b route lives on the\n * root but the `a` route lives under an empty path primary route.\n */\nfunction squashSegmentGroup(segmentGroup) {\n  const newChildren = {};\n  for (const [childOutlet, child] of Object.entries(segmentGroup.children)) {\n    const childCandidate = squashSegmentGroup(child);\n    // moves named children in an empty path primary child into this group\n    if (childOutlet === PRIMARY_OUTLET && childCandidate.segments.length === 0 && childCandidate.hasChildren()) {\n      for (const [grandChildOutlet, grandChild] of Object.entries(childCandidate.children)) {\n        newChildren[grandChildOutlet] = grandChild;\n      }\n    } // don't add empty children\n    else if (childCandidate.segments.length > 0 || childCandidate.hasChildren()) {\n      newChildren[childOutlet] = childCandidate;\n    }\n  }\n  const s = new UrlSegmentGroup(segmentGroup.segments, newChildren);\n  return mergeTrivialChildren(s);\n}\n/**\n * When possible, merges the primary outlet child into the parent `UrlSegmentGroup`.\n *\n * When a segment group has only one child which is a primary outlet, merges that child into the\n * parent. That is, the child segment group's segments are merged into the `s` and the child's\n * children become the children of `s`. Think of this like a 'squash', merging the child segment\n * group into the parent.\n */\nfunction mergeTrivialChildren(s) {\n  if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n    const c = s.children[PRIMARY_OUTLET];\n    return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n  }\n  return s;\n}\nfunction isUrlTree(v) {\n  return v instanceof UrlTree;\n}\n\n/**\n * Creates a `UrlTree` relative to an `ActivatedRouteSnapshot`.\n *\n * @publicApi\n *\n *\n * @param relativeTo The `ActivatedRouteSnapshot` to apply the commands to\n * @param commands An array of URL fragments with which to construct the new URL tree.\n * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n * segments, followed by the parameters for each segment.\n * The fragments are applied to the one provided in the `relativeTo` parameter.\n * @param queryParams The query parameters for the `UrlTree`. `null` if the `UrlTree` does not have\n *     any query parameters.\n * @param fragment The fragment for the `UrlTree`. `null` if the `UrlTree` does not have a fragment.\n *\n * @usageNotes\n *\n * ```ts\n * // create /team/33/user/11\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, 'user', 11]);\n *\n * // create /team/33;expand=true/user/11\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {expand: true}, 'user', 11]);\n *\n * // you can collapse static segments like this (this works only with the first passed-in value):\n * createUrlTreeFromSnapshot(snapshot, ['/team/33/user', userId]);\n *\n * // If the first segment can contain slashes, and you do not want the router to split it,\n * // you can do the following:\n * createUrlTreeFromSnapshot(snapshot, [{segmentPath: '/one/two'}]);\n *\n * // create /team/33/(user/11//right:chat)\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {outlets: {primary: 'user/11', right:\n * 'chat'}}], null, null);\n *\n * // remove the right secondary node\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n *\n * // For the examples below, assume the current URL is for the `/team/33/user/11` and the\n * `ActivatedRouteSnapshot` points to `user/11`:\n *\n * // navigate to /team/33/user/11/details\n * createUrlTreeFromSnapshot(snapshot, ['details']);\n *\n * // navigate to /team/33/user/22\n * createUrlTreeFromSnapshot(snapshot, ['../22']);\n *\n * // navigate to /team/44/user/22\n * createUrlTreeFromSnapshot(snapshot, ['../../team/44/user/22']);\n * ```\n */\nfunction createUrlTreeFromSnapshot(relativeTo, commands, queryParams = null, fragment = null) {\n  const relativeToUrlSegmentGroup = createSegmentGroupFromRoute(relativeTo);\n  return createUrlTreeFromSegmentGroup(relativeToUrlSegmentGroup, commands, queryParams, fragment);\n}\nfunction createSegmentGroupFromRoute(route) {\n  let targetGroup;\n  function createSegmentGroupFromRouteRecursive(currentRoute) {\n    const childOutlets = {};\n    for (const childSnapshot of currentRoute.children) {\n      const root = createSegmentGroupFromRouteRecursive(childSnapshot);\n      childOutlets[childSnapshot.outlet] = root;\n    }\n    const segmentGroup = new UrlSegmentGroup(currentRoute.url, childOutlets);\n    if (currentRoute === route) {\n      targetGroup = segmentGroup;\n    }\n    return segmentGroup;\n  }\n  const rootCandidate = createSegmentGroupFromRouteRecursive(route.root);\n  const rootSegmentGroup = createRoot(rootCandidate);\n  return targetGroup ?? rootSegmentGroup;\n}\nfunction createUrlTreeFromSegmentGroup(relativeTo, commands, queryParams, fragment) {\n  let root = relativeTo;\n  while (root.parent) {\n    root = root.parent;\n  }\n  // There are no commands so the `UrlTree` goes to the same path as the one created from the\n  // `UrlSegmentGroup`. All we need to do is update the `queryParams` and `fragment` without\n  // applying any other logic.\n  if (commands.length === 0) {\n    return tree(root, root, root, queryParams, fragment);\n  }\n  const nav = computeNavigation(commands);\n  if (nav.toRoot()) {\n    return tree(root, root, new UrlSegmentGroup([], {}), queryParams, fragment);\n  }\n  const position = findStartingPositionForTargetGroup(nav, root, relativeTo);\n  const newSegmentGroup = position.processChildren ? updateSegmentGroupChildren(position.segmentGroup, position.index, nav.commands) : updateSegmentGroup(position.segmentGroup, position.index, nav.commands);\n  return tree(root, position.segmentGroup, newSegmentGroup, queryParams, fragment);\n}\nfunction isMatrixParams(command) {\n  return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * Determines if a given command has an `outlets` map. When we encounter a command\n * with an outlets k/v map, we need to apply each outlet individually to the existing segment.\n */\nfunction isCommandWithOutlets(command) {\n  return typeof command === 'object' && command != null && command.outlets;\n}\nfunction tree(oldRoot, oldSegmentGroup, newSegmentGroup, queryParams, fragment) {\n  let qp = {};\n  if (queryParams) {\n    Object.entries(queryParams).forEach(([name, value]) => {\n      qp[name] = Array.isArray(value) ? value.map(v => `${v}`) : `${value}`;\n    });\n  }\n  let rootCandidate;\n  if (oldRoot === oldSegmentGroup) {\n    rootCandidate = newSegmentGroup;\n  } else {\n    rootCandidate = replaceSegment(oldRoot, oldSegmentGroup, newSegmentGroup);\n  }\n  const newRoot = createRoot(squashSegmentGroup(rootCandidate));\n  return new UrlTree(newRoot, qp, fragment);\n}\n/**\n * Replaces the `oldSegment` which is located in some child of the `current` with the `newSegment`.\n * This also has the effect of creating new `UrlSegmentGroup` copies to update references. This\n * shouldn't be necessary but the fallback logic for an invalid ActivatedRoute in the creation uses\n * the Router's current url tree. If we don't create new segment groups, we end up modifying that\n * value.\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n  const children = {};\n  Object.entries(current.children).forEach(([outletName, c]) => {\n    if (c === oldSegment) {\n      children[outletName] = newSegment;\n    } else {\n      children[outletName] = replaceSegment(c, oldSegment, newSegment);\n    }\n  });\n  return new UrlSegmentGroup(current.segments, children);\n}\nclass Navigation {\n  isAbsolute;\n  numberOfDoubleDots;\n  commands;\n  constructor(isAbsolute, numberOfDoubleDots, commands) {\n    this.isAbsolute = isAbsolute;\n    this.numberOfDoubleDots = numberOfDoubleDots;\n    this.commands = commands;\n    if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n      throw new _RuntimeError(4003 /* RuntimeErrorCode.ROOT_SEGMENT_MATRIX_PARAMS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Root segment cannot have matrix parameters');\n    }\n    const cmdWithOutlet = commands.find(isCommandWithOutlets);\n    if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n      throw new _RuntimeError(4004 /* RuntimeErrorCode.MISPLACED_OUTLETS_COMMAND */, (typeof ngDevMode === 'undefined' || ngDevMode) && '{outlets:{}} has to be the last command');\n    }\n  }\n  toRoot() {\n    return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n  }\n}\n/** Transforms commands to a normalized `Navigation` */\nfunction computeNavigation(commands) {\n  if (typeof commands[0] === 'string' && commands.length === 1 && commands[0] === '/') {\n    return new Navigation(true, 0, commands);\n  }\n  let numberOfDoubleDots = 0;\n  let isAbsolute = false;\n  const res = commands.reduce((res, cmd, cmdIdx) => {\n    if (typeof cmd === 'object' && cmd != null) {\n      if (cmd.outlets) {\n        const outlets = {};\n        Object.entries(cmd.outlets).forEach(([name, commands]) => {\n          outlets[name] = typeof commands === 'string' ? commands.split('/') : commands;\n        });\n        return [...res, {\n          outlets\n        }];\n      }\n      if (cmd.segmentPath) {\n        return [...res, cmd.segmentPath];\n      }\n    }\n    if (!(typeof cmd === 'string')) {\n      return [...res, cmd];\n    }\n    if (cmdIdx === 0) {\n      cmd.split('/').forEach((urlPart, partIndex) => {\n        if (partIndex == 0 && urlPart === '.') ;else if (partIndex == 0 && urlPart === '') {\n          //  '/a'\n          isAbsolute = true;\n        } else if (urlPart === '..') {\n          //  '../a'\n          numberOfDoubleDots++;\n        } else if (urlPart != '') {\n          res.push(urlPart);\n        }\n      });\n      return res;\n    }\n    return [...res, cmd];\n  }, []);\n  return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nclass Position {\n  segmentGroup;\n  processChildren;\n  index;\n  constructor(segmentGroup, processChildren, index) {\n    this.segmentGroup = segmentGroup;\n    this.processChildren = processChildren;\n    this.index = index;\n  }\n}\nfunction findStartingPositionForTargetGroup(nav, root, target) {\n  if (nav.isAbsolute) {\n    return new Position(root, true, 0);\n  }\n  if (!target) {\n    // `NaN` is used only to maintain backwards compatibility with incorrectly mocked\n    // `ActivatedRouteSnapshot` in tests. In prior versions of this code, the position here was\n    // determined based on an internal property that was rarely mocked, resulting in `NaN`. In\n    // reality, this code path should _never_ be touched since `target` is not allowed to be falsey.\n    return new Position(root, false, NaN);\n  }\n  if (target.parent === null) {\n    return new Position(target, true, 0);\n  }\n  const modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n  const index = target.segments.length - 1 + modifier;\n  return createPositionApplyingDoubleDots(target, index, nav.numberOfDoubleDots);\n}\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n  let g = group;\n  let ci = index;\n  let dd = numberOfDoubleDots;\n  while (dd > ci) {\n    dd -= ci;\n    g = g.parent;\n    if (!g) {\n      throw new _RuntimeError(4005 /* RuntimeErrorCode.INVALID_DOUBLE_DOTS */, (typeof ngDevMode === 'undefined' || ngDevMode) && \"Invalid number of '../'\");\n    }\n    ci = g.segments.length;\n  }\n  return new Position(g, false, ci - dd);\n}\nfunction getOutlets(commands) {\n  if (isCommandWithOutlets(commands[0])) {\n    return commands[0].outlets;\n  }\n  return {\n    [PRIMARY_OUTLET]: commands\n  };\n}\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n  segmentGroup ??= new UrlSegmentGroup([], {});\n  if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n    return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n  }\n  const m = prefixedWith(segmentGroup, startIndex, commands);\n  const slicedCommands = commands.slice(m.commandIndex);\n  if (m.match && m.pathIndex < segmentGroup.segments.length) {\n    const g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n    g.children[PRIMARY_OUTLET] = new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n    return updateSegmentGroupChildren(g, 0, slicedCommands);\n  } else if (m.match && slicedCommands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else if (m.match && !segmentGroup.hasChildren()) {\n    return createNewSegmentGroup(segmentGroup, startIndex, commands);\n  } else if (m.match) {\n    return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n  } else {\n    return createNewSegmentGroup(segmentGroup, startIndex, commands);\n  }\n}\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n  if (commands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else {\n    const outlets = getOutlets(commands);\n    const children = {};\n    // If the set of commands applies to anything other than the primary outlet and the child\n    // segment is an empty path primary segment on its own, we want to apply the commands to the\n    // empty child path rather than here. The outcome is that the empty primary child is effectively\n    // removed from the final output UrlTree. Imagine the following config:\n    //\n    // {path: '', children: [{path: '**', outlet: 'popup'}]}.\n    //\n    // Navigation to /(popup:a) will activate the child outlet correctly Given a follow-up\n    // navigation with commands\n    // ['/', {outlets: {'popup': 'b'}}], we _would not_ want to apply the outlet commands to the\n    // root segment because that would result in\n    // //(popup:a)(popup:b) since the outlet command got applied one level above where it appears in\n    // the `ActivatedRoute` rather than updating the existing one.\n    //\n    // Because empty paths do not appear in the URL segments and the fact that the segments used in\n    // the output `UrlTree` are squashed to eliminate these empty paths where possible\n    // https://github.com/angular/angular/blob/13f10de40e25c6900ca55bd83b36bd533dacfa9e/packages/router/src/url_tree.ts#L755\n    // it can be hard to determine what is the right thing to do when applying commands to a\n    // `UrlSegmentGroup` that is created from an \"unsquashed\"/expanded `ActivatedRoute` tree.\n    // This code effectively \"squashes\" empty path primary routes when they have no siblings on\n    // the same level of the tree.\n    if (Object.keys(outlets).some(o => o !== PRIMARY_OUTLET) && segmentGroup.children[PRIMARY_OUTLET] && segmentGroup.numberOfChildren === 1 && segmentGroup.children[PRIMARY_OUTLET].segments.length === 0) {\n      const childrenOfEmptyChild = updateSegmentGroupChildren(segmentGroup.children[PRIMARY_OUTLET], startIndex, commands);\n      return new UrlSegmentGroup(segmentGroup.segments, childrenOfEmptyChild.children);\n    }\n    Object.entries(outlets).forEach(([outlet, commands]) => {\n      if (typeof commands === 'string') {\n        commands = [commands];\n      }\n      if (commands !== null) {\n        children[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n      }\n    });\n    Object.entries(segmentGroup.children).forEach(([childOutlet, child]) => {\n      if (outlets[childOutlet] === undefined) {\n        children[childOutlet] = child;\n      }\n    });\n    return new UrlSegmentGroup(segmentGroup.segments, children);\n  }\n}\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n  let currentCommandIndex = 0;\n  let currentPathIndex = startIndex;\n  const noMatch = {\n    match: false,\n    pathIndex: 0,\n    commandIndex: 0\n  };\n  while (currentPathIndex < segmentGroup.segments.length) {\n    if (currentCommandIndex >= commands.length) return noMatch;\n    const path = segmentGroup.segments[currentPathIndex];\n    const command = commands[currentCommandIndex];\n    // Do not try to consume command as part of the prefixing if it has outlets because it can\n    // contain outlets other than the one being processed. Consuming the outlets command would\n    // result in other outlets being ignored.\n    if (isCommandWithOutlets(command)) {\n      break;\n    }\n    const curr = `${command}`;\n    const next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n    if (currentPathIndex > 0 && curr === undefined) break;\n    if (curr && next && typeof next === 'object' && next.outlets === undefined) {\n      if (!compare(curr, next, path)) return noMatch;\n      currentCommandIndex += 2;\n    } else {\n      if (!compare(curr, {}, path)) return noMatch;\n      currentCommandIndex++;\n    }\n    currentPathIndex++;\n  }\n  return {\n    match: true,\n    pathIndex: currentPathIndex,\n    commandIndex: currentCommandIndex\n  };\n}\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n  const paths = segmentGroup.segments.slice(0, startIndex);\n  let i = 0;\n  while (i < commands.length) {\n    const command = commands[i];\n    if (isCommandWithOutlets(command)) {\n      const children = createNewSegmentChildren(command.outlets);\n      return new UrlSegmentGroup(paths, children);\n    }\n    // if we start with an object literal, we need to reuse the path part from the segment\n    if (i === 0 && isMatrixParams(commands[0])) {\n      const p = segmentGroup.segments[startIndex];\n      paths.push(new UrlSegment(p.path, stringify(commands[0])));\n      i++;\n      continue;\n    }\n    const curr = isCommandWithOutlets(command) ? command.outlets[PRIMARY_OUTLET] : `${command}`;\n    const next = i < commands.length - 1 ? commands[i + 1] : null;\n    if (curr && next && isMatrixParams(next)) {\n      paths.push(new UrlSegment(curr, stringify(next)));\n      i += 2;\n    } else {\n      paths.push(new UrlSegment(curr, {}));\n      i++;\n    }\n  }\n  return new UrlSegmentGroup(paths, {});\n}\nfunction createNewSegmentChildren(outlets) {\n  const children = {};\n  Object.entries(outlets).forEach(([outlet, commands]) => {\n    if (typeof commands === 'string') {\n      commands = [commands];\n    }\n    if (commands !== null) {\n      children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n    }\n  });\n  return children;\n}\nfunction stringify(params) {\n  const res = {};\n  Object.entries(params).forEach(([k, v]) => res[k] = `${v}`);\n  return res;\n}\nfunction compare(path, params, segment) {\n  return path == segment.path && shallowEqual(params, segment.parameters);\n}\nconst IMPERATIVE_NAVIGATION = 'imperative';\n/**\n * Identifies the type of a router event.\n *\n * @publicApi\n */\nvar EventType = /*#__PURE__*/function (EventType) {\n  EventType[EventType[\"NavigationStart\"] = 0] = \"NavigationStart\";\n  EventType[EventType[\"NavigationEnd\"] = 1] = \"NavigationEnd\";\n  EventType[EventType[\"NavigationCancel\"] = 2] = \"NavigationCancel\";\n  EventType[EventType[\"NavigationError\"] = 3] = \"NavigationError\";\n  EventType[EventType[\"RoutesRecognized\"] = 4] = \"RoutesRecognized\";\n  EventType[EventType[\"ResolveStart\"] = 5] = \"ResolveStart\";\n  EventType[EventType[\"ResolveEnd\"] = 6] = \"ResolveEnd\";\n  EventType[EventType[\"GuardsCheckStart\"] = 7] = \"GuardsCheckStart\";\n  EventType[EventType[\"GuardsCheckEnd\"] = 8] = \"GuardsCheckEnd\";\n  EventType[EventType[\"RouteConfigLoadStart\"] = 9] = \"RouteConfigLoadStart\";\n  EventType[EventType[\"RouteConfigLoadEnd\"] = 10] = \"RouteConfigLoadEnd\";\n  EventType[EventType[\"ChildActivationStart\"] = 11] = \"ChildActivationStart\";\n  EventType[EventType[\"ChildActivationEnd\"] = 12] = \"ChildActivationEnd\";\n  EventType[EventType[\"ActivationStart\"] = 13] = \"ActivationStart\";\n  EventType[EventType[\"ActivationEnd\"] = 14] = \"ActivationEnd\";\n  EventType[EventType[\"Scroll\"] = 15] = \"Scroll\";\n  EventType[EventType[\"NavigationSkipped\"] = 16] = \"NavigationSkipped\";\n  return EventType;\n}(EventType || {});\n/**\n * Base for events the router goes through, as opposed to events tied to a specific\n * route. Fired one time for any given navigation.\n *\n * The following code shows how a class subscribes to router events.\n *\n * ```ts\n * import {Event, RouterEvent, Router} from '@angular/router';\n *\n * class MyService {\n *   constructor(public router: Router) {\n *     router.events.pipe(\n *        filter((e: Event | RouterEvent): e is RouterEvent => e instanceof RouterEvent)\n *     ).subscribe((e: RouterEvent) => {\n *       // Do something\n *     });\n *   }\n * }\n * ```\n *\n * @see {@link Event}\n * @see [Router events summary](guide/routing/router-reference#router-events)\n * @publicApi\n */\nclass RouterEvent {\n  id;\n  url;\n  constructor(/** A unique ID that the router assigns to every router navigation. */\n  id, /** The URL that is the destination for this navigation. */\n  url) {\n    this.id = id;\n    this.url = url;\n  }\n}\n/**\n * An event triggered when a navigation starts.\n *\n * @publicApi\n */\nclass NavigationStart extends RouterEvent {\n  type = EventType.NavigationStart;\n  /**\n   * Identifies the call or event that triggered the navigation.\n   * An `imperative` trigger is a call to `router.navigateByUrl()` or `router.navigate()`.\n   *\n   * @see {@link NavigationEnd}\n   * @see {@link NavigationCancel}\n   * @see {@link NavigationError}\n   */\n  navigationTrigger;\n  /**\n   * The navigation state that was previously supplied to the `pushState` call,\n   * when the navigation is triggered by a `popstate` event. Otherwise null.\n   *\n   * The state object is defined by `NavigationExtras`, and contains any\n   * developer-defined state value, as well as a unique ID that\n   * the router assigns to every router transition/navigation.\n   *\n   * From the perspective of the router, the router never \"goes back\".\n   * When the user clicks on the back button in the browser,\n   * a new navigation ID is created.\n   *\n   * Use the ID in this previous-state object to differentiate between a newly created\n   * state and one returned to by a `popstate` event, so that you can restore some\n   * remembered state, such as scroll position.\n   *\n   */\n  restoredState;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  navigationTrigger = 'imperative', /** @docsNotRequired */\n  restoredState = null) {\n    super(id, url);\n    this.navigationTrigger = navigationTrigger;\n    this.restoredState = restoredState;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationStart(id: ${this.id}, url: '${this.url}')`;\n  }\n}\n/**\n * An event triggered when a navigation ends successfully.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationCancel}\n * @see {@link NavigationError}\n *\n * @publicApi\n */\nclass NavigationEnd extends RouterEvent {\n  urlAfterRedirects;\n  type = EventType.NavigationEnd;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;\n  }\n}\n/**\n * A code for the `NavigationCancel` event of the `Router` to indicate the\n * reason a navigation failed.\n *\n * @publicApi\n */\nvar NavigationCancellationCode = /*#__PURE__*/function (NavigationCancellationCode) {\n  /**\n   * A navigation failed because a guard returned a `UrlTree` to redirect.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"Redirect\"] = 0] = \"Redirect\";\n  /**\n   * A navigation failed because a more recent navigation started.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"SupersededByNewNavigation\"] = 1] = \"SupersededByNewNavigation\";\n  /**\n   * A navigation failed because one of the resolvers completed without emitting a value.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"NoDataFromResolver\"] = 2] = \"NoDataFromResolver\";\n  /**\n   * A navigation failed because a guard returned `false`.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"GuardRejected\"] = 3] = \"GuardRejected\";\n  return NavigationCancellationCode;\n}(NavigationCancellationCode || {});\n/**\n * A code for the `NavigationSkipped` event of the `Router` to indicate the\n * reason a navigation was skipped.\n *\n * @publicApi\n */\nvar NavigationSkippedCode = /*#__PURE__*/function (NavigationSkippedCode) {\n  /**\n   * A navigation was skipped because the navigation URL was the same as the current Router URL.\n   */\n  NavigationSkippedCode[NavigationSkippedCode[\"IgnoredSameUrlNavigation\"] = 0] = \"IgnoredSameUrlNavigation\";\n  /**\n   * A navigation was skipped because the configured `UrlHandlingStrategy` return `false` for both\n   * the current Router URL and the target of the navigation.\n   *\n   * @see {@link UrlHandlingStrategy}\n   */\n  NavigationSkippedCode[NavigationSkippedCode[\"IgnoredByUrlHandlingStrategy\"] = 1] = \"IgnoredByUrlHandlingStrategy\";\n  return NavigationSkippedCode;\n}(NavigationSkippedCode || {});\n/**\n * An event triggered when a navigation is canceled, directly or indirectly.\n * This can happen for several reasons including when a route guard\n * returns `false` or initiates a redirect by returning a `UrlTree`.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationEnd}\n * @see {@link NavigationError}\n *\n * @publicApi\n */\nclass NavigationCancel extends RouterEvent {\n  reason;\n  code;\n  type = EventType.NavigationCancel;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url,\n  /**\n   * A description of why the navigation was cancelled. For debug purposes only. Use `code`\n   * instead for a stable cancellation reason that can be used in production.\n   */\n  reason,\n  /**\n   * A code to indicate why the navigation was canceled. This cancellation code is stable for\n   * the reason and can be relied on whereas the `reason` string could change and should not be\n   * used in production.\n   */\n  code) {\n    super(id, url);\n    this.reason = reason;\n    this.code = code;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;\n  }\n}\n/**\n * An event triggered when a navigation is skipped.\n * This can happen for a couple reasons including onSameUrlHandling\n * is set to `ignore` and the navigation URL is not different than the\n * current state.\n *\n * @publicApi\n */\nclass NavigationSkipped extends RouterEvent {\n  reason;\n  code;\n  type = EventType.NavigationSkipped;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url,\n  /**\n   * A description of why the navigation was skipped. For debug purposes only. Use `code`\n   * instead for a stable skipped reason that can be used in production.\n   */\n  reason,\n  /**\n   * A code to indicate why the navigation was skipped. This code is stable for\n   * the reason and can be relied on whereas the `reason` string could change and should not be\n   * used in production.\n   */\n  code) {\n    super(id, url);\n    this.reason = reason;\n    this.code = code;\n  }\n}\n/**\n * An event triggered when a navigation fails due to an unexpected error.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationEnd}\n * @see {@link NavigationCancel}\n *\n * @publicApi\n */\nclass NavigationError extends RouterEvent {\n  error;\n  target;\n  type = EventType.NavigationError;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  error,\n  /**\n   * The target of the navigation when the error occurred.\n   *\n   * Note that this can be `undefined` because an error could have occurred before the\n   * `RouterStateSnapshot` was created for the navigation.\n   */\n  target) {\n    super(id, url);\n    this.error = error;\n    this.target = target;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;\n  }\n}\n/**\n * An event triggered when routes are recognized.\n *\n * @publicApi\n */\nclass RoutesRecognized extends RouterEvent {\n  urlAfterRedirects;\n  state;\n  type = EventType.RoutesRecognized;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the start of the Guard phase of routing.\n *\n * @see {@link GuardsCheckEnd}\n *\n * @publicApi\n */\nclass GuardsCheckStart extends RouterEvent {\n  urlAfterRedirects;\n  state;\n  type = EventType.GuardsCheckStart;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n  }\n  toString() {\n    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the end of the Guard phase of routing.\n *\n * @see {@link GuardsCheckStart}\n *\n * @publicApi\n */\nclass GuardsCheckEnd extends RouterEvent {\n  urlAfterRedirects;\n  state;\n  shouldActivate;\n  type = EventType.GuardsCheckEnd;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state, /** @docsNotRequired */\n  shouldActivate) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.shouldActivate = shouldActivate;\n  }\n  toString() {\n    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;\n  }\n}\n/**\n * An event triggered at the start of the Resolve phase of routing.\n *\n * Runs in the \"resolve\" phase whether or not there is anything to resolve.\n * In future, may change to only run when there are things to be resolved.\n *\n * @see {@link ResolveEnd}\n *\n * @publicApi\n */\nclass ResolveStart extends RouterEvent {\n  urlAfterRedirects;\n  state;\n  type = EventType.ResolveStart;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n  }\n  toString() {\n    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the end of the Resolve phase of routing.\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ResolveEnd extends RouterEvent {\n  urlAfterRedirects;\n  state;\n  type = EventType.ResolveEnd;\n  constructor(/** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n  }\n  toString() {\n    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered before lazy loading a route configuration.\n *\n * @see {@link RouteConfigLoadEnd}\n *\n * @publicApi\n */\nclass RouteConfigLoadStart {\n  route;\n  type = EventType.RouteConfigLoadStart;\n  constructor(/** @docsNotRequired */\n  route) {\n    this.route = route;\n  }\n  toString() {\n    return `RouteConfigLoadStart(path: ${this.route.path})`;\n  }\n}\n/**\n * An event triggered when a route has been lazy loaded.\n *\n * @see {@link RouteConfigLoadStart}\n *\n * @publicApi\n */\nclass RouteConfigLoadEnd {\n  route;\n  type = EventType.RouteConfigLoadEnd;\n  constructor(/** @docsNotRequired */\n  route) {\n    this.route = route;\n  }\n  toString() {\n    return `RouteConfigLoadEnd(path: ${this.route.path})`;\n  }\n}\n/**\n * An event triggered at the start of the child-activation\n * part of the Resolve phase of routing.\n * @see {@link ChildActivationEnd}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ChildActivationStart {\n  snapshot;\n  type = EventType.ChildActivationStart;\n  constructor(/** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ChildActivationStart(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the end of the child-activation part\n * of the Resolve phase of routing.\n * @see {@link ChildActivationStart}\n * @see {@link ResolveStart}\n * @publicApi\n */\nclass ChildActivationEnd {\n  snapshot;\n  type = EventType.ChildActivationEnd;\n  constructor(/** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ChildActivationEnd(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the start of the activation part\n * of the Resolve phase of routing.\n * @see {@link ActivationEnd}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ActivationStart {\n  snapshot;\n  type = EventType.ActivationStart;\n  constructor(/** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ActivationStart(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the end of the activation part\n * of the Resolve phase of routing.\n * @see {@link ActivationStart}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ActivationEnd {\n  snapshot;\n  type = EventType.ActivationEnd;\n  constructor(/** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ActivationEnd(path: '${path}')`;\n  }\n}\n/**\n * An event triggered by scrolling.\n *\n * @publicApi\n */\nclass Scroll {\n  routerEvent;\n  position;\n  anchor;\n  type = EventType.Scroll;\n  constructor(/** @docsNotRequired */\n  routerEvent, /** @docsNotRequired */\n  position, /** @docsNotRequired */\n  anchor) {\n    this.routerEvent = routerEvent;\n    this.position = position;\n    this.anchor = anchor;\n  }\n  toString() {\n    const pos = this.position ? `${this.position[0]}, ${this.position[1]}` : null;\n    return `Scroll(anchor: '${this.anchor}', position: '${pos}')`;\n  }\n}\nclass BeforeActivateRoutes {}\nclass RedirectRequest {\n  url;\n  navigationBehaviorOptions;\n  constructor(url, navigationBehaviorOptions) {\n    this.url = url;\n    this.navigationBehaviorOptions = navigationBehaviorOptions;\n  }\n}\nfunction stringifyEvent(routerEvent) {\n  switch (routerEvent.type) {\n    case EventType.ActivationEnd:\n      return `ActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ActivationStart:\n      return `ActivationStart(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ChildActivationEnd:\n      return `ChildActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ChildActivationStart:\n      return `ChildActivationStart(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.GuardsCheckEnd:\n      return `GuardsCheckEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state}, shouldActivate: ${routerEvent.shouldActivate})`;\n    case EventType.GuardsCheckStart:\n      return `GuardsCheckStart(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.NavigationCancel:\n      return `NavigationCancel(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.NavigationSkipped:\n      return `NavigationSkipped(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.NavigationEnd:\n      return `NavigationEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}')`;\n    case EventType.NavigationError:\n      return `NavigationError(id: ${routerEvent.id}, url: '${routerEvent.url}', error: ${routerEvent.error})`;\n    case EventType.NavigationStart:\n      return `NavigationStart(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.ResolveEnd:\n      return `ResolveEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.ResolveStart:\n      return `ResolveStart(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.RouteConfigLoadEnd:\n      return `RouteConfigLoadEnd(path: ${routerEvent.route.path})`;\n    case EventType.RouteConfigLoadStart:\n      return `RouteConfigLoadStart(path: ${routerEvent.route.path})`;\n    case EventType.RoutesRecognized:\n      return `RoutesRecognized(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.Scroll:\n      const pos = routerEvent.position ? `${routerEvent.position[0]}, ${routerEvent.position[1]}` : null;\n      return `Scroll(anchor: '${routerEvent.anchor}', position: '${pos}')`;\n  }\n}\n\n/**\n * Creates an `EnvironmentInjector` if the `Route` has providers and one does not already exist\n * and returns the injector. Otherwise, if the `Route` does not have `providers`, returns the\n * `currentInjector`.\n *\n * @param route The route that might have providers\n * @param currentInjector The parent injector of the `Route`\n */\nfunction getOrCreateRouteInjectorIfNeeded(route, currentInjector) {\n  if (route.providers && !route._injector) {\n    route._injector = createEnvironmentInjector(route.providers, currentInjector, `Route: ${route.path}`);\n  }\n  return route._injector ?? currentInjector;\n}\nfunction validateConfig(config, parentPath = '', requireStandaloneComponents = false) {\n  // forEach doesn't iterate undefined values\n  for (let i = 0; i < config.length; i++) {\n    const route = config[i];\n    const fullPath = getFullPath(parentPath, route);\n    validateNode(route, fullPath, requireStandaloneComponents);\n  }\n}\nfunction assertStandalone(fullPath, component) {\n  if (component && _isNgModule(component)) {\n    throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. You are using 'loadComponent' with a module, ` + `but it must be used with standalone components. Use 'loadChildren' instead.`);\n  } else if (component && !isStandalone(component)) {\n    throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. The component must be standalone.`);\n  }\n}\nfunction validateNode(route, fullPath, requireStandaloneComponents) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!route) {\n      throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `\n      Invalid configuration of route '${fullPath}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `);\n    }\n    if (Array.isArray(route)) {\n      throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': Array cannot be specified`);\n    }\n    if (!route.redirectTo && !route.component && !route.loadComponent && !route.children && !route.loadChildren && route.outlet && route.outlet !== PRIMARY_OUTLET) {\n      throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': a componentless route without children or loadChildren cannot have a named outlet set`);\n    }\n    if (route.redirectTo && route.children) {\n      throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and children cannot be used together`);\n    }\n    if (route.redirectTo && route.loadChildren) {\n      throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and loadChildren cannot be used together`);\n    }\n    if (route.children && route.loadChildren) {\n      throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': children and loadChildren cannot be used together`);\n    }\n    if (route.redirectTo && (route.component || route.loadComponent)) {\n      throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and component/loadComponent cannot be used together`);\n    }\n    if (route.component && route.loadComponent) {\n      throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': component and loadComponent cannot be used together`);\n    }\n    if (route.redirectTo && route.canActivate) {\n      throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and canActivate cannot be used together. Redirects happen before activation ` + `so canActivate will never be executed.`);\n    }\n    if (route.path && route.matcher) {\n      throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': path and matcher cannot be used together`);\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.loadComponent && !route.children && !route.loadChildren) {\n      throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. One of the following must be provided: component, loadComponent, redirectTo, children or loadChildren`);\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n      throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': routes must have either a path or a matcher specified`);\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n      throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': path cannot start with a slash`);\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n      const exp = `The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`;\n      throw new _RuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '{path: \"${fullPath}\", redirectTo: \"${route.redirectTo}\"}': please provide 'pathMatch'. ${exp}`);\n    }\n    if (requireStandaloneComponents) {\n      assertStandalone(fullPath, route.component);\n    }\n  }\n  if (route.children) {\n    validateConfig(route.children, fullPath, requireStandaloneComponents);\n  }\n}\nfunction getFullPath(parentPath, currentRoute) {\n  if (!currentRoute) {\n    return parentPath;\n  }\n  if (!parentPath && !currentRoute.path) {\n    return '';\n  } else if (parentPath && !currentRoute.path) {\n    return `${parentPath}/`;\n  } else if (!parentPath && currentRoute.path) {\n    return currentRoute.path;\n  } else {\n    return `${parentPath}/${currentRoute.path}`;\n  }\n}\n/** Returns the `route.outlet` or PRIMARY_OUTLET if none exists. */\nfunction getOutlet(route) {\n  return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * Sorts the `routes` such that the ones with an outlet matching `outletName` come first.\n * The order of the configs is otherwise preserved.\n */\nfunction sortByMatchingOutlets(routes, outletName) {\n  const sortedConfig = routes.filter(r => getOutlet(r) === outletName);\n  sortedConfig.push(...routes.filter(r => getOutlet(r) !== outletName));\n  return sortedConfig;\n}\n/**\n * Gets the first injector in the snapshot's parent tree.\n *\n * If the `Route` has a static list of providers, the returned injector will be the one created from\n * those. If it does not exist, the returned injector may come from the parents, which may be from a\n * loaded config or their static providers.\n *\n * Returns `null` if there is neither this nor any parents have a stored injector.\n *\n * Generally used for retrieving the injector to use for getting tokens for guards/resolvers and\n * also used for getting the correct injector to use for creating components.\n */\nfunction getClosestRouteInjector(snapshot) {\n  if (!snapshot) return null;\n  // If the current route has its own injector, which is created from the static providers on the\n  // route itself, we should use that. Otherwise, we start at the parent since we do not want to\n  // include the lazy loaded injector from this route.\n  if (snapshot.routeConfig?._injector) {\n    return snapshot.routeConfig._injector;\n  }\n  for (let s = snapshot.parent; s; s = s.parent) {\n    const route = s.routeConfig;\n    // Note that the order here is important. `_loadedInjector` stored on the route with\n    // `loadChildren: () => NgModule` so it applies to child routes with priority. The `_injector`\n    // is created from the static providers on that parent route, so it applies to the children as\n    // well, but only if there is no lazy loaded NgModuleRef injector.\n    if (route?._loadedInjector) return route._loadedInjector;\n    if (route?._injector) return route._injector;\n  }\n  return null;\n}\n\n/**\n * Store contextual information about a `RouterOutlet`\n *\n * @publicApi\n */\nclass OutletContext {\n  rootInjector;\n  outlet = null;\n  route = null;\n  children;\n  attachRef = null;\n  get injector() {\n    return getClosestRouteInjector(this.route?.snapshot) ?? this.rootInjector;\n  }\n  constructor(rootInjector) {\n    this.rootInjector = rootInjector;\n    this.children = new ChildrenOutletContexts(this.rootInjector);\n  }\n}\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n * @publicApi\n */\nlet ChildrenOutletContexts = /*#__PURE__*/(() => {\n  class ChildrenOutletContexts {\n    rootInjector;\n    // contexts for child outlets, by name.\n    contexts = new Map();\n    /** @nodoc */\n    constructor(rootInjector) {\n      this.rootInjector = rootInjector;\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    onChildOutletCreated(childName, outlet) {\n      const context = this.getOrCreateContext(childName);\n      context.outlet = outlet;\n      this.contexts.set(childName, context);\n    }\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    onChildOutletDestroyed(childName) {\n      const context = this.getContext(childName);\n      if (context) {\n        context.outlet = null;\n        context.attachRef = null;\n      }\n    }\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    onOutletDeactivated() {\n      const contexts = this.contexts;\n      this.contexts = new Map();\n      return contexts;\n    }\n    onOutletReAttached(contexts) {\n      this.contexts = contexts;\n    }\n    getOrCreateContext(childName) {\n      let context = this.getContext(childName);\n      if (!context) {\n        context = new OutletContext(this.rootInjector);\n        this.contexts.set(childName, context);\n      }\n      return context;\n    }\n    getContext(childName) {\n      return this.contexts.get(childName) || null;\n    }\n    static ɵfac = function ChildrenOutletContexts_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChildrenOutletContexts)(i0.ɵɵinject(i0.EnvironmentInjector));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ChildrenOutletContexts,\n      factory: ChildrenOutletContexts.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ChildrenOutletContexts;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass Tree {\n  /** @internal */\n  _root;\n  constructor(root) {\n    this._root = root;\n  }\n  get root() {\n    return this._root.value;\n  }\n  /**\n   * @internal\n   */\n  parent(t) {\n    const p = this.pathFromRoot(t);\n    return p.length > 1 ? p[p.length - 2] : null;\n  }\n  /**\n   * @internal\n   */\n  children(t) {\n    const n = findNode(t, this._root);\n    return n ? n.children.map(t => t.value) : [];\n  }\n  /**\n   * @internal\n   */\n  firstChild(t) {\n    const n = findNode(t, this._root);\n    return n && n.children.length > 0 ? n.children[0].value : null;\n  }\n  /**\n   * @internal\n   */\n  siblings(t) {\n    const p = findPath(t, this._root);\n    if (p.length < 2) return [];\n    const c = p[p.length - 2].children.map(c => c.value);\n    return c.filter(cc => cc !== t);\n  }\n  /**\n   * @internal\n   */\n  pathFromRoot(t) {\n    return findPath(t, this._root).map(s => s.value);\n  }\n}\n// DFS for the node matching the value\nfunction findNode(value, node) {\n  if (value === node.value) return node;\n  for (const child of node.children) {\n    const node = findNode(value, child);\n    if (node) return node;\n  }\n  return null;\n}\n// Return the path to the node with the given value using DFS\nfunction findPath(value, node) {\n  if (value === node.value) return [node];\n  for (const child of node.children) {\n    const path = findPath(value, child);\n    if (path.length) {\n      path.unshift(node);\n      return path;\n    }\n  }\n  return [];\n}\nclass TreeNode {\n  value;\n  children;\n  constructor(value, children) {\n    this.value = value;\n    this.children = children;\n  }\n  toString() {\n    return `TreeNode(${this.value})`;\n  }\n}\n// Return the list of T indexed by outlet name\nfunction nodeChildrenAsMap(node) {\n  const map = {};\n  if (node) {\n    node.children.forEach(child => map[child.value.outlet] = child);\n  }\n  return map;\n}\n\n/**\n * Represents the state of the router as a tree of activated routes.\n *\n * @usageNotes\n *\n * Every node in the route tree is an `ActivatedRoute` instance\n * that knows about the \"consumed\" URL segments, the extracted parameters,\n * and the resolved data.\n * Use the `ActivatedRoute` properties to traverse the tree from any node.\n *\n * The following fragment shows how a component gets the root node\n * of the current state to establish its own route tree:\n *\n * ```ts\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @see {@link ActivatedRoute}\n * @see [Getting route information](guide/routing/common-router-tasks#getting-route-information)\n *\n * @publicApi\n */\nclass RouterState extends Tree {\n  snapshot;\n  /** @internal */\n  constructor(root, /** The current snapshot of the router state */\n  snapshot) {\n    super(root);\n    this.snapshot = snapshot;\n    setRouterState(this, root);\n  }\n  toString() {\n    return this.snapshot.toString();\n  }\n}\nfunction createEmptyState(rootComponent) {\n  const snapshot = createEmptyStateSnapshot(rootComponent);\n  const emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n  const emptyParams = new BehaviorSubject({});\n  const emptyData = new BehaviorSubject({});\n  const emptyQueryParams = new BehaviorSubject({});\n  const fragment = new BehaviorSubject('');\n  const activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n  activated.snapshot = snapshot.root;\n  return new RouterState(new TreeNode(activated, []), snapshot);\n}\nfunction createEmptyStateSnapshot(rootComponent) {\n  const emptyParams = {};\n  const emptyData = {};\n  const emptyQueryParams = {};\n  const fragment = '';\n  const activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, {});\n  return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * Provides access to information about a route associated with a component\n * that is loaded in an outlet.\n * Use to traverse the `RouterState` tree and extract information from nodes.\n *\n * The following example shows how to construct a component using information from a\n * currently activated route.\n *\n * Note: the observables in this class only emit when the current and previous values differ based\n * on shallow equality. For example, changing deeply nested properties in resolved `data` will not\n * cause the `ActivatedRoute.data` `Observable` to emit a new value.\n *\n * {@example router/activated-route/module.ts region=\"activated-route\"\n *     header=\"activated-route.component.ts\"}\n *\n * @see [Getting route information](guide/routing/common-router-tasks#getting-route-information)\n *\n * @publicApi\n */\nclass ActivatedRoute {\n  urlSubject;\n  paramsSubject;\n  queryParamsSubject;\n  fragmentSubject;\n  dataSubject;\n  outlet;\n  component;\n  /** The current snapshot of this route */\n  snapshot;\n  /** @internal */\n  _futureSnapshot;\n  /** @internal */\n  _routerState;\n  /** @internal */\n  _paramMap;\n  /** @internal */\n  _queryParamMap;\n  /** An Observable of the resolved route title */\n  title;\n  /** An observable of the URL segments matched by this route. */\n  url;\n  /** An observable of the matrix parameters scoped to this route. */\n  params;\n  /** An observable of the query parameters shared by all the routes. */\n  queryParams;\n  /** An observable of the URL fragment shared by all the routes. */\n  fragment;\n  /** An observable of the static and resolved data of this route. */\n  data;\n  /** @internal */\n  constructor(/** @internal */\n  urlSubject, /** @internal */\n  paramsSubject, /** @internal */\n  queryParamsSubject, /** @internal */\n  fragmentSubject, /** @internal */\n  dataSubject, /** The outlet name of the route, a constant. */\n  outlet, /** The component of the route, a constant. */\n  component, futureSnapshot) {\n    this.urlSubject = urlSubject;\n    this.paramsSubject = paramsSubject;\n    this.queryParamsSubject = queryParamsSubject;\n    this.fragmentSubject = fragmentSubject;\n    this.dataSubject = dataSubject;\n    this.outlet = outlet;\n    this.component = component;\n    this._futureSnapshot = futureSnapshot;\n    this.title = this.dataSubject?.pipe(map(d => d[RouteTitleKey])) ?? of(undefined);\n    // TODO(atscott): Verify that these can be changed to `.asObservable()` with TGP.\n    this.url = urlSubject;\n    this.params = paramsSubject;\n    this.queryParams = queryParamsSubject;\n    this.fragment = fragmentSubject;\n    this.data = dataSubject;\n  }\n  /** The configuration used to match this route. */\n  get routeConfig() {\n    return this._futureSnapshot.routeConfig;\n  }\n  /** The root of the router state. */\n  get root() {\n    return this._routerState.root;\n  }\n  /** The parent of this route in the router state tree. */\n  get parent() {\n    return this._routerState.parent(this);\n  }\n  /** The first child of this route in the router state tree. */\n  get firstChild() {\n    return this._routerState.firstChild(this);\n  }\n  /** The children of this route in the router state tree. */\n  get children() {\n    return this._routerState.children(this);\n  }\n  /** The path from the root of the router state tree to this route. */\n  get pathFromRoot() {\n    return this._routerState.pathFromRoot(this);\n  }\n  /**\n   * An Observable that contains a map of the required and optional parameters\n   * specific to the route.\n   * The map supports retrieving single and multiple values from the same parameter.\n   */\n  get paramMap() {\n    this._paramMap ??= this.params.pipe(map(p => convertToParamMap(p)));\n    return this._paramMap;\n  }\n  /**\n   * An Observable that contains a map of the query parameters available to all routes.\n   * The map supports retrieving single and multiple values from the query parameter.\n   */\n  get queryParamMap() {\n    this._queryParamMap ??= this.queryParams.pipe(map(p => convertToParamMap(p)));\n    return this._queryParamMap;\n  }\n  toString() {\n    return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;\n  }\n}\n/**\n * Returns the inherited params, data, and resolve for a given route.\n *\n * By default, we do not inherit parent data unless the current route is path-less or the parent\n * route is component-less.\n */\nfunction getInherited(route, parent, paramsInheritanceStrategy = 'emptyOnly') {\n  let inherited;\n  const {\n    routeConfig\n  } = route;\n  if (parent !== null && (paramsInheritanceStrategy === 'always' ||\n  // inherit parent data if route is empty path\n  routeConfig?.path === '' ||\n  // inherit parent data if parent was componentless\n  !parent.component && !parent.routeConfig?.loadComponent)) {\n    inherited = {\n      params: {\n        ...parent.params,\n        ...route.params\n      },\n      data: {\n        ...parent.data,\n        ...route.data\n      },\n      resolve: {\n        // Snapshots are created with data inherited from parent and guards (i.e. canActivate) can\n        // change data because it's not frozen...\n        // This first line could be deleted chose to break/disallow mutating the `data` object in\n        // guards.\n        // Note that data from parents still override this mutated data so anyone relying on this\n        // might be surprised that it doesn't work if parent data is inherited but otherwise does.\n        ...route.data,\n        // Ensure inherited resolved data overrides inherited static data\n        ...parent.data,\n        // static data from the current route overrides any inherited data\n        ...routeConfig?.data,\n        // resolved data from current route overrides everything\n        ...route._resolvedData\n      }\n    };\n  } else {\n    inherited = {\n      params: {\n        ...route.params\n      },\n      data: {\n        ...route.data\n      },\n      resolve: {\n        ...route.data,\n        ...(route._resolvedData ?? {})\n      }\n    };\n  }\n  if (routeConfig && hasStaticTitle(routeConfig)) {\n    inherited.resolve[RouteTitleKey] = routeConfig.title;\n  }\n  return inherited;\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * The following example initializes a component with route information extracted\n * from the snapshot of the root node at the time of creation.\n *\n * ```ts\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass ActivatedRouteSnapshot {\n  url;\n  params;\n  queryParams;\n  fragment;\n  data;\n  outlet;\n  component;\n  /** The configuration used to match this route **/\n  routeConfig;\n  /** @internal */\n  _resolve;\n  /** @internal */\n  _resolvedData;\n  /** @internal */\n  _routerState;\n  /** @internal */\n  _paramMap;\n  /** @internal */\n  _queryParamMap;\n  /** The resolved route title */\n  get title() {\n    // Note: This _must_ be a getter because the data is mutated in the resolvers. Title will not be\n    // available at the time of class instantiation.\n    return this.data?.[RouteTitleKey];\n  }\n  /** @internal */\n  constructor(/** The URL segments matched by this route */\n  url,\n  /**\n   *  The matrix parameters scoped to this route.\n   *\n   *  You can compute all params (or data) in the router state or to get params outside\n   *  of an activated component by traversing the `RouterState` tree as in the following\n   *  example:\n   *  ```ts\n   *  collectRouteParams(router: Router) {\n   *    let params = {};\n   *    let stack: ActivatedRouteSnapshot[] = [router.routerState.snapshot.root];\n   *    while (stack.length > 0) {\n   *      const route = stack.pop()!;\n   *      params = {...params, ...route.params};\n   *      stack.push(...route.children);\n   *    }\n   *    return params;\n   *  }\n   *  ```\n   */\n  params, /** The query parameters shared by all the routes */\n  queryParams, /** The URL fragment shared by all the routes */\n  fragment, /** The static and resolved data of this route */\n  data, /** The outlet name of the route */\n  outlet, /** The component of the route */\n  component, routeConfig, resolve) {\n    this.url = url;\n    this.params = params;\n    this.queryParams = queryParams;\n    this.fragment = fragment;\n    this.data = data;\n    this.outlet = outlet;\n    this.component = component;\n    this.routeConfig = routeConfig;\n    this._resolve = resolve;\n  }\n  /** The root of the router state */\n  get root() {\n    return this._routerState.root;\n  }\n  /** The parent of this route in the router state tree */\n  get parent() {\n    return this._routerState.parent(this);\n  }\n  /** The first child of this route in the router state tree */\n  get firstChild() {\n    return this._routerState.firstChild(this);\n  }\n  /** The children of this route in the router state tree */\n  get children() {\n    return this._routerState.children(this);\n  }\n  /** The path from the root of the router state tree to this route */\n  get pathFromRoot() {\n    return this._routerState.pathFromRoot(this);\n  }\n  get paramMap() {\n    this._paramMap ??= convertToParamMap(this.params);\n    return this._paramMap;\n  }\n  get queryParamMap() {\n    this._queryParamMap ??= convertToParamMap(this.queryParams);\n    return this._queryParamMap;\n  }\n  toString() {\n    const url = this.url.map(segment => segment.toString()).join('/');\n    const matched = this.routeConfig ? this.routeConfig.path : '';\n    return `Route(url:'${url}', path:'${matched}')`;\n  }\n}\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * The following example shows how a component is initialized with information\n * from the snapshot of the root node's state at the time of creation.\n *\n * ```ts\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass RouterStateSnapshot extends Tree {\n  url;\n  /** @internal */\n  constructor(/** The url from which this snapshot was created */\n  url, root) {\n    super(root);\n    this.url = url;\n    setRouterState(this, root);\n  }\n  toString() {\n    return serializeNode(this._root);\n  }\n}\nfunction setRouterState(state, node) {\n  node.value._routerState = state;\n  node.children.forEach(c => setRouterState(state, c));\n}\nfunction serializeNode(node) {\n  const c = node.children.length > 0 ? ` { ${node.children.map(serializeNode).join(', ')} } ` : '';\n  return `${node.value}${c}`;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\nfunction advanceActivatedRoute(route) {\n  if (route.snapshot) {\n    const currentSnapshot = route.snapshot;\n    const nextSnapshot = route._futureSnapshot;\n    route.snapshot = nextSnapshot;\n    if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n      route.queryParamsSubject.next(nextSnapshot.queryParams);\n    }\n    if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n      route.fragmentSubject.next(nextSnapshot.fragment);\n    }\n    if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n      route.paramsSubject.next(nextSnapshot.params);\n    }\n    if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n      route.urlSubject.next(nextSnapshot.url);\n    }\n    if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n      route.dataSubject.next(nextSnapshot.data);\n    }\n  } else {\n    route.snapshot = route._futureSnapshot;\n    // this is for resolved data\n    route.dataSubject.next(route._futureSnapshot.data);\n  }\n}\nfunction equalParamsAndUrlSegments(a, b) {\n  const equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n  const parentsMismatch = !a.parent !== !b.parent;\n  return equalUrlParams && !parentsMismatch && (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n}\nfunction hasStaticTitle(config) {\n  return typeof config.title === 'string' || config.title === null;\n}\n\n/**\n * An `InjectionToken` provided by the `RouterOutlet` and can be set using the `routerOutletData`\n * input.\n *\n * When unset, this value is `null` by default.\n *\n * @usageNotes\n *\n * To set the data from the template of the component with `router-outlet`:\n * ```html\n * <router-outlet [routerOutletData]=\"{name: 'Angular'}\" />\n * ```\n *\n * To read the data in the routed component:\n * ```ts\n * data = inject(ROUTER_OUTLET_DATA) as Signal<{name: string}>;\n * ```\n *\n * @publicApi\n */\nconst ROUTER_OUTLET_DATA = /*#__PURE__*/new InjectionToken(ngDevMode ? 'RouterOutlet data' : '');\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * Each outlet can have a unique name, determined by the optional `name` attribute.\n * The name cannot be set or changed dynamically. If not set, default value is \"primary\".\n *\n * ```html\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * Named outlets can be the targets of secondary routes.\n * The `Route` object for a secondary route has an `outlet` property to identify the target outlet:\n *\n * `{path: <base-path>, component: <component>, outlet: <target_outlet_name>}`\n *\n * Using named outlets and secondary routes, you can target multiple outlets in\n * the same `RouterLink` directive.\n *\n * The router keeps track of separate branches in a navigation tree for each named outlet and\n * generates a representation of that tree in the URL.\n * The URL for a secondary route uses the following syntax to specify both the primary and secondary\n * routes at the same time:\n *\n * `http://base-path/primary-route-path(outlet-name:route-path)`\n *\n * A router outlet emits an activate event when a new component is instantiated,\n * deactivate event when a component is destroyed.\n * An attached event emits when the `RouteReuseStrategy` instructs the outlet to reattach the\n * subtree, and the detached event emits when the `RouteReuseStrategy` instructs the outlet to\n * detach the subtree.\n *\n * ```html\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'\n *   (attach)='onAttach($event)'\n *   (detach)='onDetach($event)'></router-outlet>\n * ```\n *\n * @see {@link RouterLink}\n * @see {@link Route}\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet RouterOutlet = /*#__PURE__*/(() => {\n  class RouterOutlet {\n    activated = null;\n    /** @internal */\n    get activatedComponentRef() {\n      return this.activated;\n    }\n    _activatedRoute = null;\n    /**\n     * The name of the outlet\n     *\n     */\n    name = PRIMARY_OUTLET;\n    activateEvents = new EventEmitter();\n    deactivateEvents = new EventEmitter();\n    /**\n     * Emits an attached component instance when the `RouteReuseStrategy` instructs to re-attach a\n     * previously detached subtree.\n     **/\n    attachEvents = new EventEmitter();\n    /**\n     * Emits a detached component instance when the `RouteReuseStrategy` instructs to detach the\n     * subtree.\n     */\n    detachEvents = new EventEmitter();\n    /**\n     * Data that will be provided to the child injector through the `ROUTER_OUTLET_DATA` token.\n     *\n     * When unset, the value of the token is `undefined` by default.\n     */\n    routerOutletData = input(undefined);\n    parentContexts = inject(ChildrenOutletContexts);\n    location = inject(ViewContainerRef);\n    changeDetector = inject(ChangeDetectorRef);\n    inputBinder = inject(INPUT_BINDER, {\n      optional: true\n    });\n    /** @nodoc */\n    supportsBindingToComponentInputs = true;\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (changes['name']) {\n        const {\n          firstChange,\n          previousValue\n        } = changes['name'];\n        if (firstChange) {\n          // The first change is handled by ngOnInit. Because ngOnChanges doesn't get called when no\n          // input is set at all, we need to centrally handle the first change there.\n          return;\n        }\n        // unregister with the old name\n        if (this.isTrackedInParentContexts(previousValue)) {\n          this.deactivate();\n          this.parentContexts.onChildOutletDestroyed(previousValue);\n        }\n        // register the new name\n        this.initializeOutletWithName();\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      // Ensure that the registered outlet is this one before removing it on the context.\n      if (this.isTrackedInParentContexts(this.name)) {\n        this.parentContexts.onChildOutletDestroyed(this.name);\n      }\n      this.inputBinder?.unsubscribeFromRouteData(this);\n    }\n    isTrackedInParentContexts(outletName) {\n      return this.parentContexts.getContext(outletName)?.outlet === this;\n    }\n    /** @nodoc */\n    ngOnInit() {\n      this.initializeOutletWithName();\n    }\n    initializeOutletWithName() {\n      this.parentContexts.onChildOutletCreated(this.name, this);\n      if (this.activated) {\n        return;\n      }\n      // If the outlet was not instantiated at the time the route got activated we need to populate\n      // the outlet when it is initialized (ie inside a NgIf)\n      const context = this.parentContexts.getContext(this.name);\n      if (context?.route) {\n        if (context.attachRef) {\n          // `attachRef` is populated when there is an existing component to mount\n          this.attach(context.attachRef, context.route);\n        } else {\n          // otherwise the component defined in the configuration is created\n          this.activateWith(context.route, context.injector);\n        }\n      }\n    }\n    get isActivated() {\n      return !!this.activated;\n    }\n    /**\n     * @returns The currently activated component instance.\n     * @throws An error if the outlet is not activated.\n     */\n    get component() {\n      if (!this.activated) throw new _RuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n      return this.activated.instance;\n    }\n    get activatedRoute() {\n      if (!this.activated) throw new _RuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n      return this._activatedRoute;\n    }\n    get activatedRouteData() {\n      if (this._activatedRoute) {\n        return this._activatedRoute.snapshot.data;\n      }\n      return {};\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    detach() {\n      if (!this.activated) throw new _RuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n      this.location.detach();\n      const cmp = this.activated;\n      this.activated = null;\n      this._activatedRoute = null;\n      this.detachEvents.emit(cmp.instance);\n      return cmp;\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    attach(ref, activatedRoute) {\n      this.activated = ref;\n      this._activatedRoute = activatedRoute;\n      this.location.insert(ref.hostView);\n      this.inputBinder?.bindActivatedRouteToOutletComponent(this);\n      this.attachEvents.emit(ref.instance);\n    }\n    deactivate() {\n      if (this.activated) {\n        const c = this.component;\n        this.activated.destroy();\n        this.activated = null;\n        this._activatedRoute = null;\n        this.deactivateEvents.emit(c);\n      }\n    }\n    activateWith(activatedRoute, environmentInjector) {\n      if (this.isActivated) {\n        throw new _RuntimeError(4013 /* RuntimeErrorCode.OUTLET_ALREADY_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Cannot activate an already activated outlet');\n      }\n      this._activatedRoute = activatedRoute;\n      const location = this.location;\n      const snapshot = activatedRoute.snapshot;\n      const component = snapshot.component;\n      const childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n      const injector = new OutletInjector(activatedRoute, childContexts, location.injector, this.routerOutletData);\n      this.activated = location.createComponent(component, {\n        index: location.length,\n        injector,\n        environmentInjector: environmentInjector\n      });\n      // Calling `markForCheck` to make sure we will run the change detection when the\n      // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n      this.changeDetector.markForCheck();\n      this.inputBinder?.bindActivatedRouteToOutletComponent(this);\n      this.activateEvents.emit(this.activated.instance);\n    }\n    static ɵfac = function RouterOutlet_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RouterOutlet)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RouterOutlet,\n      selectors: [[\"router-outlet\"]],\n      inputs: {\n        name: \"name\",\n        routerOutletData: [1, \"routerOutletData\"]\n      },\n      outputs: {\n        activateEvents: \"activate\",\n        deactivateEvents: \"deactivate\",\n        attachEvents: \"attach\",\n        detachEvents: \"detach\"\n      },\n      exportAs: [\"outlet\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return RouterOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass OutletInjector {\n  route;\n  childContexts;\n  parent;\n  outletData;\n  constructor(route, childContexts, parent, outletData) {\n    this.route = route;\n    this.childContexts = childContexts;\n    this.parent = parent;\n    this.outletData = outletData;\n  }\n  get(token, notFoundValue) {\n    if (token === ActivatedRoute) {\n      return this.route;\n    }\n    if (token === ChildrenOutletContexts) {\n      return this.childContexts;\n    }\n    if (token === ROUTER_OUTLET_DATA) {\n      return this.outletData;\n    }\n    return this.parent.get(token, notFoundValue);\n  }\n}\nconst INPUT_BINDER = /*#__PURE__*/new InjectionToken('');\n/**\n * Injectable used as a tree-shakable provider for opting in to binding router data to component\n * inputs.\n *\n * The RouterOutlet registers itself with this service when an `ActivatedRoute` is attached or\n * activated. When this happens, the service subscribes to the `ActivatedRoute` observables (params,\n * queryParams, data) and sets the inputs of the component using `ComponentRef.setInput`.\n * Importantly, when an input does not have an item in the route data with a matching key, this\n * input is set to `undefined`. If it were not done this way, the previous information would be\n * retained if the data got removed from the route (i.e. if a query parameter is removed).\n *\n * The `RouterOutlet` should unregister itself when destroyed via `unsubscribeFromRouteData` so that\n * the subscriptions are cleaned up.\n */\nlet RoutedComponentInputBinder = /*#__PURE__*/(() => {\n  class RoutedComponentInputBinder {\n    outletDataSubscriptions = new Map();\n    bindActivatedRouteToOutletComponent(outlet) {\n      this.unsubscribeFromRouteData(outlet);\n      this.subscribeToRouteData(outlet);\n    }\n    unsubscribeFromRouteData(outlet) {\n      this.outletDataSubscriptions.get(outlet)?.unsubscribe();\n      this.outletDataSubscriptions.delete(outlet);\n    }\n    subscribeToRouteData(outlet) {\n      const {\n        activatedRoute\n      } = outlet;\n      const dataSubscription = combineLatest([activatedRoute.queryParams, activatedRoute.params, activatedRoute.data]).pipe(switchMap(([queryParams, params, data], index) => {\n        data = {\n          ...queryParams,\n          ...params,\n          ...data\n        };\n        // Get the first result from the data subscription synchronously so it's available to\n        // the component as soon as possible (and doesn't require a second change detection).\n        if (index === 0) {\n          return of(data);\n        }\n        // Promise.resolve is used to avoid synchronously writing the wrong data when\n        // two of the Observables in the `combineLatest` stream emit one after\n        // another.\n        return Promise.resolve(data);\n      })).subscribe(data => {\n        // Outlet may have been deactivated or changed names to be associated with a different\n        // route\n        if (!outlet.isActivated || !outlet.activatedComponentRef || outlet.activatedRoute !== activatedRoute || activatedRoute.component === null) {\n          this.unsubscribeFromRouteData(outlet);\n          return;\n        }\n        const mirror = reflectComponentType(activatedRoute.component);\n        if (!mirror) {\n          this.unsubscribeFromRouteData(outlet);\n          return;\n        }\n        for (const {\n          templateName\n        } of mirror.inputs) {\n          outlet.activatedComponentRef.setInput(templateName, data[templateName]);\n        }\n      });\n      this.outletDataSubscriptions.set(outlet, dataSubscription);\n    }\n    static ɵfac = function RoutedComponentInputBinder_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RoutedComponentInputBinder)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RoutedComponentInputBinder,\n      factory: RoutedComponentInputBinder.ɵfac\n    });\n  }\n  return RoutedComponentInputBinder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n  const root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n  return new RouterState(root, curr);\n}\nfunction createNode(routeReuseStrategy, curr, prevState) {\n  // reuse an activated route that is currently displayed on the screen\n  if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n    const value = prevState.value;\n    value._futureSnapshot = curr.value;\n    const children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n    return new TreeNode(value, children);\n  } else {\n    if (routeReuseStrategy.shouldAttach(curr.value)) {\n      // retrieve an activated route that is used to be displayed, but is not currently displayed\n      const detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n      if (detachedRouteHandle !== null) {\n        const tree = detachedRouteHandle.route;\n        tree.value._futureSnapshot = curr.value;\n        tree.children = curr.children.map(c => createNode(routeReuseStrategy, c));\n        return tree;\n      }\n    }\n    const value = createActivatedRoute(curr.value);\n    const children = curr.children.map(c => createNode(routeReuseStrategy, c));\n    return new TreeNode(value, children);\n  }\n}\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n  return curr.children.map(child => {\n    for (const p of prevState.children) {\n      if (routeReuseStrategy.shouldReuseRoute(child.value, p.value.snapshot)) {\n        return createNode(routeReuseStrategy, child, p);\n      }\n    }\n    return createNode(routeReuseStrategy, child);\n  });\n}\nfunction createActivatedRoute(c) {\n  return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * Can be returned by a `Router` guard to instruct the `Router` to redirect rather than continue\n * processing the path of the in-flight navigation. The `redirectTo` indicates _where_ the new\n * navigation should go to and the optional `navigationBehaviorOptions` can provide more information\n * about _how_ to perform the navigation.\n *\n * ```ts\n * const route: Route = {\n *   path: \"user/:userId\",\n *   component: User,\n *   canActivate: [\n *     () => {\n *       const router = inject(Router);\n *       const authService = inject(AuthenticationService);\n *\n *       if (!authService.isLoggedIn()) {\n *         const loginPath = router.parseUrl(\"/login\");\n *         return new RedirectCommand(loginPath, {\n *           skipLocationChange: \"true\",\n *         });\n *       }\n *\n *       return true;\n *     },\n *   ],\n * };\n * ```\n * @see [Routing guide](guide/routing/common-router-tasks#preventing-unauthorized-access)\n *\n * @publicApi\n */\nclass RedirectCommand {\n  redirectTo;\n  navigationBehaviorOptions;\n  constructor(redirectTo, navigationBehaviorOptions) {\n    this.redirectTo = redirectTo;\n    this.navigationBehaviorOptions = navigationBehaviorOptions;\n  }\n}\nconst NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\nfunction redirectingNavigationError(urlSerializer, redirect) {\n  const {\n    redirectTo,\n    navigationBehaviorOptions\n  } = isUrlTree(redirect) ? {\n    redirectTo: redirect,\n    navigationBehaviorOptions: undefined\n  } : redirect;\n  const error = navigationCancelingError(ngDevMode && `Redirecting to \"${urlSerializer.serialize(redirectTo)}\"`, NavigationCancellationCode.Redirect);\n  error.url = redirectTo;\n  error.navigationBehaviorOptions = navigationBehaviorOptions;\n  return error;\n}\nfunction navigationCancelingError(message, code) {\n  const error = new Error(`NavigationCancelingError: ${message || ''}`);\n  error[NAVIGATION_CANCELING_ERROR] = true;\n  error.cancellationCode = code;\n  return error;\n}\nfunction isRedirectingNavigationCancelingError(error) {\n  return isNavigationCancelingError(error) && isUrlTree(error.url);\n}\nfunction isNavigationCancelingError(error) {\n  return !!error && error[NAVIGATION_CANCELING_ERROR];\n}\nlet warnedAboutUnsupportedInputBinding = false;\nconst activateRoutes = (rootContexts, routeReuseStrategy, forwardEvent, inputBindingEnabled) => map(t => {\n  new ActivateRoutes(routeReuseStrategy, t.targetRouterState, t.currentRouterState, forwardEvent, inputBindingEnabled).activate(rootContexts);\n  return t;\n});\nclass ActivateRoutes {\n  routeReuseStrategy;\n  futureState;\n  currState;\n  forwardEvent;\n  inputBindingEnabled;\n  constructor(routeReuseStrategy, futureState, currState, forwardEvent, inputBindingEnabled) {\n    this.routeReuseStrategy = routeReuseStrategy;\n    this.futureState = futureState;\n    this.currState = currState;\n    this.forwardEvent = forwardEvent;\n    this.inputBindingEnabled = inputBindingEnabled;\n  }\n  activate(parentContexts) {\n    const futureRoot = this.futureState._root;\n    const currRoot = this.currState ? this.currState._root : null;\n    this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n    advanceActivatedRoute(this.futureState.root);\n    this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n  }\n  // De-activate the child route that are not re-used for the future state\n  deactivateChildRoutes(futureNode, currNode, contexts) {\n    const children = nodeChildrenAsMap(currNode);\n    // Recurse on the routes active in the future state to de-activate deeper children\n    futureNode.children.forEach(futureChild => {\n      const childOutletName = futureChild.value.outlet;\n      this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n      delete children[childOutletName];\n    });\n    // De-activate the routes that will not be re-used\n    Object.values(children).forEach(v => {\n      this.deactivateRouteAndItsChildren(v, contexts);\n    });\n  }\n  deactivateRoutes(futureNode, currNode, parentContext) {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    if (future === curr) {\n      // Reusing the node, check to see if the children need to be de-activated\n      if (future.component) {\n        // If we have a normal route, we need to go through an outlet.\n        const context = parentContext.getContext(future.outlet);\n        if (context) {\n          this.deactivateChildRoutes(futureNode, currNode, context.children);\n        }\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.deactivateChildRoutes(futureNode, currNode, parentContext);\n      }\n    } else {\n      if (curr) {\n        // Deactivate the current route which will not be re-used\n        this.deactivateRouteAndItsChildren(currNode, parentContext);\n      }\n    }\n  }\n  deactivateRouteAndItsChildren(route, parentContexts) {\n    // If there is no component, the Route is never attached to an outlet (because there is no\n    // component to attach).\n    if (route.value.component && this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n      this.detachAndStoreRouteSubtree(route, parentContexts);\n    } else {\n      this.deactivateRouteAndOutlet(route, parentContexts);\n    }\n  }\n  detachAndStoreRouteSubtree(route, parentContexts) {\n    const context = parentContexts.getContext(route.value.outlet);\n    const contexts = context && route.value.component ? context.children : parentContexts;\n    const children = nodeChildrenAsMap(route);\n    for (const treeNode of Object.values(children)) {\n      this.deactivateRouteAndItsChildren(treeNode, contexts);\n    }\n    if (context && context.outlet) {\n      const componentRef = context.outlet.detach();\n      const contexts = context.children.onOutletDeactivated();\n      this.routeReuseStrategy.store(route.value.snapshot, {\n        componentRef,\n        route,\n        contexts\n      });\n    }\n  }\n  deactivateRouteAndOutlet(route, parentContexts) {\n    const context = parentContexts.getContext(route.value.outlet);\n    // The context could be `null` if we are on a componentless route but there may still be\n    // children that need deactivating.\n    const contexts = context && route.value.component ? context.children : parentContexts;\n    const children = nodeChildrenAsMap(route);\n    for (const treeNode of Object.values(children)) {\n      this.deactivateRouteAndItsChildren(treeNode, contexts);\n    }\n    if (context) {\n      if (context.outlet) {\n        // Destroy the component\n        context.outlet.deactivate();\n        // Destroy the contexts for all the outlets that were in the component\n        context.children.onOutletDeactivated();\n      }\n      // Clear the information about the attached component on the context but keep the reference to\n      // the outlet. Clear even if outlet was not yet activated to avoid activating later with old\n      // info\n      context.attachRef = null;\n      context.route = null;\n    }\n  }\n  activateChildRoutes(futureNode, currNode, contexts) {\n    const children = nodeChildrenAsMap(currNode);\n    futureNode.children.forEach(c => {\n      this.activateRoutes(c, children[c.value.outlet], contexts);\n      this.forwardEvent(new ActivationEnd(c.value.snapshot));\n    });\n    if (futureNode.children.length) {\n      this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n    }\n  }\n  activateRoutes(futureNode, currNode, parentContexts) {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    advanceActivatedRoute(future);\n    // reusing the node\n    if (future === curr) {\n      if (future.component) {\n        // If we have a normal route, we need to go through an outlet.\n        const context = parentContexts.getOrCreateContext(future.outlet);\n        this.activateChildRoutes(futureNode, currNode, context.children);\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.activateChildRoutes(futureNode, currNode, parentContexts);\n      }\n    } else {\n      if (future.component) {\n        // if we have a normal route, we need to place the component into the outlet and recurse.\n        const context = parentContexts.getOrCreateContext(future.outlet);\n        if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n          const stored = this.routeReuseStrategy.retrieve(future.snapshot);\n          this.routeReuseStrategy.store(future.snapshot, null);\n          context.children.onOutletReAttached(stored.contexts);\n          context.attachRef = stored.componentRef;\n          context.route = stored.route.value;\n          if (context.outlet) {\n            // Attach right away when the outlet has already been instantiated\n            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n            context.outlet.attach(stored.componentRef, stored.route.value);\n          }\n          advanceActivatedRoute(stored.route.value);\n          this.activateChildRoutes(futureNode, null, context.children);\n        } else {\n          context.attachRef = null;\n          context.route = future;\n          if (context.outlet) {\n            // Activate the outlet when it has already been instantiated\n            // Otherwise it will get activated from its `ngOnInit` when instantiated\n            context.outlet.activateWith(future, context.injector);\n          }\n          this.activateChildRoutes(futureNode, null, context.children);\n        }\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.activateChildRoutes(futureNode, null, parentContexts);\n      }\n    }\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      const context = parentContexts.getOrCreateContext(future.outlet);\n      const outlet = context.outlet;\n      if (outlet && this.inputBindingEnabled && !outlet.supportsBindingToComponentInputs && !warnedAboutUnsupportedInputBinding) {\n        console.warn(`'withComponentInputBinding' feature is enabled but ` + `this application is using an outlet that may not support binding to component inputs.`);\n        warnedAboutUnsupportedInputBinding = true;\n      }\n    }\n  }\n}\nclass CanActivate {\n  path;\n  route;\n  constructor(path) {\n    this.path = path;\n    this.route = this.path[this.path.length - 1];\n  }\n}\nclass CanDeactivate {\n  component;\n  route;\n  constructor(component, route) {\n    this.component = component;\n    this.route = route;\n  }\n}\nfunction getAllRouteGuards(future, curr, parentContexts) {\n  const futureRoot = future._root;\n  const currRoot = curr ? curr._root : null;\n  return getChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n}\nfunction getCanActivateChild(p) {\n  const canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n  if (!canActivateChild || canActivateChild.length === 0) return null;\n  return {\n    node: p,\n    guards: canActivateChild\n  };\n}\nfunction getTokenOrFunctionIdentity(tokenOrFunction, injector) {\n  const NOT_FOUND = Symbol();\n  const result = injector.get(tokenOrFunction, NOT_FOUND);\n  if (result === NOT_FOUND) {\n    if (typeof tokenOrFunction === 'function' && !_isInjectable(tokenOrFunction)) {\n      // We think the token is just a function so return it as-is\n      return tokenOrFunction;\n    } else {\n      // This will throw the not found error\n      return injector.get(tokenOrFunction);\n    }\n  }\n  return result;\n}\nfunction getChildRouteGuards(futureNode, currNode, contexts, futurePath, checks = {\n  canDeactivateChecks: [],\n  canActivateChecks: []\n}) {\n  const prevChildren = nodeChildrenAsMap(currNode);\n  // Process the children of the future route\n  futureNode.children.forEach(c => {\n    getRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]), checks);\n    delete prevChildren[c.value.outlet];\n  });\n  // Process any children left from the current route (not active for the future route)\n  Object.entries(prevChildren).forEach(([k, v]) => deactivateRouteAndItsChildren(v, contexts.getContext(k), checks));\n  return checks;\n}\nfunction getRouteGuards(futureNode, currNode, parentContexts, futurePath, checks = {\n  canDeactivateChecks: [],\n  canActivateChecks: []\n}) {\n  const future = futureNode.value;\n  const curr = currNode ? currNode.value : null;\n  const context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n  // reusing the node\n  if (curr && future.routeConfig === curr.routeConfig) {\n    const shouldRun = shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n    if (shouldRun) {\n      checks.canActivateChecks.push(new CanActivate(futurePath));\n    } else {\n      // we need to set the data\n      future.data = curr.data;\n      future._resolvedData = curr._resolvedData;\n    }\n    // If we have a component, we need to go through an outlet.\n    if (future.component) {\n      getChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath, checks);\n      // if we have a componentless route, we recurse but keep the same outlet map.\n    } else {\n      getChildRouteGuards(futureNode, currNode, parentContexts, futurePath, checks);\n    }\n    if (shouldRun && context && context.outlet && context.outlet.isActivated) {\n      checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, curr));\n    }\n  } else {\n    if (curr) {\n      deactivateRouteAndItsChildren(currNode, context, checks);\n    }\n    checks.canActivateChecks.push(new CanActivate(futurePath));\n    // If we have a component, we need to go through an outlet.\n    if (future.component) {\n      getChildRouteGuards(futureNode, null, context ? context.children : null, futurePath, checks);\n      // if we have a componentless route, we recurse but keep the same outlet map.\n    } else {\n      getChildRouteGuards(futureNode, null, parentContexts, futurePath, checks);\n    }\n  }\n  return checks;\n}\nfunction shouldRunGuardsAndResolvers(curr, future, mode) {\n  if (typeof mode === 'function') {\n    return mode(curr, future);\n  }\n  switch (mode) {\n    case 'pathParamsChange':\n      return !equalPath(curr.url, future.url);\n    case 'pathParamsOrQueryParamsChange':\n      return !equalPath(curr.url, future.url) || !shallowEqual(curr.queryParams, future.queryParams);\n    case 'always':\n      return true;\n    case 'paramsOrQueryParamsChange':\n      return !equalParamsAndUrlSegments(curr, future) || !shallowEqual(curr.queryParams, future.queryParams);\n    case 'paramsChange':\n    default:\n      return !equalParamsAndUrlSegments(curr, future);\n  }\n}\nfunction deactivateRouteAndItsChildren(route, context, checks) {\n  const children = nodeChildrenAsMap(route);\n  const r = route.value;\n  Object.entries(children).forEach(([childName, node]) => {\n    if (!r.component) {\n      deactivateRouteAndItsChildren(node, context, checks);\n    } else if (context) {\n      deactivateRouteAndItsChildren(node, context.children.getContext(childName), checks);\n    } else {\n      deactivateRouteAndItsChildren(node, null, checks);\n    }\n  });\n  if (!r.component) {\n    checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n  } else if (context && context.outlet && context.outlet.isActivated) {\n    checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n  } else {\n    checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n  }\n}\n\n/**\n * Simple function check, but generic so type inference will flow. Example:\n *\n * function product(a: number, b: number) {\n *   return a * b;\n * }\n *\n * if (isFunction<product>(fn)) {\n *   return fn(1, 2);\n * } else {\n *   throw \"Must provide the `product` function\";\n * }\n */\nfunction isFunction(v) {\n  return typeof v === 'function';\n}\nfunction isBoolean(v) {\n  return typeof v === 'boolean';\n}\nfunction isCanLoad(guard) {\n  return guard && isFunction(guard.canLoad);\n}\nfunction isCanActivate(guard) {\n  return guard && isFunction(guard.canActivate);\n}\nfunction isCanActivateChild(guard) {\n  return guard && isFunction(guard.canActivateChild);\n}\nfunction isCanDeactivate(guard) {\n  return guard && isFunction(guard.canDeactivate);\n}\nfunction isCanMatch(guard) {\n  return guard && isFunction(guard.canMatch);\n}\nfunction isEmptyError(e) {\n  return e instanceof EmptyError || e?.name === 'EmptyError';\n}\nconst INITIAL_VALUE = /* @__PURE__ */Symbol('INITIAL_VALUE');\nfunction prioritizedGuardValue() {\n  return switchMap(obs => {\n    return combineLatest(obs.map(o => o.pipe(take(1), startWith(INITIAL_VALUE)))).pipe(map(results => {\n      for (const result of results) {\n        if (result === true) {\n          // If result is true, check the next one\n          continue;\n        } else if (result === INITIAL_VALUE) {\n          // If guard has not finished, we need to stop processing.\n          return INITIAL_VALUE;\n        } else if (result === false || isRedirect(result)) {\n          // Result finished and was not true. Return the result.\n          // Note that we only allow false/UrlTree/RedirectCommand. Other values are considered invalid and\n          // ignored.\n          return result;\n        }\n      }\n      // Everything resolved to true. Return true.\n      return true;\n    }), filter(item => item !== INITIAL_VALUE), take(1));\n  });\n}\nfunction isRedirect(val) {\n  return isUrlTree(val) || val instanceof RedirectCommand;\n}\nfunction checkGuards(injector, forwardEvent) {\n  return mergeMap(t => {\n    const {\n      targetSnapshot,\n      currentSnapshot,\n      guards: {\n        canActivateChecks,\n        canDeactivateChecks\n      }\n    } = t;\n    if (canDeactivateChecks.length === 0 && canActivateChecks.length === 0) {\n      return of({\n        ...t,\n        guardsResult: true\n      });\n    }\n    return runCanDeactivateChecks(canDeactivateChecks, targetSnapshot, currentSnapshot, injector).pipe(mergeMap(canDeactivate => {\n      return canDeactivate && isBoolean(canDeactivate) ? runCanActivateChecks(targetSnapshot, canActivateChecks, injector, forwardEvent) : of(canDeactivate);\n    }), map(guardsResult => ({\n      ...t,\n      guardsResult\n    })));\n  });\n}\nfunction runCanDeactivateChecks(checks, futureRSS, currRSS, injector) {\n  return from(checks).pipe(mergeMap(check => runCanDeactivate(check.component, check.route, currRSS, futureRSS, injector)), first(result => {\n    return result !== true;\n  }, true));\n}\nfunction runCanActivateChecks(futureSnapshot, checks, injector, forwardEvent) {\n  return from(checks).pipe(concatMap(check => {\n    return concat(fireChildActivationStart(check.route.parent, forwardEvent), fireActivationStart(check.route, forwardEvent), runCanActivateChild(futureSnapshot, check.path, injector), runCanActivate(futureSnapshot, check.route, injector));\n  }), first(result => {\n    return result !== true;\n  }, true));\n}\n/**\n * This should fire off `ActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireActivationStart(snapshot, forwardEvent) {\n  if (snapshot !== null && forwardEvent) {\n    forwardEvent(new ActivationStart(snapshot));\n  }\n  return of(true);\n}\n/**\n * This should fire off `ChildActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireChildActivationStart(snapshot, forwardEvent) {\n  if (snapshot !== null && forwardEvent) {\n    forwardEvent(new ChildActivationStart(snapshot));\n  }\n  return of(true);\n}\nfunction runCanActivate(futureRSS, futureARS, injector) {\n  const canActivate = futureARS.routeConfig ? futureARS.routeConfig.canActivate : null;\n  if (!canActivate || canActivate.length === 0) return of(true);\n  const canActivateObservables = canActivate.map(canActivate => {\n    return defer(() => {\n      const closestInjector = getClosestRouteInjector(futureARS) ?? injector;\n      const guard = getTokenOrFunctionIdentity(canActivate, closestInjector);\n      const guardVal = isCanActivate(guard) ? guard.canActivate(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => guard(futureARS, futureRSS));\n      return wrapIntoObservable(guardVal).pipe(first());\n    });\n  });\n  return of(canActivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanActivateChild(futureRSS, path, injector) {\n  const futureARS = path[path.length - 1];\n  const canActivateChildGuards = path.slice(0, path.length - 1).reverse().map(p => getCanActivateChild(p)).filter(_ => _ !== null);\n  const canActivateChildGuardsMapped = canActivateChildGuards.map(d => {\n    return defer(() => {\n      const guardsMapped = d.guards.map(canActivateChild => {\n        const closestInjector = getClosestRouteInjector(d.node) ?? injector;\n        const guard = getTokenOrFunctionIdentity(canActivateChild, closestInjector);\n        const guardVal = isCanActivateChild(guard) ? guard.canActivateChild(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => guard(futureARS, futureRSS));\n        return wrapIntoObservable(guardVal).pipe(first());\n      });\n      return of(guardsMapped).pipe(prioritizedGuardValue());\n    });\n  });\n  return of(canActivateChildGuardsMapped).pipe(prioritizedGuardValue());\n}\nfunction runCanDeactivate(component, currARS, currRSS, futureRSS, injector) {\n  const canDeactivate = currARS && currARS.routeConfig ? currARS.routeConfig.canDeactivate : null;\n  if (!canDeactivate || canDeactivate.length === 0) return of(true);\n  const canDeactivateObservables = canDeactivate.map(c => {\n    const closestInjector = getClosestRouteInjector(currARS) ?? injector;\n    const guard = getTokenOrFunctionIdentity(c, closestInjector);\n    const guardVal = isCanDeactivate(guard) ? guard.canDeactivate(component, currARS, currRSS, futureRSS) : runInInjectionContext(closestInjector, () => guard(component, currARS, currRSS, futureRSS));\n    return wrapIntoObservable(guardVal).pipe(first());\n  });\n  return of(canDeactivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanLoadGuards(injector, route, segments, urlSerializer) {\n  const canLoad = route.canLoad;\n  if (canLoad === undefined || canLoad.length === 0) {\n    return of(true);\n  }\n  const canLoadObservables = canLoad.map(injectionToken => {\n    const guard = getTokenOrFunctionIdentity(injectionToken, injector);\n    const guardVal = isCanLoad(guard) ? guard.canLoad(route, segments) : runInInjectionContext(injector, () => guard(route, segments));\n    return wrapIntoObservable(guardVal);\n  });\n  return of(canLoadObservables).pipe(prioritizedGuardValue(), redirectIfUrlTree(urlSerializer));\n}\nfunction redirectIfUrlTree(urlSerializer) {\n  return pipe(tap(result => {\n    if (typeof result === 'boolean') return;\n    throw redirectingNavigationError(urlSerializer, result);\n  }), map(result => result === true));\n}\nfunction runCanMatchGuards(injector, route, segments, urlSerializer) {\n  const canMatch = route.canMatch;\n  if (!canMatch || canMatch.length === 0) return of(true);\n  const canMatchObservables = canMatch.map(injectionToken => {\n    const guard = getTokenOrFunctionIdentity(injectionToken, injector);\n    const guardVal = isCanMatch(guard) ? guard.canMatch(route, segments) : runInInjectionContext(injector, () => guard(route, segments));\n    return wrapIntoObservable(guardVal);\n  });\n  return of(canMatchObservables).pipe(prioritizedGuardValue(), redirectIfUrlTree(urlSerializer));\n}\nclass NoMatch {\n  segmentGroup;\n  constructor(segmentGroup) {\n    this.segmentGroup = segmentGroup || null;\n  }\n}\nclass AbsoluteRedirect extends Error {\n  urlTree;\n  constructor(urlTree) {\n    super();\n    this.urlTree = urlTree;\n  }\n}\nfunction noMatch$1(segmentGroup) {\n  return throwError(new NoMatch(segmentGroup));\n}\nfunction namedOutletsRedirect(redirectTo) {\n  return throwError(new _RuntimeError(4000 /* RuntimeErrorCode.NAMED_OUTLET_REDIRECT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Only absolute redirects can have named outlets. redirectTo: '${redirectTo}'`));\n}\nfunction canLoadFails(route) {\n  return throwError(navigationCancelingError((typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot load children because the guard of the route \"path: '${route.path}'\" returned false`, NavigationCancellationCode.GuardRejected));\n}\nclass ApplyRedirects {\n  urlSerializer;\n  urlTree;\n  constructor(urlSerializer, urlTree) {\n    this.urlSerializer = urlSerializer;\n    this.urlTree = urlTree;\n  }\n  lineralizeSegments(route, urlTree) {\n    let res = [];\n    let c = urlTree.root;\n    while (true) {\n      res = res.concat(c.segments);\n      if (c.numberOfChildren === 0) {\n        return of(res);\n      }\n      if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n        return namedOutletsRedirect(`${route.redirectTo}`);\n      }\n      c = c.children[PRIMARY_OUTLET];\n    }\n  }\n  applyRedirectCommands(segments, redirectTo, posParams, currentSnapshot, injector) {\n    if (typeof redirectTo !== 'string') {\n      const redirectToFn = redirectTo;\n      const {\n        queryParams,\n        fragment,\n        routeConfig,\n        url,\n        outlet,\n        params,\n        data,\n        title\n      } = currentSnapshot;\n      const newRedirect = runInInjectionContext(injector, () => redirectToFn({\n        params,\n        data,\n        queryParams,\n        fragment,\n        routeConfig,\n        url,\n        outlet,\n        title\n      }));\n      if (newRedirect instanceof UrlTree) {\n        throw new AbsoluteRedirect(newRedirect);\n      }\n      redirectTo = newRedirect;\n    }\n    const newTree = this.applyRedirectCreateUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    if (redirectTo[0] === '/') {\n      throw new AbsoluteRedirect(newTree);\n    }\n    return newTree;\n  }\n  applyRedirectCreateUrlTree(redirectTo, urlTree, segments, posParams) {\n    const newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n    return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n  }\n  createQueryParams(redirectToParams, actualParams) {\n    const res = {};\n    Object.entries(redirectToParams).forEach(([k, v]) => {\n      const copySourceValue = typeof v === 'string' && v[0] === ':';\n      if (copySourceValue) {\n        const sourceName = v.substring(1);\n        res[k] = actualParams[sourceName];\n      } else {\n        res[k] = v;\n      }\n    });\n    return res;\n  }\n  createSegmentGroup(redirectTo, group, segments, posParams) {\n    const updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n    let children = {};\n    Object.entries(group.children).forEach(([name, child]) => {\n      children[name] = this.createSegmentGroup(redirectTo, child, segments, posParams);\n    });\n    return new UrlSegmentGroup(updatedSegments, children);\n  }\n  createSegments(redirectTo, redirectToSegments, actualSegments, posParams) {\n    return redirectToSegments.map(s => s.path[0] === ':' ? this.findPosParam(redirectTo, s, posParams) : this.findOrReturn(s, actualSegments));\n  }\n  findPosParam(redirectTo, redirectToUrlSegment, posParams) {\n    const pos = posParams[redirectToUrlSegment.path.substring(1)];\n    if (!pos) throw new _RuntimeError(4001 /* RuntimeErrorCode.MISSING_REDIRECT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot redirect to '${redirectTo}'. Cannot find '${redirectToUrlSegment.path}'.`);\n    return pos;\n  }\n  findOrReturn(redirectToUrlSegment, actualSegments) {\n    let idx = 0;\n    for (const s of actualSegments) {\n      if (s.path === redirectToUrlSegment.path) {\n        actualSegments.splice(idx);\n        return s;\n      }\n      idx++;\n    }\n    return redirectToUrlSegment;\n  }\n}\nconst noMatch = {\n  matched: false,\n  consumedSegments: [],\n  remainingSegments: [],\n  parameters: {},\n  positionalParamSegments: {}\n};\nfunction matchWithChecks(segmentGroup, route, segments, injector, urlSerializer) {\n  const result = match(segmentGroup, route, segments);\n  if (!result.matched) {\n    return of(result);\n  }\n  // Only create the Route's `EnvironmentInjector` if it matches the attempted\n  // navigation\n  injector = getOrCreateRouteInjectorIfNeeded(route, injector);\n  return runCanMatchGuards(injector, route, segments, urlSerializer).pipe(map(v => v === true ? result : {\n    ...noMatch\n  }));\n}\nfunction match(segmentGroup, route, segments) {\n  if (route.path === '**') {\n    return createWildcardMatchResult(segments);\n  }\n  if (route.path === '') {\n    if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n      return {\n        ...noMatch\n      };\n    }\n    return {\n      matched: true,\n      consumedSegments: [],\n      remainingSegments: segments,\n      parameters: {},\n      positionalParamSegments: {}\n    };\n  }\n  const matcher = route.matcher || defaultUrlMatcher;\n  const res = matcher(segments, segmentGroup, route);\n  if (!res) return {\n    ...noMatch\n  };\n  const posParams = {};\n  Object.entries(res.posParams ?? {}).forEach(([k, v]) => {\n    posParams[k] = v.path;\n  });\n  const parameters = res.consumed.length > 0 ? {\n    ...posParams,\n    ...res.consumed[res.consumed.length - 1].parameters\n  } : posParams;\n  return {\n    matched: true,\n    consumedSegments: res.consumed,\n    remainingSegments: segments.slice(res.consumed.length),\n    // TODO(atscott): investigate combining parameters and positionalParamSegments\n    parameters,\n    positionalParamSegments: res.posParams ?? {}\n  };\n}\nfunction createWildcardMatchResult(segments) {\n  return {\n    matched: true,\n    parameters: segments.length > 0 ? last(segments).parameters : {},\n    consumedSegments: segments,\n    remainingSegments: [],\n    positionalParamSegments: {}\n  };\n}\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n  if (slicedSegments.length > 0 && containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n    const s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n    return {\n      segmentGroup: s,\n      slicedSegments: []\n    };\n  }\n  if (slicedSegments.length === 0 && containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n    const s = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n    return {\n      segmentGroup: s,\n      slicedSegments\n    };\n  }\n  const s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n  return {\n    segmentGroup: s,\n    slicedSegments\n  };\n}\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n  const res = {};\n  for (const r of routes) {\n    if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n      const s = new UrlSegmentGroup([], {});\n      res[getOutlet(r)] = s;\n    }\n  }\n  return {\n    ...children,\n    ...res\n  };\n}\nfunction createChildrenForEmptyPaths(routes, primarySegment) {\n  const res = {};\n  res[PRIMARY_OUTLET] = primarySegment;\n  for (const r of routes) {\n    if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n      const s = new UrlSegmentGroup([], {});\n      res[getOutlet(r)] = s;\n    }\n  }\n  return res;\n}\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n  return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet(r) !== PRIMARY_OUTLET);\n}\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n  return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r));\n}\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n  if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n    return false;\n  }\n  return r.path === '';\n}\nfunction noLeftoversInUrl(segmentGroup, segments, outlet) {\n  return segments.length === 0 && !segmentGroup.children[outlet];\n}\n\n/**\n * Class used to indicate there were no additional route config matches but that all segments of\n * the URL were consumed during matching so the route was URL matched. When this happens, we still\n * try to match child configs in case there are empty path children.\n */\nclass NoLeftoversInUrl {}\nfunction recognize$1(injector, configLoader, rootComponentType, config, urlTree, urlSerializer, paramsInheritanceStrategy = 'emptyOnly') {\n  return new Recognizer(injector, configLoader, rootComponentType, config, urlTree, paramsInheritanceStrategy, urlSerializer).recognize();\n}\nconst MAX_ALLOWED_REDIRECTS = 31;\nclass Recognizer {\n  injector;\n  configLoader;\n  rootComponentType;\n  config;\n  urlTree;\n  paramsInheritanceStrategy;\n  urlSerializer;\n  applyRedirects;\n  absoluteRedirectCount = 0;\n  allowRedirects = true;\n  constructor(injector, configLoader, rootComponentType, config, urlTree, paramsInheritanceStrategy, urlSerializer) {\n    this.injector = injector;\n    this.configLoader = configLoader;\n    this.rootComponentType = rootComponentType;\n    this.config = config;\n    this.urlTree = urlTree;\n    this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n    this.urlSerializer = urlSerializer;\n    this.applyRedirects = new ApplyRedirects(this.urlSerializer, this.urlTree);\n  }\n  noMatchError(e) {\n    return new _RuntimeError(4002 /* RuntimeErrorCode.NO_MATCH */, typeof ngDevMode === 'undefined' || ngDevMode ? `Cannot match any routes. URL Segment: '${e.segmentGroup}'` : `'${e.segmentGroup}'`);\n  }\n  recognize() {\n    const rootSegmentGroup = split(this.urlTree.root, [], [], this.config).segmentGroup;\n    return this.match(rootSegmentGroup).pipe(map(({\n      children,\n      rootSnapshot\n    }) => {\n      const rootNode = new TreeNode(rootSnapshot, children);\n      const routeState = new RouterStateSnapshot('', rootNode);\n      const tree = createUrlTreeFromSnapshot(rootSnapshot, [], this.urlTree.queryParams, this.urlTree.fragment);\n      // https://github.com/angular/angular/issues/47307\n      // Creating the tree stringifies the query params\n      // We don't want to do this here so reassign them to the original.\n      tree.queryParams = this.urlTree.queryParams;\n      routeState.url = this.urlSerializer.serialize(tree);\n      return {\n        state: routeState,\n        tree\n      };\n    }));\n  }\n  match(rootSegmentGroup) {\n    // Use Object.freeze to prevent readers of the Router state from modifying it outside\n    // of a navigation, resulting in the router being out of sync with the browser.\n    const rootSnapshot = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze({\n      ...this.urlTree.queryParams\n    }), this.urlTree.fragment, Object.freeze({}), PRIMARY_OUTLET, this.rootComponentType, null, {});\n    return this.processSegmentGroup(this.injector, this.config, rootSegmentGroup, PRIMARY_OUTLET, rootSnapshot).pipe(map(children => {\n      return {\n        children,\n        rootSnapshot\n      };\n    }), catchError(e => {\n      if (e instanceof AbsoluteRedirect) {\n        this.urlTree = e.urlTree;\n        return this.match(e.urlTree.root);\n      }\n      if (e instanceof NoMatch) {\n        throw this.noMatchError(e);\n      }\n      throw e;\n    }));\n  }\n  processSegmentGroup(injector, config, segmentGroup, outlet, parentRoute) {\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n      return this.processChildren(injector, config, segmentGroup, parentRoute);\n    }\n    return this.processSegment(injector, config, segmentGroup, segmentGroup.segments, outlet, true, parentRoute).pipe(map(child => child instanceof TreeNode ? [child] : []));\n  }\n  /**\n   * Matches every child outlet in the `segmentGroup` to a `Route` in the config. Returns `null` if\n   * we cannot find a match for _any_ of the children.\n   *\n   * @param config - The `Routes` to match against\n   * @param segmentGroup - The `UrlSegmentGroup` whose children need to be matched against the\n   *     config.\n   */\n  processChildren(injector, config, segmentGroup, parentRoute) {\n    // Expand outlets one at a time, starting with the primary outlet. We need to do it this way\n    // because an absolute redirect from the primary outlet takes precedence.\n    const childOutlets = [];\n    for (const child of Object.keys(segmentGroup.children)) {\n      if (child === 'primary') {\n        childOutlets.unshift(child);\n      } else {\n        childOutlets.push(child);\n      }\n    }\n    return from(childOutlets).pipe(concatMap(childOutlet => {\n      const child = segmentGroup.children[childOutlet];\n      // Sort the config so that routes with outlets that match the one being activated\n      // appear first, followed by routes for other outlets, which might match if they have\n      // an empty path.\n      const sortedConfig = sortByMatchingOutlets(config, childOutlet);\n      return this.processSegmentGroup(injector, sortedConfig, child, childOutlet, parentRoute);\n    }), scan((children, outletChildren) => {\n      children.push(...outletChildren);\n      return children;\n    }), defaultIfEmpty(null), last$1(), mergeMap(children => {\n      if (children === null) return noMatch$1(segmentGroup);\n      // Because we may have matched two outlets to the same empty path segment, we can have\n      // multiple activated results for the same outlet. We should merge the children of\n      // these results so the final return value is only one `TreeNode` per outlet.\n      const mergedChildren = mergeEmptyPathMatches(children);\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // This should really never happen - we are only taking the first match for each\n        // outlet and merge the empty path matches.\n        checkOutletNameUniqueness(mergedChildren);\n      }\n      sortActivatedRouteSnapshots(mergedChildren);\n      return of(mergedChildren);\n    }));\n  }\n  processSegment(injector, routes, segmentGroup, segments, outlet, allowRedirects, parentRoute) {\n    return from(routes).pipe(concatMap(r => {\n      return this.processSegmentAgainstRoute(r._injector ?? injector, routes, r, segmentGroup, segments, outlet, allowRedirects, parentRoute).pipe(catchError(e => {\n        if (e instanceof NoMatch) {\n          return of(null);\n        }\n        throw e;\n      }));\n    }), first(x => !!x), catchError(e => {\n      if (isEmptyError(e)) {\n        if (noLeftoversInUrl(segmentGroup, segments, outlet)) {\n          return of(new NoLeftoversInUrl());\n        }\n        return noMatch$1(segmentGroup);\n      }\n      throw e;\n    }));\n  }\n  processSegmentAgainstRoute(injector, routes, route, rawSegment, segments, outlet, allowRedirects, parentRoute) {\n    // We allow matches to empty paths when the outlets differ so we can match a url like `/(b:b)` to\n    // a config like\n    // * `{path: '', children: [{path: 'b', outlet: 'b'}]}`\n    // or even\n    // * `{path: '', outlet: 'a', children: [{path: 'b', outlet: 'b'}]`\n    //\n    // The exception here is when the segment outlet is for the primary outlet. This would\n    // result in a match inside the named outlet because all children there are written as primary\n    // outlets. So we need to prevent child named outlet matches in a url like `/b` in a config like\n    // * `{path: '', outlet: 'x' children: [{path: 'b'}]}`\n    // This should only match if the url is `/(x:b)`.\n    if (getOutlet(route) !== outlet && (outlet === PRIMARY_OUTLET || !emptyPathMatch(rawSegment, segments, route))) {\n      return noMatch$1(rawSegment);\n    }\n    if (route.redirectTo === undefined) {\n      return this.matchSegmentAgainstRoute(injector, rawSegment, route, segments, outlet, parentRoute);\n    }\n    if (this.allowRedirects && allowRedirects) {\n      return this.expandSegmentAgainstRouteUsingRedirect(injector, rawSegment, routes, route, segments, outlet, parentRoute);\n    }\n    return noMatch$1(rawSegment);\n  }\n  expandSegmentAgainstRouteUsingRedirect(injector, segmentGroup, routes, route, segments, outlet, parentRoute) {\n    const {\n      matched,\n      parameters,\n      consumedSegments,\n      positionalParamSegments,\n      remainingSegments\n    } = match(segmentGroup, route, segments);\n    if (!matched) return noMatch$1(segmentGroup);\n    // TODO(atscott): Move all of this under an if(ngDevMode) as a breaking change and allow stack\n    // size exceeded in production\n    if (typeof route.redirectTo === 'string' && route.redirectTo[0] === '/') {\n      this.absoluteRedirectCount++;\n      if (this.absoluteRedirectCount > MAX_ALLOWED_REDIRECTS) {\n        if (ngDevMode) {\n          throw new _RuntimeError(4016 /* RuntimeErrorCode.INFINITE_REDIRECT */, `Detected possible infinite redirect when redirecting from '${this.urlTree}' to '${route.redirectTo}'.\\n` + `This is currently a dev mode only error but will become a` + ` call stack size exceeded error in production in a future major version.`);\n        }\n        this.allowRedirects = false;\n      }\n    }\n    const currentSnapshot = new ActivatedRouteSnapshot(segments, parameters, Object.freeze({\n      ...this.urlTree.queryParams\n    }), this.urlTree.fragment, getData(route), getOutlet(route), route.component ?? route._loadedComponent ?? null, route, getResolve(route));\n    const inherited = getInherited(currentSnapshot, parentRoute, this.paramsInheritanceStrategy);\n    currentSnapshot.params = Object.freeze(inherited.params);\n    currentSnapshot.data = Object.freeze(inherited.data);\n    const newTree = this.applyRedirects.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments, currentSnapshot, injector);\n    return this.applyRedirects.lineralizeSegments(route, newTree).pipe(mergeMap(newSegments => {\n      return this.processSegment(injector, routes, segmentGroup, newSegments.concat(remainingSegments), outlet, false, parentRoute);\n    }));\n  }\n  matchSegmentAgainstRoute(injector, rawSegment, route, segments, outlet, parentRoute) {\n    const matchResult = matchWithChecks(rawSegment, route, segments, injector, this.urlSerializer);\n    if (route.path === '**') {\n      // Prior versions of the route matching algorithm would stop matching at the wildcard route.\n      // We should investigate a better strategy for any existing children. Otherwise, these\n      // child segments are silently dropped from the navigation.\n      // https://github.com/angular/angular/issues/40089\n      rawSegment.children = {};\n    }\n    return matchResult.pipe(switchMap(result => {\n      if (!result.matched) {\n        return noMatch$1(rawSegment);\n      }\n      // If the route has an injector created from providers, we should start using that.\n      injector = route._injector ?? injector;\n      return this.getChildConfig(injector, route, segments).pipe(switchMap(({\n        routes: childConfig\n      }) => {\n        const childInjector = route._loadedInjector ?? injector;\n        const {\n          parameters,\n          consumedSegments,\n          remainingSegments\n        } = result;\n        const snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze({\n          ...this.urlTree.queryParams\n        }), this.urlTree.fragment, getData(route), getOutlet(route), route.component ?? route._loadedComponent ?? null, route, getResolve(route));\n        const inherited = getInherited(snapshot, parentRoute, this.paramsInheritanceStrategy);\n        snapshot.params = Object.freeze(inherited.params);\n        snapshot.data = Object.freeze(inherited.data);\n        const {\n          segmentGroup,\n          slicedSegments\n        } = split(rawSegment, consumedSegments, remainingSegments, childConfig);\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n          return this.processChildren(childInjector, childConfig, segmentGroup, snapshot).pipe(map(children => {\n            return new TreeNode(snapshot, children);\n          }));\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n          return of(new TreeNode(snapshot, []));\n        }\n        const matchedOnOutlet = getOutlet(route) === outlet;\n        // If we matched a config due to empty path match on a different outlet, we need to\n        // continue passing the current outlet for the segment rather than switch to PRIMARY.\n        // Note that we switch to primary when we have a match because outlet configs look like\n        // this: {path: 'a', outlet: 'a', children: [\n        //  {path: 'b', component: B},\n        //  {path: 'c', component: C},\n        // ]}\n        // Notice that the children of the named outlet are configured with the primary outlet\n        return this.processSegment(childInjector, childConfig, segmentGroup, slicedSegments, matchedOnOutlet ? PRIMARY_OUTLET : outlet, true, snapshot).pipe(map(child => {\n          return new TreeNode(snapshot, child instanceof TreeNode ? [child] : []);\n        }));\n      }));\n    }));\n  }\n  getChildConfig(injector, route, segments) {\n    if (route.children) {\n      // The children belong to the same module\n      return of({\n        routes: route.children,\n        injector\n      });\n    }\n    if (route.loadChildren) {\n      // lazy children belong to the loaded module\n      if (route._loadedRoutes !== undefined) {\n        return of({\n          routes: route._loadedRoutes,\n          injector: route._loadedInjector\n        });\n      }\n      return runCanLoadGuards(injector, route, segments, this.urlSerializer).pipe(mergeMap(shouldLoadResult => {\n        if (shouldLoadResult) {\n          return this.configLoader.loadChildren(injector, route).pipe(tap(cfg => {\n            route._loadedRoutes = cfg.routes;\n            route._loadedInjector = cfg.injector;\n          }));\n        }\n        return canLoadFails(route);\n      }));\n    }\n    return of({\n      routes: [],\n      injector\n    });\n  }\n}\nfunction sortActivatedRouteSnapshots(nodes) {\n  nodes.sort((a, b) => {\n    if (a.value.outlet === PRIMARY_OUTLET) return -1;\n    if (b.value.outlet === PRIMARY_OUTLET) return 1;\n    return a.value.outlet.localeCompare(b.value.outlet);\n  });\n}\nfunction hasEmptyPathConfig(node) {\n  const config = node.value.routeConfig;\n  return config && config.path === '';\n}\n/**\n * Finds `TreeNode`s with matching empty path route configs and merges them into `TreeNode` with\n * the children from each duplicate. This is necessary because different outlets can match a\n * single empty path route config and the results need to then be merged.\n */\nfunction mergeEmptyPathMatches(nodes) {\n  const result = [];\n  // The set of nodes which contain children that were merged from two duplicate empty path nodes.\n  const mergedNodes = new Set();\n  for (const node of nodes) {\n    if (!hasEmptyPathConfig(node)) {\n      result.push(node);\n      continue;\n    }\n    const duplicateEmptyPathNode = result.find(resultNode => node.value.routeConfig === resultNode.value.routeConfig);\n    if (duplicateEmptyPathNode !== undefined) {\n      duplicateEmptyPathNode.children.push(...node.children);\n      mergedNodes.add(duplicateEmptyPathNode);\n    } else {\n      result.push(node);\n    }\n  }\n  // For each node which has children from multiple sources, we need to recompute a new `TreeNode`\n  // by also merging those children. This is necessary when there are multiple empty path configs\n  // in a row. Put another way: whenever we combine children of two nodes, we need to also check\n  // if any of those children can be combined into a single node as well.\n  for (const mergedNode of mergedNodes) {\n    const mergedChildren = mergeEmptyPathMatches(mergedNode.children);\n    result.push(new TreeNode(mergedNode.value, mergedChildren));\n  }\n  return result.filter(n => !mergedNodes.has(n));\n}\nfunction checkOutletNameUniqueness(nodes) {\n  const names = {};\n  nodes.forEach(n => {\n    const routeWithSameOutletName = names[n.value.outlet];\n    if (routeWithSameOutletName) {\n      const p = routeWithSameOutletName.url.map(s => s.toString()).join('/');\n      const c = n.value.url.map(s => s.toString()).join('/');\n      throw new _RuntimeError(4006 /* RuntimeErrorCode.TWO_SEGMENTS_WITH_SAME_OUTLET */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Two segments cannot have the same outlet name: '${p}' and '${c}'.`);\n    }\n    names[n.value.outlet] = n.value;\n  });\n}\nfunction getData(route) {\n  return route.data || {};\n}\nfunction getResolve(route) {\n  return route.resolve || {};\n}\nfunction recognize(injector, configLoader, rootComponentType, config, serializer, paramsInheritanceStrategy) {\n  return mergeMap(t => recognize$1(injector, configLoader, rootComponentType, config, t.extractedUrl, serializer, paramsInheritanceStrategy).pipe(map(({\n    state: targetSnapshot,\n    tree: urlAfterRedirects\n  }) => {\n    return {\n      ...t,\n      targetSnapshot,\n      urlAfterRedirects\n    };\n  })));\n}\nfunction resolveData(paramsInheritanceStrategy, injector) {\n  return mergeMap(t => {\n    const {\n      targetSnapshot,\n      guards: {\n        canActivateChecks\n      }\n    } = t;\n    if (!canActivateChecks.length) {\n      return of(t);\n    }\n    // Iterating a Set in javascript  happens in insertion order so it is safe to use a `Set` to\n    // preserve the correct order that the resolvers should run in.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#description\n    const routesWithResolversToRun = new Set(canActivateChecks.map(check => check.route));\n    const routesNeedingDataUpdates = new Set();\n    for (const route of routesWithResolversToRun) {\n      if (routesNeedingDataUpdates.has(route)) {\n        continue;\n      }\n      // All children under the route with a resolver to run need to recompute inherited data.\n      for (const newRoute of flattenRouteTree(route)) {\n        routesNeedingDataUpdates.add(newRoute);\n      }\n    }\n    let routesProcessed = 0;\n    return from(routesNeedingDataUpdates).pipe(concatMap(route => {\n      if (routesWithResolversToRun.has(route)) {\n        return runResolve(route, targetSnapshot, paramsInheritanceStrategy, injector);\n      } else {\n        route.data = getInherited(route, route.parent, paramsInheritanceStrategy).resolve;\n        return of(void 0);\n      }\n    }), tap(() => routesProcessed++), takeLast(1), mergeMap(_ => routesProcessed === routesNeedingDataUpdates.size ? of(t) : EMPTY));\n  });\n}\n/**\n *  Returns the `ActivatedRouteSnapshot` tree as an array, using DFS to traverse the route tree.\n */\nfunction flattenRouteTree(route) {\n  const descendants = route.children.map(child => flattenRouteTree(child)).flat();\n  return [route, ...descendants];\n}\nfunction runResolve(futureARS, futureRSS, paramsInheritanceStrategy, injector) {\n  const config = futureARS.routeConfig;\n  const resolve = futureARS._resolve;\n  if (config?.title !== undefined && !hasStaticTitle(config)) {\n    resolve[RouteTitleKey] = config.title;\n  }\n  return resolveNode(resolve, futureARS, futureRSS, injector).pipe(map(resolvedData => {\n    futureARS._resolvedData = resolvedData;\n    futureARS.data = getInherited(futureARS, futureARS.parent, paramsInheritanceStrategy).resolve;\n    return null;\n  }));\n}\nfunction resolveNode(resolve, futureARS, futureRSS, injector) {\n  const keys = getDataKeys(resolve);\n  if (keys.length === 0) {\n    return of({});\n  }\n  const data = {};\n  return from(keys).pipe(mergeMap(key => getResolver(resolve[key], futureARS, futureRSS, injector).pipe(first(), tap(value => {\n    if (value instanceof RedirectCommand) {\n      throw redirectingNavigationError(new DefaultUrlSerializer(), value);\n    }\n    data[key] = value;\n  }))), takeLast(1), map(() => data), catchError(e => isEmptyError(e) ? EMPTY : throwError(e)));\n}\nfunction getResolver(injectionToken, futureARS, futureRSS, injector) {\n  const closestInjector = getClosestRouteInjector(futureARS) ?? injector;\n  const resolver = getTokenOrFunctionIdentity(injectionToken, closestInjector);\n  const resolverValue = resolver.resolve ? resolver.resolve(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => resolver(futureARS, futureRSS));\n  return wrapIntoObservable(resolverValue);\n}\n\n/**\n * Perform a side effect through a switchMap for every emission on the source Observable,\n * but return an Observable that is identical to the source. It's essentially the same as\n * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,\n * it will wait before continuing with the original value.\n */\nfunction switchTap(next) {\n  return switchMap(v => {\n    const nextResult = next(v);\n    if (nextResult) {\n      return from(nextResult).pipe(map(() => v));\n    }\n    return of(v);\n  });\n}\n\n/**\n * Provides a strategy for setting the page title after a router navigation.\n *\n * The built-in implementation traverses the router state snapshot and finds the deepest primary\n * outlet with `title` property. Given the `Routes` below, navigating to\n * `/base/child(popup:aux)` would result in the document title being set to \"child\".\n * ```ts\n * [\n *   {path: 'base', title: 'base', children: [\n *     {path: 'child', title: 'child'},\n *   ],\n *   {path: 'aux', outlet: 'popup', title: 'popupTitle'}\n * ]\n * ```\n *\n * This class can be used as a base class for custom title strategies. That is, you can create your\n * own class that extends the `TitleStrategy`. Note that in the above example, the `title`\n * from the named outlet is never used. However, a custom strategy might be implemented to\n * incorporate titles in named outlets.\n *\n * @publicApi\n * @see [Page title guide](guide/routing/common-router-tasks#setting-the-page-title)\n */\nlet TitleStrategy = /*#__PURE__*/(() => {\n  class TitleStrategy {\n    /**\n     * @returns The `title` of the deepest primary route.\n     */\n    buildTitle(snapshot) {\n      let pageTitle;\n      let route = snapshot.root;\n      while (route !== undefined) {\n        pageTitle = this.getResolvedTitleForRoute(route) ?? pageTitle;\n        route = route.children.find(child => child.outlet === PRIMARY_OUTLET);\n      }\n      return pageTitle;\n    }\n    /**\n     * Given an `ActivatedRouteSnapshot`, returns the final value of the\n     * `Route.title` property, which can either be a static string or a resolved value.\n     */\n    getResolvedTitleForRoute(snapshot) {\n      return snapshot.data[RouteTitleKey];\n    }\n    static ɵfac = function TitleStrategy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TitleStrategy)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TitleStrategy,\n      factory: () => (() => inject(DefaultTitleStrategy))(),\n      providedIn: 'root'\n    });\n  }\n  return TitleStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The default `TitleStrategy` used by the router that updates the title using the `Title` service.\n */\nlet DefaultTitleStrategy = /*#__PURE__*/(() => {\n  class DefaultTitleStrategy extends TitleStrategy {\n    title;\n    constructor(title) {\n      super();\n      this.title = title;\n    }\n    /**\n     * Sets the title of the browser to the given value.\n     *\n     * @param title The `pageTitle` from the deepest primary route.\n     */\n    updateTitle(snapshot) {\n      const title = this.buildTitle(snapshot);\n      if (title !== undefined) {\n        this.title.setTitle(title);\n      }\n    }\n    static ɵfac = function DefaultTitleStrategy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DefaultTitleStrategy)(i0.ɵɵinject(i1.Title));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DefaultTitleStrategy,\n      factory: DefaultTitleStrategy.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DefaultTitleStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A DI token for the router service.\n *\n * @publicApi\n */\nconst ROUTER_CONFIGURATION = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router config' : '', {\n  providedIn: 'root',\n  factory: () => ({})\n});\n\n/**\n * This component is used internally within the router to be a placeholder when an empty\n * router-outlet is needed. For example, with a config such as:\n *\n * `{path: 'parent', outlet: 'nav', children: [...]}`\n *\n * In order to render, there needs to be a component on this config, which will default\n * to this `EmptyOutletComponent`.\n */\nlet ɵEmptyOutletComponent = /*#__PURE__*/(() => {\n  class ɵEmptyOutletComponent {\n    static ɵfac = function ɵEmptyOutletComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ɵEmptyOutletComponent)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ɵEmptyOutletComponent,\n      selectors: [[\"ng-component\"]],\n      exportAs: [\"emptyRouterOutlet\"],\n      decls: 1,\n      vars: 0,\n      template: function _EmptyOutletComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"router-outlet\");\n        }\n      },\n      dependencies: [RouterOutlet],\n      encapsulation: 2\n    });\n  }\n  return ɵEmptyOutletComponent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Makes a copy of the config and adds any default required properties.\n */\nfunction standardizeConfig(r) {\n  const children = r.children && r.children.map(standardizeConfig);\n  const c = children ? {\n    ...r,\n    children\n  } : {\n    ...r\n  };\n  if (!c.component && !c.loadComponent && (children || c.loadChildren) && c.outlet && c.outlet !== PRIMARY_OUTLET) {\n    c.component = ɵEmptyOutletComponent;\n  }\n  return c;\n}\n\n/**\n * The DI token for a router configuration.\n *\n * `ROUTES` is a low level API for router configuration via dependency injection.\n *\n * We recommend that in almost all cases to use higher level APIs such as `RouterModule.forRoot()`,\n * `provideRouter`, or `Router.resetConfig()`.\n *\n * @publicApi\n */\nconst ROUTES = /*#__PURE__*/new InjectionToken(ngDevMode ? 'ROUTES' : '');\nlet RouterConfigLoader = /*#__PURE__*/(() => {\n  class RouterConfigLoader {\n    componentLoaders = new WeakMap();\n    childrenLoaders = new WeakMap();\n    onLoadStartListener;\n    onLoadEndListener;\n    compiler = inject(Compiler);\n    loadComponent(route) {\n      if (this.componentLoaders.get(route)) {\n        return this.componentLoaders.get(route);\n      } else if (route._loadedComponent) {\n        return of(route._loadedComponent);\n      }\n      if (this.onLoadStartListener) {\n        this.onLoadStartListener(route);\n      }\n      const loadRunner = wrapIntoObservable(route.loadComponent()).pipe(map(maybeUnwrapDefaultExport), tap(component => {\n        if (this.onLoadEndListener) {\n          this.onLoadEndListener(route);\n        }\n        (typeof ngDevMode === 'undefined' || ngDevMode) && assertStandalone(route.path ?? '', component);\n        route._loadedComponent = component;\n      }), finalize(() => {\n        this.componentLoaders.delete(route);\n      }));\n      // Use custom ConnectableObservable as share in runners pipe increasing the bundle size too much\n      const loader = new ConnectableObservable(loadRunner, () => new Subject()).pipe(refCount());\n      this.componentLoaders.set(route, loader);\n      return loader;\n    }\n    loadChildren(parentInjector, route) {\n      if (this.childrenLoaders.get(route)) {\n        return this.childrenLoaders.get(route);\n      } else if (route._loadedRoutes) {\n        return of({\n          routes: route._loadedRoutes,\n          injector: route._loadedInjector\n        });\n      }\n      if (this.onLoadStartListener) {\n        this.onLoadStartListener(route);\n      }\n      const moduleFactoryOrRoutes$ = loadChildren(route, this.compiler, parentInjector, this.onLoadEndListener);\n      const loadRunner = moduleFactoryOrRoutes$.pipe(finalize(() => {\n        this.childrenLoaders.delete(route);\n      }));\n      // Use custom ConnectableObservable as share in runners pipe increasing the bundle size too much\n      const loader = new ConnectableObservable(loadRunner, () => new Subject()).pipe(refCount());\n      this.childrenLoaders.set(route, loader);\n      return loader;\n    }\n    static ɵfac = function RouterConfigLoader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RouterConfigLoader)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RouterConfigLoader,\n      factory: RouterConfigLoader.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return RouterConfigLoader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Executes a `route.loadChildren` callback and converts the result to an array of child routes and\n * an injector if that callback returned a module.\n *\n * This function is used for the route discovery during prerendering\n * in @angular-devkit/build-angular. If there are any updates to the contract here, it will require\n * an update to the extractor.\n */\nfunction loadChildren(route, compiler, parentInjector, onLoadEndListener) {\n  return wrapIntoObservable(route.loadChildren()).pipe(map(maybeUnwrapDefaultExport), mergeMap(t => {\n    if (t instanceof NgModuleFactory || Array.isArray(t)) {\n      return of(t);\n    } else {\n      return from(compiler.compileModuleAsync(t));\n    }\n  }), map(factoryOrRoutes => {\n    if (onLoadEndListener) {\n      onLoadEndListener(route);\n    }\n    // This injector comes from the `NgModuleRef` when lazy loading an `NgModule`. There is\n    // no injector associated with lazy loading a `Route` array.\n    let injector;\n    let rawRoutes;\n    let requireStandaloneComponents = false;\n    if (Array.isArray(factoryOrRoutes)) {\n      rawRoutes = factoryOrRoutes;\n      requireStandaloneComponents = true;\n    } else {\n      injector = factoryOrRoutes.create(parentInjector).injector;\n      // When loading a module that doesn't provide `RouterModule.forChild()` preloader\n      // will get stuck in an infinite loop. The child module's Injector will look to\n      // its parent `Injector` when it doesn't find any ROUTES so it will return routes\n      // for it's parent module instead.\n      rawRoutes = injector.get(ROUTES, [], {\n        optional: true,\n        self: true\n      }).flat();\n    }\n    const routes = rawRoutes.map(standardizeConfig);\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateConfig(routes, route.path, requireStandaloneComponents);\n    return {\n      routes,\n      injector\n    };\n  }));\n}\nfunction isWrappedDefaultExport(value) {\n  // We use `in` here with a string key `'default'`, because we expect `DefaultExport` objects to be\n  // dynamically imported ES modules with a spec-mandated `default` key. Thus we don't expect that\n  // `default` will be a renamed property.\n  return value && typeof value === 'object' && 'default' in value;\n}\nfunction maybeUnwrapDefaultExport(input) {\n  // As per `isWrappedDefaultExport`, the `default` key here is generated by the browser and not\n  // subject to property renaming, so we reference it with bracket access.\n  return isWrappedDefaultExport(input) ? input['default'] : input;\n}\n\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @publicApi\n */\nlet UrlHandlingStrategy = /*#__PURE__*/(() => {\n  class UrlHandlingStrategy {\n    static ɵfac = function UrlHandlingStrategy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UrlHandlingStrategy)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UrlHandlingStrategy,\n      factory: () => (() => inject(DefaultUrlHandlingStrategy))(),\n      providedIn: 'root'\n    });\n  }\n  return UrlHandlingStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @publicApi\n */\nlet DefaultUrlHandlingStrategy = /*#__PURE__*/(() => {\n  class DefaultUrlHandlingStrategy {\n    shouldProcessUrl(url) {\n      return true;\n    }\n    extract(url) {\n      return url;\n    }\n    merge(newUrlPart, wholeUrl) {\n      return newUrlPart;\n    }\n    static ɵfac = function DefaultUrlHandlingStrategy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DefaultUrlHandlingStrategy)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DefaultUrlHandlingStrategy,\n      factory: DefaultUrlHandlingStrategy.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DefaultUrlHandlingStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/// <reference types=\"dom-view-transitions\" />\nconst CREATE_VIEW_TRANSITION = /*#__PURE__*/new InjectionToken(ngDevMode ? 'view transition helper' : '');\nconst VIEW_TRANSITION_OPTIONS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'view transition options' : '');\n/**\n * A helper function for using browser view transitions. This function skips the call to\n * `startViewTransition` if the browser does not support it.\n *\n * @returns A Promise that resolves when the view transition callback begins.\n */\nfunction createViewTransition(injector, from, to) {\n  const transitionOptions = injector.get(VIEW_TRANSITION_OPTIONS);\n  const document = injector.get(DOCUMENT);\n  // Create promises outside the Angular zone to avoid causing extra change detections\n  return injector.get(NgZone).runOutsideAngular(() => {\n    if (!document.startViewTransition || transitionOptions.skipNextTransition) {\n      transitionOptions.skipNextTransition = false;\n      // The timing of `startViewTransition` is closer to a macrotask. It won't be called\n      // until the current event loop exits so we use a promise resolved in a timeout instead\n      // of Promise.resolve().\n      return new Promise(resolve => setTimeout(resolve));\n    }\n    let resolveViewTransitionStarted;\n    const viewTransitionStarted = new Promise(resolve => {\n      resolveViewTransitionStarted = resolve;\n    });\n    const transition = document.startViewTransition(() => {\n      resolveViewTransitionStarted();\n      // We don't actually update dom within the transition callback. The resolving of the above\n      // promise unblocks the Router navigation, which synchronously activates and deactivates\n      // routes (the DOM update). This view transition waits for the next change detection to\n      // complete (below), which includes the update phase of the routed components.\n      return createRenderPromise(injector);\n      // TODO(atscott): Types in DefinitelyTyped are not up-to-date\n    });\n    const {\n      onViewTransitionCreated\n    } = transitionOptions;\n    if (onViewTransitionCreated) {\n      runInInjectionContext(injector, () => onViewTransitionCreated({\n        transition,\n        from,\n        to\n      }));\n    }\n    return viewTransitionStarted;\n  });\n}\n/**\n * Creates a promise that resolves after next render.\n */\nfunction createRenderPromise(injector) {\n  return new Promise(resolve => {\n    // Wait for the microtask queue to empty after the next render happens (by waiting a macrotask).\n    // This ensures any follow-up renders in the microtask queue are completed before the\n    // view transition starts animating.\n    afterNextRender({\n      read: () => setTimeout(resolve)\n    }, {\n      injector\n    });\n  });\n}\nconst NAVIGATION_ERROR_HANDLER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'navigation error handler' : '');\nlet NavigationTransitions = /*#__PURE__*/(() => {\n  class NavigationTransitions {\n    currentNavigation = null;\n    currentTransition = null;\n    lastSuccessfulNavigation = null;\n    /**\n     * These events are used to communicate back to the Router about the state of the transition. The\n     * Router wants to respond to these events in various ways. Because the `NavigationTransition`\n     * class is not public, this event subject is not publicly exposed.\n     */\n    events = new Subject();\n    /**\n     * Used to abort the current transition with an error.\n     */\n    transitionAbortSubject = new Subject();\n    configLoader = inject(RouterConfigLoader);\n    environmentInjector = inject(EnvironmentInjector);\n    destroyRef = inject(DestroyRef);\n    urlSerializer = inject(UrlSerializer);\n    rootContexts = inject(ChildrenOutletContexts);\n    location = inject(Location);\n    inputBindingEnabled = inject(INPUT_BINDER, {\n      optional: true\n    }) !== null;\n    titleStrategy = inject(TitleStrategy);\n    options = inject(ROUTER_CONFIGURATION, {\n      optional: true\n    }) || {};\n    paramsInheritanceStrategy = this.options.paramsInheritanceStrategy || 'emptyOnly';\n    urlHandlingStrategy = inject(UrlHandlingStrategy);\n    createViewTransition = inject(CREATE_VIEW_TRANSITION, {\n      optional: true\n    });\n    navigationErrorHandler = inject(NAVIGATION_ERROR_HANDLER, {\n      optional: true\n    });\n    navigationId = 0;\n    get hasRequestedNavigation() {\n      return this.navigationId !== 0;\n    }\n    transitions;\n    /**\n     * Hook that enables you to pause navigation after the preactivation phase.\n     * Used by `RouterModule`.\n     *\n     * @internal\n     */\n    afterPreactivation = () => of(void 0);\n    /** @internal */\n    rootComponentType = null;\n    destroyed = false;\n    constructor() {\n      const onLoadStart = r => this.events.next(new RouteConfigLoadStart(r));\n      const onLoadEnd = r => this.events.next(new RouteConfigLoadEnd(r));\n      this.configLoader.onLoadEndListener = onLoadEnd;\n      this.configLoader.onLoadStartListener = onLoadStart;\n      this.destroyRef.onDestroy(() => {\n        this.destroyed = true;\n      });\n    }\n    complete() {\n      this.transitions?.complete();\n    }\n    handleNavigationRequest(request) {\n      const id = ++this.navigationId;\n      this.transitions?.next({\n        ...request,\n        extractedUrl: this.urlHandlingStrategy.extract(request.rawUrl),\n        targetSnapshot: null,\n        targetRouterState: null,\n        guards: {\n          canActivateChecks: [],\n          canDeactivateChecks: []\n        },\n        guardsResult: null,\n        id\n      });\n    }\n    setupNavigations(router) {\n      this.transitions = new BehaviorSubject(null);\n      return this.transitions.pipe(filter(t => t !== null),\n      // Using switchMap so we cancel executing navigations when a new one comes in\n      switchMap(overallTransitionState => {\n        let completed = false;\n        let errored = false;\n        return of(overallTransitionState).pipe(switchMap(t => {\n          // It is possible that `switchMap` fails to cancel previous navigations if a new one happens synchronously while the operator\n          // is processing the `next` notification of that previous navigation. This can happen when a new navigation (say 2) cancels a\n          // previous one (1) and yet another navigation (3) happens synchronously in response to the `NavigationCancel` event for (1).\n          // https://github.com/ReactiveX/rxjs/issues/7455\n          if (this.navigationId > overallTransitionState.id) {\n            const cancellationReason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation ID ${overallTransitionState.id} is not equal to the current navigation id ${this.navigationId}` : '';\n            this.cancelNavigationTransition(overallTransitionState, cancellationReason, NavigationCancellationCode.SupersededByNewNavigation);\n            return EMPTY;\n          }\n          this.currentTransition = overallTransitionState;\n          // Store the Navigation object\n          this.currentNavigation = {\n            id: t.id,\n            initialUrl: t.rawUrl,\n            extractedUrl: t.extractedUrl,\n            targetBrowserUrl: typeof t.extras.browserUrl === 'string' ? this.urlSerializer.parse(t.extras.browserUrl) : t.extras.browserUrl,\n            trigger: t.source,\n            extras: t.extras,\n            previousNavigation: !this.lastSuccessfulNavigation ? null : {\n              ...this.lastSuccessfulNavigation,\n              previousNavigation: null\n            }\n          };\n          const urlTransition = !router.navigated || this.isUpdatingInternalState() || this.isUpdatedBrowserUrl();\n          const onSameUrlNavigation = t.extras.onSameUrlNavigation ?? router.onSameUrlNavigation;\n          if (!urlTransition && onSameUrlNavigation !== 'reload') {\n            const reason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation to ${t.rawUrl} was ignored because it is the same as the current Router URL.` : '';\n            this.events.next(new NavigationSkipped(t.id, this.urlSerializer.serialize(t.rawUrl), reason, NavigationSkippedCode.IgnoredSameUrlNavigation));\n            t.resolve(false);\n            return EMPTY;\n          }\n          if (this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl)) {\n            return of(t).pipe(\n            // Fire NavigationStart event\n            switchMap(t => {\n              this.events.next(new NavigationStart(t.id, this.urlSerializer.serialize(t.extractedUrl), t.source, t.restoredState));\n              if (t.id !== this.navigationId) {\n                return EMPTY;\n              }\n              // This delay is required to match old behavior that forced\n              // navigation to always be async\n              return Promise.resolve(t);\n            }),\n            // Recognize\n            recognize(this.environmentInjector, this.configLoader, this.rootComponentType, router.config, this.urlSerializer, this.paramsInheritanceStrategy),\n            // Update URL if in `eager` update mode\n            tap(t => {\n              overallTransitionState.targetSnapshot = t.targetSnapshot;\n              overallTransitionState.urlAfterRedirects = t.urlAfterRedirects;\n              this.currentNavigation = {\n                ...this.currentNavigation,\n                finalUrl: t.urlAfterRedirects\n              };\n              // Fire RoutesRecognized\n              const routesRecognized = new RoutesRecognized(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n              this.events.next(routesRecognized);\n            }));\n          } else if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(t.currentRawUrl)) {\n            /* When the current URL shouldn't be processed, but the previous one\n             * was, we handle this \"error condition\" by navigating to the\n             * previously successful URL, but leaving the URL intact.*/\n            const {\n              id,\n              extractedUrl,\n              source,\n              restoredState,\n              extras\n            } = t;\n            const navStart = new NavigationStart(id, this.urlSerializer.serialize(extractedUrl), source, restoredState);\n            this.events.next(navStart);\n            const targetSnapshot = createEmptyState(this.rootComponentType).snapshot;\n            this.currentTransition = overallTransitionState = {\n              ...t,\n              targetSnapshot,\n              urlAfterRedirects: extractedUrl,\n              extras: {\n                ...extras,\n                skipLocationChange: false,\n                replaceUrl: false\n              }\n            };\n            this.currentNavigation.finalUrl = extractedUrl;\n            return of(overallTransitionState);\n          } else {\n            /* When neither the current or previous URL can be processed, do\n             * nothing other than update router's internal reference to the\n             * current \"settled\" URL. This way the next navigation will be coming\n             * from the current URL in the browser.\n             */\n            const reason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation was ignored because the UrlHandlingStrategy` + ` indicated neither the current URL ${t.currentRawUrl} nor target URL ${t.rawUrl} should be processed.` : '';\n            this.events.next(new NavigationSkipped(t.id, this.urlSerializer.serialize(t.extractedUrl), reason, NavigationSkippedCode.IgnoredByUrlHandlingStrategy));\n            t.resolve(false);\n            return EMPTY;\n          }\n        }),\n        // --- GUARDS ---\n        tap(t => {\n          const guardsStart = new GuardsCheckStart(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n          this.events.next(guardsStart);\n        }), map(t => {\n          this.currentTransition = overallTransitionState = {\n            ...t,\n            guards: getAllRouteGuards(t.targetSnapshot, t.currentSnapshot, this.rootContexts)\n          };\n          return overallTransitionState;\n        }), checkGuards(this.environmentInjector, evt => this.events.next(evt)), tap(t => {\n          overallTransitionState.guardsResult = t.guardsResult;\n          if (t.guardsResult && typeof t.guardsResult !== 'boolean') {\n            throw redirectingNavigationError(this.urlSerializer, t.guardsResult);\n          }\n          const guardsEnd = new GuardsCheckEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot, !!t.guardsResult);\n          this.events.next(guardsEnd);\n        }), filter(t => {\n          if (!t.guardsResult) {\n            this.cancelNavigationTransition(t, '', NavigationCancellationCode.GuardRejected);\n            return false;\n          }\n          return true;\n        }),\n        // --- RESOLVE ---\n        switchTap(t => {\n          if (t.guards.canActivateChecks.length === 0) {\n            return undefined;\n          }\n          return of(t).pipe(tap(t => {\n            const resolveStart = new ResolveStart(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n            this.events.next(resolveStart);\n          }), switchMap(t => {\n            let dataResolved = false;\n            return of(t).pipe(resolveData(this.paramsInheritanceStrategy, this.environmentInjector), tap({\n              next: () => dataResolved = true,\n              complete: () => {\n                if (!dataResolved) {\n                  this.cancelNavigationTransition(t, typeof ngDevMode === 'undefined' || ngDevMode ? `At least one route resolver didn't emit any value.` : '', NavigationCancellationCode.NoDataFromResolver);\n                }\n              }\n            }));\n          }), tap(t => {\n            const resolveEnd = new ResolveEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n            this.events.next(resolveEnd);\n          }));\n        }),\n        // --- LOAD COMPONENTS ---\n        switchTap(t => {\n          const loadComponents = route => {\n            const loaders = [];\n            if (route.routeConfig?.loadComponent && !route.routeConfig._loadedComponent) {\n              loaders.push(this.configLoader.loadComponent(route.routeConfig).pipe(tap(loadedComponent => {\n                route.component = loadedComponent;\n              }), map(() => void 0)));\n            }\n            for (const child of route.children) {\n              loaders.push(...loadComponents(child));\n            }\n            return loaders;\n          };\n          return combineLatest(loadComponents(t.targetSnapshot.root)).pipe(defaultIfEmpty(null), take(1));\n        }), switchTap(() => this.afterPreactivation()), switchMap(() => {\n          const {\n            currentSnapshot,\n            targetSnapshot\n          } = overallTransitionState;\n          const viewTransitionStarted = this.createViewTransition?.(this.environmentInjector, currentSnapshot.root, targetSnapshot.root);\n          // If view transitions are enabled, block the navigation until the view\n          // transition callback starts. Otherwise, continue immediately.\n          return viewTransitionStarted ? from(viewTransitionStarted).pipe(map(() => overallTransitionState)) : of(overallTransitionState);\n        }), map(t => {\n          const targetRouterState = createRouterState(router.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);\n          this.currentTransition = overallTransitionState = {\n            ...t,\n            targetRouterState\n          };\n          this.currentNavigation.targetRouterState = targetRouterState;\n          return overallTransitionState;\n        }), tap(() => {\n          this.events.next(new BeforeActivateRoutes());\n        }), activateRoutes(this.rootContexts, router.routeReuseStrategy, evt => this.events.next(evt), this.inputBindingEnabled),\n        // Ensure that if some observable used to drive the transition doesn't\n        // complete, the navigation still finalizes This should never happen, but\n        // this is done as a safety measure to avoid surfacing this error (#49567).\n        take(1), tap({\n          next: t => {\n            completed = true;\n            this.lastSuccessfulNavigation = this.currentNavigation;\n            this.events.next(new NavigationEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects)));\n            this.titleStrategy?.updateTitle(t.targetRouterState.snapshot);\n            t.resolve(true);\n          },\n          complete: () => {\n            completed = true;\n          }\n        }),\n        // There used to be a lot more logic happening directly within the\n        // transition Observable. Some of this logic has been refactored out to\n        // other places but there may still be errors that happen there. This gives\n        // us a way to cancel the transition from the outside. This may also be\n        // required in the future to support something like the abort signal of the\n        // Navigation API where the navigation gets aborted from outside the\n        // transition.\n        takeUntil(this.transitionAbortSubject.pipe(tap(err => {\n          throw err;\n        }))), finalize(() => {\n          /* When the navigation stream finishes either through error or success,\n           * we set the `completed` or `errored` flag. However, there are some\n           * situations where we could get here without either of those being set.\n           * For instance, a redirect during NavigationStart. Therefore, this is a\n           * catch-all to make sure the NavigationCancel event is fired when a\n           * navigation gets cancelled but not caught by other means. */\n          if (!completed && !errored) {\n            const cancelationReason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation ID ${overallTransitionState.id} is not equal to the current navigation id ${this.navigationId}` : '';\n            this.cancelNavigationTransition(overallTransitionState, cancelationReason, NavigationCancellationCode.SupersededByNewNavigation);\n          }\n          // Only clear current navigation if it is still set to the one that\n          // finalized.\n          if (this.currentTransition?.id === overallTransitionState.id) {\n            this.currentNavigation = null;\n            this.currentTransition = null;\n          }\n        }), catchError(e => {\n          // If the application is already destroyed, the catch block should not\n          // execute anything in practice because other resources have already\n          // been released and destroyed.\n          if (this.destroyed) {\n            overallTransitionState.resolve(false);\n            return EMPTY;\n          }\n          errored = true;\n          /* This error type is issued during Redirect, and is handled as a\n           * cancellation rather than an error. */\n          if (isNavigationCancelingError(e)) {\n            this.events.next(new NavigationCancel(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), e.message, e.cancellationCode));\n            // When redirecting, we need to delay resolving the navigation\n            // promise and push it to the redirect navigation\n            if (!isRedirectingNavigationCancelingError(e)) {\n              overallTransitionState.resolve(false);\n            } else {\n              this.events.next(new RedirectRequest(e.url, e.navigationBehaviorOptions));\n            }\n            /* All other errors should reset to the router's internal URL reference\n             * to the pre-error state. */\n          } else {\n            const navigationError = new NavigationError(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), e, overallTransitionState.targetSnapshot ?? undefined);\n            try {\n              const navigationErrorHandlerResult = runInInjectionContext(this.environmentInjector, () => this.navigationErrorHandler?.(navigationError));\n              if (navigationErrorHandlerResult instanceof RedirectCommand) {\n                const {\n                  message,\n                  cancellationCode\n                } = redirectingNavigationError(this.urlSerializer, navigationErrorHandlerResult);\n                this.events.next(new NavigationCancel(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), message, cancellationCode));\n                this.events.next(new RedirectRequest(navigationErrorHandlerResult.redirectTo, navigationErrorHandlerResult.navigationBehaviorOptions));\n              } else {\n                this.events.next(navigationError);\n                throw e;\n              }\n            } catch (ee) {\n              // TODO(atscott): consider flipping the default behavior of\n              // resolveNavigationPromiseOnError to be `resolve(false)` when\n              // undefined. This is the most sane thing to do given that\n              // applications very rarely handle the promise rejection and, as a\n              // result, would get \"unhandled promise rejection\" console logs.\n              // The vast majority of applications would not be affected by this\n              // change so omitting a migration seems reasonable. Instead,\n              // applications that rely on rejection can specifically opt-in to the\n              // old behavior.\n              if (this.options.resolveNavigationPromiseOnError) {\n                overallTransitionState.resolve(false);\n              } else {\n                overallTransitionState.reject(ee);\n              }\n            }\n          }\n          return EMPTY;\n        }));\n        // casting because `pipe` returns observable({}) when called with 8+ arguments\n      }));\n    }\n    cancelNavigationTransition(t, reason, code) {\n      const navCancel = new NavigationCancel(t.id, this.urlSerializer.serialize(t.extractedUrl), reason, code);\n      this.events.next(navCancel);\n      t.resolve(false);\n    }\n    /**\n     * @returns Whether we're navigating to somewhere that is not what the Router is\n     * currently set to.\n     */\n    isUpdatingInternalState() {\n      // TODO(atscott): The serializer should likely be used instead of\n      // `UrlTree.toString()`. Custom serializers are often written to handle\n      // things better than the default one (objects, for example will be\n      // [Object object] with the custom serializer and be \"the same\" when they\n      // aren't).\n      // (Same for isUpdatedBrowserUrl)\n      return this.currentTransition?.extractedUrl.toString() !== this.currentTransition?.currentUrlTree.toString();\n    }\n    /**\n     * @returns Whether we're updating the browser URL to something new (navigation is going\n     * to somewhere not displayed in the URL bar and we will update the URL\n     * bar if navigation succeeds).\n     */\n    isUpdatedBrowserUrl() {\n      // The extracted URL is the part of the URL that this application cares about. `extract` may\n      // return only part of the browser URL and that part may have not changed even if some other\n      // portion of the URL did.\n      const currentBrowserUrl = this.urlHandlingStrategy.extract(this.urlSerializer.parse(this.location.path(true)));\n      const targetBrowserUrl = this.currentNavigation?.targetBrowserUrl ?? this.currentNavigation?.extractedUrl;\n      return currentBrowserUrl.toString() !== targetBrowserUrl?.toString() && !this.currentNavigation?.extras.skipLocationChange;\n    }\n    static ɵfac = function NavigationTransitions_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NavigationTransitions)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NavigationTransitions,\n      factory: NavigationTransitions.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NavigationTransitions;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isBrowserTriggeredNavigation(source) {\n  return source !== IMPERATIVE_NAVIGATION;\n}\n\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @publicApi\n */\nlet RouteReuseStrategy = /*#__PURE__*/(() => {\n  class RouteReuseStrategy {\n    static ɵfac = function RouteReuseStrategy_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RouteReuseStrategy)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RouteReuseStrategy,\n      factory: () => (() => inject(DefaultRouteReuseStrategy))(),\n      providedIn: 'root'\n    });\n  }\n  return RouteReuseStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n *\n * This base route reuse strategy only reuses routes when the matched router configs are\n * identical. This prevents components from being destroyed and recreated\n * when just the route parameters, query parameters or fragment change\n * (that is, the existing component is _reused_).\n *\n * This strategy does not store any routes for later reuse.\n *\n * Angular uses this strategy by default.\n *\n *\n * It can be used as a base class for custom route reuse strategies, i.e. you can create your own\n * class that extends the `BaseRouteReuseStrategy` one.\n * @publicApi\n */\nclass BaseRouteReuseStrategy {\n  /**\n   * Whether the given route should detach for later reuse.\n   * Always returns false for `BaseRouteReuseStrategy`.\n   * */\n  shouldDetach(route) {\n    return false;\n  }\n  /**\n   * A no-op; the route is never stored since this strategy never detaches routes for later re-use.\n   */\n  store(route, detachedTree) {}\n  /** Returns `false`, meaning the route (and its subtree) is never reattached */\n  shouldAttach(route) {\n    return false;\n  }\n  /** Returns `null` because this strategy does not store routes for later re-use. */\n  retrieve(route) {\n    return null;\n  }\n  /**\n   * Determines if a route should be reused.\n   * This strategy returns `true` when the future route config and current route config are\n   * identical.\n   */\n  shouldReuseRoute(future, curr) {\n    return future.routeConfig === curr.routeConfig;\n  }\n}\nlet DefaultRouteReuseStrategy = /*#__PURE__*/(() => {\n  class DefaultRouteReuseStrategy extends BaseRouteReuseStrategy {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵDefaultRouteReuseStrategy_BaseFactory;\n      return function DefaultRouteReuseStrategy_Factory(__ngFactoryType__) {\n        return (ɵDefaultRouteReuseStrategy_BaseFactory || (ɵDefaultRouteReuseStrategy_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultRouteReuseStrategy)))(__ngFactoryType__ || DefaultRouteReuseStrategy);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: DefaultRouteReuseStrategy,\n      factory: DefaultRouteReuseStrategy.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DefaultRouteReuseStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StateManager = /*#__PURE__*/(() => {\n  class StateManager {\n    urlSerializer = inject(UrlSerializer);\n    options = inject(ROUTER_CONFIGURATION, {\n      optional: true\n    }) || {};\n    canceledNavigationResolution = this.options.canceledNavigationResolution || 'replace';\n    location = inject(Location);\n    urlHandlingStrategy = inject(UrlHandlingStrategy);\n    urlUpdateStrategy = this.options.urlUpdateStrategy || 'deferred';\n    currentUrlTree = new UrlTree();\n    /**\n     * Returns the currently activated `UrlTree`.\n     *\n     * This `UrlTree` shows only URLs that the `Router` is configured to handle (through\n     * `UrlHandlingStrategy`).\n     *\n     * The value is set after finding the route config tree to activate but before activating the\n     * route.\n     */\n    getCurrentUrlTree() {\n      return this.currentUrlTree;\n    }\n    rawUrlTree = this.currentUrlTree;\n    /**\n     * Returns a `UrlTree` that is represents what the browser is actually showing.\n     *\n     * In the life of a navigation transition:\n     * 1. When a navigation begins, the raw `UrlTree` is updated to the full URL that's being\n     * navigated to.\n     * 2. During a navigation, redirects are applied, which might only apply to _part_ of the URL (due\n     * to `UrlHandlingStrategy`).\n     * 3. Just before activation, the raw `UrlTree` is updated to include the redirects on top of the\n     * original raw URL.\n     *\n     * Note that this is _only_ here to support `UrlHandlingStrategy.extract` and\n     * `UrlHandlingStrategy.shouldProcessUrl`. Without those APIs, the current `UrlTree` would not\n     * deviated from the raw `UrlTree`.\n     *\n     * For `extract`, a raw `UrlTree` is needed because `extract` may only return part\n     * of the navigation URL. Thus, the current `UrlTree` may only represent _part_ of the browser\n     * URL. When a navigation gets cancelled and the router needs to reset the URL or a new navigation\n     * occurs, it needs to know the _whole_ browser URL, not just the part handled by\n     * `UrlHandlingStrategy`.\n     * For `shouldProcessUrl`, when the return is `false`, the router ignores the navigation but\n     * still updates the raw `UrlTree` with the assumption that the navigation was caused by the\n     * location change listener due to a URL update by the AngularJS router. In this case, the router\n     * still need to know what the browser's URL is for future navigations.\n     */\n    getRawUrlTree() {\n      return this.rawUrlTree;\n    }\n    createBrowserPath({\n      finalUrl,\n      initialUrl,\n      targetBrowserUrl\n    }) {\n      const rawUrl = finalUrl !== undefined ? this.urlHandlingStrategy.merge(finalUrl, initialUrl) : initialUrl;\n      const url = targetBrowserUrl ?? rawUrl;\n      const path = url instanceof UrlTree ? this.urlSerializer.serialize(url) : url;\n      return path;\n    }\n    commitTransition({\n      targetRouterState,\n      finalUrl,\n      initialUrl\n    }) {\n      // If we are committing the transition after having a final URL and target state, we're updating\n      // all pieces of the state. Otherwise, we likely skipped the transition (due to URL handling strategy)\n      // and only want to update the rawUrlTree, which represents the browser URL (and doesn't necessarily match router state).\n      if (finalUrl && targetRouterState) {\n        this.currentUrlTree = finalUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(finalUrl, initialUrl);\n        this.routerState = targetRouterState;\n      } else {\n        this.rawUrlTree = initialUrl;\n      }\n    }\n    routerState = createEmptyState(null);\n    /** Returns the current RouterState. */\n    getRouterState() {\n      return this.routerState;\n    }\n    stateMemento = this.createStateMemento();\n    updateStateMemento() {\n      this.stateMemento = this.createStateMemento();\n    }\n    createStateMemento() {\n      return {\n        rawUrlTree: this.rawUrlTree,\n        currentUrlTree: this.currentUrlTree,\n        routerState: this.routerState\n      };\n    }\n    resetInternalState({\n      finalUrl\n    }) {\n      this.routerState = this.stateMemento.routerState;\n      this.currentUrlTree = this.stateMemento.currentUrlTree;\n      // Note here that we use the urlHandlingStrategy to get the reset `rawUrlTree` because it may be\n      // configured to handle only part of the navigation URL. This means we would only want to reset\n      // the part of the navigation handled by the Angular router rather than the whole URL. In\n      // addition, the URLHandlingStrategy may be configured to specifically preserve parts of the URL\n      // when merging, such as the query params so they are not lost on a refresh.\n      this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, finalUrl ?? this.rawUrlTree);\n    }\n    static ɵfac = function StateManager_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || StateManager)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: StateManager,\n      factory: () => (() => inject(HistoryStateManager))(),\n      providedIn: 'root'\n    });\n  }\n  return StateManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet HistoryStateManager = /*#__PURE__*/(() => {\n  class HistoryStateManager extends StateManager {\n    /**\n     * The id of the currently active page in the router.\n     * Updated to the transition's target id on a successful navigation.\n     *\n     * This is used to track what page the router last activated. When an attempted navigation fails,\n     * the router can then use this to compute how to restore the state back to the previously active\n     * page.\n     */\n    currentPageId = 0;\n    lastSuccessfulId = -1;\n    restoredState() {\n      return this.location.getState();\n    }\n    /**\n     * The ɵrouterPageId of whatever page is currently active in the browser history. This is\n     * important for computing the target page id for new navigations because we need to ensure each\n     * page id in the browser history is 1 more than the previous entry.\n     */\n    get browserPageId() {\n      if (this.canceledNavigationResolution !== 'computed') {\n        return this.currentPageId;\n      }\n      return this.restoredState()?.ɵrouterPageId ?? this.currentPageId;\n    }\n    registerNonRouterCurrentEntryChangeListener(listener) {\n      return this.location.subscribe(event => {\n        if (event['type'] === 'popstate') {\n          // The `setTimeout` was added in #12160 and is likely to support Angular/AngularJS\n          // hybrid apps.\n          setTimeout(() => {\n            listener(event['url'], event.state, 'popstate');\n          });\n        }\n      });\n    }\n    handleRouterEvent(e, currentTransition) {\n      if (e instanceof NavigationStart) {\n        this.updateStateMemento();\n      } else if (e instanceof NavigationSkipped) {\n        this.commitTransition(currentTransition);\n      } else if (e instanceof RoutesRecognized) {\n        if (this.urlUpdateStrategy === 'eager') {\n          if (!currentTransition.extras.skipLocationChange) {\n            this.setBrowserUrl(this.createBrowserPath(currentTransition), currentTransition);\n          }\n        }\n      } else if (e instanceof BeforeActivateRoutes) {\n        this.commitTransition(currentTransition);\n        if (this.urlUpdateStrategy === 'deferred' && !currentTransition.extras.skipLocationChange) {\n          this.setBrowserUrl(this.createBrowserPath(currentTransition), currentTransition);\n        }\n      } else if (e instanceof NavigationCancel && (e.code === NavigationCancellationCode.GuardRejected || e.code === NavigationCancellationCode.NoDataFromResolver)) {\n        this.restoreHistory(currentTransition);\n      } else if (e instanceof NavigationError) {\n        this.restoreHistory(currentTransition, true);\n      } else if (e instanceof NavigationEnd) {\n        this.lastSuccessfulId = e.id;\n        this.currentPageId = this.browserPageId;\n      }\n    }\n    setBrowserUrl(path, {\n      extras,\n      id\n    }) {\n      const {\n        replaceUrl,\n        state\n      } = extras;\n      if (this.location.isCurrentPathEqualTo(path) || !!replaceUrl) {\n        // replacements do not update the target page\n        const currentBrowserPageId = this.browserPageId;\n        const newState = {\n          ...state,\n          ...this.generateNgRouterState(id, currentBrowserPageId)\n        };\n        this.location.replaceState(path, '', newState);\n      } else {\n        const newState = {\n          ...state,\n          ...this.generateNgRouterState(id, this.browserPageId + 1)\n        };\n        this.location.go(path, '', newState);\n      }\n    }\n    /**\n     * Performs the necessary rollback action to restore the browser URL to the\n     * state before the transition.\n     */\n    restoreHistory(navigation, restoringFromCaughtError = false) {\n      if (this.canceledNavigationResolution === 'computed') {\n        const currentBrowserPageId = this.browserPageId;\n        const targetPagePosition = this.currentPageId - currentBrowserPageId;\n        if (targetPagePosition !== 0) {\n          this.location.historyGo(targetPagePosition);\n        } else if (this.getCurrentUrlTree() === navigation.finalUrl && targetPagePosition === 0) {\n          // We got to the activation stage (where currentUrlTree is set to the navigation's\n          // finalUrl), but we weren't moving anywhere in history (skipLocationChange or replaceUrl).\n          // We still need to reset the router state back to what it was when the navigation started.\n          this.resetInternalState(navigation);\n          this.resetUrlToCurrentUrlTree();\n        } else ;\n      } else if (this.canceledNavigationResolution === 'replace') {\n        // TODO(atscott): It seems like we should _always_ reset the state here. It would be a no-op\n        // for `deferred` navigations that haven't change the internal state yet because guards\n        // reject. For 'eager' navigations, it seems like we also really should reset the state\n        // because the navigation was cancelled. Investigate if this can be done by running TGP.\n        if (restoringFromCaughtError) {\n          this.resetInternalState(navigation);\n        }\n        this.resetUrlToCurrentUrlTree();\n      }\n    }\n    resetUrlToCurrentUrlTree() {\n      this.location.replaceState(this.urlSerializer.serialize(this.getRawUrlTree()), '', this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId));\n    }\n    generateNgRouterState(navigationId, routerPageId) {\n      if (this.canceledNavigationResolution === 'computed') {\n        return {\n          navigationId,\n          ɵrouterPageId: routerPageId\n        };\n      }\n      return {\n        navigationId\n      };\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵHistoryStateManager_BaseFactory;\n      return function HistoryStateManager_Factory(__ngFactoryType__) {\n        return (ɵHistoryStateManager_BaseFactory || (ɵHistoryStateManager_BaseFactory = i0.ɵɵgetInheritedFactory(HistoryStateManager)))(__ngFactoryType__ || HistoryStateManager);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: HistoryStateManager,\n      factory: HistoryStateManager.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return HistoryStateManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Performs the given action once the router finishes its next/current navigation.\n *\n * The navigation is considered complete under the following conditions:\n * - `NavigationCancel` event emits and the code is not `NavigationCancellationCode.Redirect` or\n * `NavigationCancellationCode.SupersededByNewNavigation`. In these cases, the\n * redirecting/superseding navigation must finish.\n * - `NavigationError`, `NavigationEnd`, or `NavigationSkipped` event emits\n */\nfunction afterNextNavigation(router, action) {\n  router.events.pipe(filter(e => e instanceof NavigationEnd || e instanceof NavigationCancel || e instanceof NavigationError || e instanceof NavigationSkipped), map(e => {\n    if (e instanceof NavigationEnd || e instanceof NavigationSkipped) {\n      return 0 /* NavigationResult.COMPLETE */;\n    }\n    const redirecting = e instanceof NavigationCancel ? e.code === NavigationCancellationCode.Redirect || e.code === NavigationCancellationCode.SupersededByNewNavigation : false;\n    return redirecting ? 2 /* NavigationResult.REDIRECTING */ : 1 /* NavigationResult.FAILED */;\n  }), filter(result => result !== 2 /* NavigationResult.REDIRECTING */), take(1)).subscribe(() => {\n    action();\n  });\n}\n\n/**\n * The equivalent `IsActiveMatchOptions` options for `Router.isActive` is called with `true`\n * (exact = true).\n */\nconst exactMatchOptions = {\n  paths: 'exact',\n  fragment: 'ignored',\n  matrixParams: 'ignored',\n  queryParams: 'exact'\n};\n/**\n * The equivalent `IsActiveMatchOptions` options for `Router.isActive` is called with `false`\n * (exact = false).\n */\nconst subsetMatchOptions = {\n  paths: 'subset',\n  fragment: 'ignored',\n  matrixParams: 'ignored',\n  queryParams: 'subset'\n};\n/**\n * @description\n *\n * A service that facilitates navigation among views and URL manipulation capabilities.\n * This service is provided in the root scope and configured with [provideRouter](api/router/provideRouter).\n *\n * @see {@link Route}\n * @see {@link provideRouter}\n * @see [Routing and Navigation Guide](guide/routing/common-router-tasks).\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet Router = /*#__PURE__*/(() => {\n  class Router {\n    get currentUrlTree() {\n      return this.stateManager.getCurrentUrlTree();\n    }\n    get rawUrlTree() {\n      return this.stateManager.getRawUrlTree();\n    }\n    disposed = false;\n    nonRouterCurrentEntryChangeSubscription;\n    console = inject(_Console);\n    stateManager = inject(StateManager);\n    options = inject(ROUTER_CONFIGURATION, {\n      optional: true\n    }) || {};\n    pendingTasks = inject(_PendingTasksInternal);\n    urlUpdateStrategy = this.options.urlUpdateStrategy || 'deferred';\n    navigationTransitions = inject(NavigationTransitions);\n    urlSerializer = inject(UrlSerializer);\n    location = inject(Location);\n    urlHandlingStrategy = inject(UrlHandlingStrategy);\n    /**\n     * The private `Subject` type for the public events exposed in the getter. This is used internally\n     * to push events to. The separate field allows us to expose separate types in the public API\n     * (i.e., an Observable rather than the Subject).\n     */\n    _events = new Subject();\n    /**\n     * An event stream for routing events.\n     */\n    get events() {\n      // TODO(atscott): This _should_ be events.asObservable(). However, this change requires internal\n      // cleanup: tests are doing `(route.events as Subject<Event>).next(...)`. This isn't\n      // allowed/supported but we still have to fix these or file bugs against the teams before making\n      // the change.\n      return this._events;\n    }\n    /**\n     * The current state of routing in this NgModule.\n     */\n    get routerState() {\n      return this.stateManager.getRouterState();\n    }\n    /**\n     * True if at least one navigation event has occurred,\n     * false otherwise.\n     */\n    navigated = false;\n    /**\n     * A strategy for re-using routes.\n     *\n     * @deprecated Configure using `providers` instead:\n     *   `{provide: RouteReuseStrategy, useClass: MyStrategy}`.\n     */\n    routeReuseStrategy = inject(RouteReuseStrategy);\n    /**\n     * How to handle a navigation request to the current URL.\n     *\n     *\n     * @deprecated Configure this through `provideRouter` or `RouterModule.forRoot` instead.\n     * @see {@link withRouterConfig}\n     * @see {@link provideRouter}\n     * @see {@link RouterModule}\n     */\n    onSameUrlNavigation = this.options.onSameUrlNavigation || 'ignore';\n    config = inject(ROUTES, {\n      optional: true\n    })?.flat() ?? [];\n    /**\n     * Indicates whether the application has opted in to binding Router data to component inputs.\n     *\n     * This option is enabled by the `withComponentInputBinding` feature of `provideRouter` or\n     * `bindToComponentInputs` in the `ExtraOptions` of `RouterModule.forRoot`.\n     */\n    componentInputBindingEnabled = !!inject(INPUT_BINDER, {\n      optional: true\n    });\n    constructor() {\n      this.resetConfig(this.config);\n      this.navigationTransitions.setupNavigations(this).subscribe({\n        error: e => {\n          this.console.warn(ngDevMode ? `Unhandled Navigation Error: ${e}` : e);\n        }\n      });\n      this.subscribeToNavigationEvents();\n    }\n    eventsSubscription = new Subscription();\n    subscribeToNavigationEvents() {\n      const subscription = this.navigationTransitions.events.subscribe(e => {\n        try {\n          const currentTransition = this.navigationTransitions.currentTransition;\n          const currentNavigation = this.navigationTransitions.currentNavigation;\n          if (currentTransition !== null && currentNavigation !== null) {\n            this.stateManager.handleRouterEvent(e, currentNavigation);\n            if (e instanceof NavigationCancel && e.code !== NavigationCancellationCode.Redirect && e.code !== NavigationCancellationCode.SupersededByNewNavigation) {\n              // It seems weird that `navigated` is set to `true` when the navigation is rejected,\n              // however it's how things were written initially. Investigation would need to be done\n              // to determine if this can be removed.\n              this.navigated = true;\n            } else if (e instanceof NavigationEnd) {\n              this.navigated = true;\n            } else if (e instanceof RedirectRequest) {\n              const opts = e.navigationBehaviorOptions;\n              const mergedTree = this.urlHandlingStrategy.merge(e.url, currentTransition.currentRawUrl);\n              const extras = {\n                browserUrl: currentTransition.extras.browserUrl,\n                info: currentTransition.extras.info,\n                skipLocationChange: currentTransition.extras.skipLocationChange,\n                // The URL is already updated at this point if we have 'eager' URL\n                // updates or if the navigation was triggered by the browser (back\n                // button, URL bar, etc). We want to replace that item in history\n                // if the navigation is rejected.\n                replaceUrl: currentTransition.extras.replaceUrl || this.urlUpdateStrategy === 'eager' || isBrowserTriggeredNavigation(currentTransition.source),\n                // allow developer to override default options with RedirectCommand\n                ...opts\n              };\n              this.scheduleNavigation(mergedTree, IMPERATIVE_NAVIGATION, null, extras, {\n                resolve: currentTransition.resolve,\n                reject: currentTransition.reject,\n                promise: currentTransition.promise\n              });\n            }\n          }\n          // Note that it's important to have the Router process the events _before_ the event is\n          // pushed through the public observable. This ensures the correct router state is in place\n          // before applications observe the events.\n          if (isPublicRouterEvent(e)) {\n            this._events.next(e);\n          }\n        } catch (e) {\n          this.navigationTransitions.transitionAbortSubject.next(e);\n        }\n      });\n      this.eventsSubscription.add(subscription);\n    }\n    /** @internal */\n    resetRootComponentType(rootComponentType) {\n      // TODO: vsavkin router 4.0 should make the root component set to null\n      // this will simplify the lifecycle of the router.\n      this.routerState.root.component = rootComponentType;\n      this.navigationTransitions.rootComponentType = rootComponentType;\n    }\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    initialNavigation() {\n      this.setUpLocationChangeListener();\n      if (!this.navigationTransitions.hasRequestedNavigation) {\n        this.navigateToSyncWithBrowser(this.location.path(true), IMPERATIVE_NAVIGATION, this.stateManager.restoredState());\n      }\n    }\n    /**\n     * Sets up the location change listener. This listener detects navigations triggered from outside\n     * the Router (the browser back/forward buttons, for example) and schedules a corresponding Router\n     * navigation so that the correct events, guards, etc. are triggered.\n     */\n    setUpLocationChangeListener() {\n      // Don't need to use Zone.wrap any more, because zone.js\n      // already patch onPopState, so location change callback will\n      // run into ngZone\n      this.nonRouterCurrentEntryChangeSubscription ??= this.stateManager.registerNonRouterCurrentEntryChangeListener((url, state, source) => {\n        this.navigateToSyncWithBrowser(url, source, state);\n      });\n    }\n    /**\n     * Schedules a router navigation to synchronize Router state with the browser state.\n     *\n     * This is done as a response to a popstate event and the initial navigation. These\n     * two scenarios represent times when the browser URL/state has been updated and\n     * the Router needs to respond to ensure its internal state matches.\n     */\n    navigateToSyncWithBrowser(url, source, state) {\n      const extras = {\n        replaceUrl: true\n      };\n      // TODO: restoredState should always include the entire state, regardless\n      // of navigationId. This requires a breaking change to update the type on\n      // NavigationStart’s restoredState, which currently requires navigationId\n      // to always be present. The Router used to only restore history state if\n      // a navigationId was present.\n      // The stored navigationId is used by the RouterScroller to retrieve the scroll\n      // position for the page.\n      const restoredState = state?.navigationId ? state : null;\n      // Separate to NavigationStart.restoredState, we must also restore the state to\n      // history.state and generate a new navigationId, since it will be overwritten\n      if (state) {\n        const stateCopy = {\n          ...state\n        };\n        delete stateCopy.navigationId;\n        delete stateCopy.ɵrouterPageId;\n        if (Object.keys(stateCopy).length !== 0) {\n          extras.state = stateCopy;\n        }\n      }\n      const urlTree = this.parseUrl(url);\n      this.scheduleNavigation(urlTree, source, restoredState, extras);\n    }\n    /** The current URL. */\n    get url() {\n      return this.serializeUrl(this.currentUrlTree);\n    }\n    /**\n     * Returns the current `Navigation` object when the router is navigating,\n     * and `null` when idle.\n     */\n    getCurrentNavigation() {\n      return this.navigationTransitions.currentNavigation;\n    }\n    /**\n     * The `Navigation` object of the most recent navigation to succeed and `null` if there\n     *     has not been a successful navigation yet.\n     */\n    get lastSuccessfulNavigation() {\n      return this.navigationTransitions.lastSuccessfulNavigation;\n    }\n    /**\n     * Resets the route configuration used for navigation and generating links.\n     *\n     * @param config The route array for the new configuration.\n     *\n     * @usageNotes\n     *\n     * ```ts\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    resetConfig(config) {\n      (typeof ngDevMode === 'undefined' || ngDevMode) && validateConfig(config);\n      this.config = config.map(standardizeConfig);\n      this.navigated = false;\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.dispose();\n    }\n    /** Disposes of the router. */\n    dispose() {\n      // We call `unsubscribe()` to release observers, as users may forget to\n      // unsubscribe manually when subscribing to `router.events`. We do not call\n      // `complete()` because it is unsafe; if someone subscribes using the `first`\n      // operator and the observable completes before emitting a value,\n      // RxJS will throw an error.\n      this._events.unsubscribe();\n      this.navigationTransitions.complete();\n      if (this.nonRouterCurrentEntryChangeSubscription) {\n        this.nonRouterCurrentEntryChangeSubscription.unsubscribe();\n        this.nonRouterCurrentEntryChangeSubscription = undefined;\n      }\n      this.disposed = true;\n      this.eventsSubscription.unsubscribe();\n    }\n    /**\n     * Appends URL segments to the current URL tree to create a new URL tree.\n     *\n     * @param commands An array of URL fragments with which to construct the new URL tree.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL tree or the one provided  in the `relativeTo`\n     * property of the options object, if supplied.\n     * @param navigationExtras Options that control the navigation strategy.\n     * @returns The new URL tree.\n     *\n     * @usageNotes\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it,\n     * // you can do the following:\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     *\n     * Note that a value of `null` or `undefined` for `relativeTo` indicates that the\n     * tree should be created relative to the root.\n     * ```\n     */\n    createUrlTree(commands, navigationExtras = {}) {\n      const {\n        relativeTo,\n        queryParams,\n        fragment,\n        queryParamsHandling,\n        preserveFragment\n      } = navigationExtras;\n      const f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n      let q = null;\n      switch (queryParamsHandling ?? this.options.defaultQueryParamsHandling) {\n        case 'merge':\n          q = {\n            ...this.currentUrlTree.queryParams,\n            ...queryParams\n          };\n          break;\n        case 'preserve':\n          q = this.currentUrlTree.queryParams;\n          break;\n        default:\n          q = queryParams || null;\n      }\n      if (q !== null) {\n        q = this.removeEmptyProps(q);\n      }\n      let relativeToUrlSegmentGroup;\n      try {\n        const relativeToSnapshot = relativeTo ? relativeTo.snapshot : this.routerState.snapshot.root;\n        relativeToUrlSegmentGroup = createSegmentGroupFromRoute(relativeToSnapshot);\n      } catch (e) {\n        // This is strictly for backwards compatibility with tests that create\n        // invalid `ActivatedRoute` mocks.\n        // Note: the difference between having this fallback for invalid `ActivatedRoute` setups and\n        // just throwing is ~500 test failures. Fixing all of those tests by hand is not feasible at\n        // the moment.\n        if (typeof commands[0] !== 'string' || commands[0][0] !== '/') {\n          // Navigations that were absolute in the old way of creating UrlTrees\n          // would still work because they wouldn't attempt to match the\n          // segments in the `ActivatedRoute` to the `currentUrlTree` but\n          // instead just replace the root segment with the navigation result.\n          // Non-absolute navigations would fail to apply the commands because\n          // the logic could not find the segment to replace (so they'd act like there were no\n          // commands).\n          commands = [];\n        }\n        relativeToUrlSegmentGroup = this.currentUrlTree.root;\n      }\n      return createUrlTreeFromSegmentGroup(relativeToUrlSegmentGroup, commands, q, f ?? null);\n    }\n    /**\n     * Navigates to a view using an absolute route path.\n     *\n     * @param url An absolute path for a defined route. The function does not apply any delta to the\n     *     current URL.\n     * @param extras An object containing properties that modify the navigation strategy.\n     *\n     * @returns A Promise that resolves to 'true' when navigation succeeds,\n     * to 'false' when navigation fails, or is rejected on error.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to an absolute path.\n     *\n     * ```ts\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/routing/common-router-tasks)\n     *\n     */\n    navigateByUrl(url, extras = {\n      skipLocationChange: false\n    }) {\n      const urlTree = isUrlTree(url) ? url : this.parseUrl(url);\n      const mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n      return this.scheduleNavigation(mergedTree, IMPERATIVE_NAVIGATION, null, extras);\n    }\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * @param commands An array of URL fragments with which to construct the target URL.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL or the one provided  in the `relativeTo` property\n     * of the options object, if supplied.\n     * @param extras An options object that determines how the URL should be constructed or\n     *     interpreted.\n     *\n     * @returns A Promise that resolves to `true` when navigation succeeds, or `false` when navigation\n     *     fails. The Promise is rejected when an error occurs if `resolveNavigationPromiseOnError` is\n     * not `true`.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to a dynamic route path relative to the current URL.\n     *\n     * ```ts\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL, overriding the default behavior\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/routing/common-router-tasks)\n     *\n     */\n    navigate(commands, extras = {\n      skipLocationChange: false\n    }) {\n      validateCommands(commands);\n      return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    }\n    /** Serializes a `UrlTree` into a string */\n    serializeUrl(url) {\n      return this.urlSerializer.serialize(url);\n    }\n    /** Parses a string into a `UrlTree` */\n    parseUrl(url) {\n      try {\n        return this.urlSerializer.parse(url);\n      } catch {\n        return this.urlSerializer.parse('/');\n      }\n    }\n    isActive(url, matchOptions) {\n      let options;\n      if (matchOptions === true) {\n        options = {\n          ...exactMatchOptions\n        };\n      } else if (matchOptions === false) {\n        options = {\n          ...subsetMatchOptions\n        };\n      } else {\n        options = matchOptions;\n      }\n      if (isUrlTree(url)) {\n        return containsTree(this.currentUrlTree, url, options);\n      }\n      const urlTree = this.parseUrl(url);\n      return containsTree(this.currentUrlTree, urlTree, options);\n    }\n    removeEmptyProps(params) {\n      return Object.entries(params).reduce((result, [key, value]) => {\n        if (value !== null && value !== undefined) {\n          result[key] = value;\n        }\n        return result;\n      }, {});\n    }\n    scheduleNavigation(rawUrl, source, restoredState, extras, priorPromise) {\n      if (this.disposed) {\n        return Promise.resolve(false);\n      }\n      let resolve;\n      let reject;\n      let promise;\n      if (priorPromise) {\n        resolve = priorPromise.resolve;\n        reject = priorPromise.reject;\n        promise = priorPromise.promise;\n      } else {\n        promise = new Promise((res, rej) => {\n          resolve = res;\n          reject = rej;\n        });\n      }\n      // Indicate that the navigation is happening.\n      const taskId = this.pendingTasks.add();\n      afterNextNavigation(this, () => {\n        // Remove pending task in a microtask to allow for cancelled\n        // initial navigations and redirects within the same task.\n        queueMicrotask(() => this.pendingTasks.remove(taskId));\n      });\n      this.navigationTransitions.handleNavigationRequest({\n        source,\n        restoredState,\n        currentUrlTree: this.currentUrlTree,\n        currentRawUrl: this.currentUrlTree,\n        rawUrl,\n        extras,\n        resolve: resolve,\n        reject: reject,\n        promise,\n        currentSnapshot: this.routerState.snapshot,\n        currentRouterState: this.routerState\n      });\n      // Make sure that the error is propagated even though `processNavigations` catch\n      // handler does not rethrow\n      return promise.catch(e => {\n        return Promise.reject(e);\n      });\n    }\n    static ɵfac = function Router_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Router)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Router,\n      factory: Router.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return Router;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction validateCommands(commands) {\n  for (let i = 0; i < commands.length; i++) {\n    const cmd = commands[i];\n    if (cmd == null) {\n      throw new _RuntimeError(4008 /* RuntimeErrorCode.NULLISH_COMMAND */, (typeof ngDevMode === 'undefined' || ngDevMode) && `The requested path contains ${cmd} segment at index ${i}`);\n    }\n  }\n}\nfunction isPublicRouterEvent(e) {\n  return !(e instanceof BeforeActivateRoutes) && !(e instanceof RedirectRequest);\n}\nexport { ActivatedRoute, ActivatedRouteSnapshot, ActivationEnd, ActivationStart, BaseRouteReuseStrategy, CREATE_VIEW_TRANSITION, ChildActivationEnd, ChildActivationStart, ChildrenOutletContexts, DefaultTitleStrategy, DefaultUrlSerializer, EventType, GuardsCheckEnd, GuardsCheckStart, INPUT_BINDER, NAVIGATION_ERROR_HANDLER, NavigationCancel, NavigationCancellationCode, NavigationEnd, NavigationError, NavigationSkipped, NavigationSkippedCode, NavigationStart, NavigationTransitions, OutletContext, PRIMARY_OUTLET, ROUTER_CONFIGURATION, ROUTER_OUTLET_DATA, ROUTES, RedirectCommand, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouteReuseStrategy, RoutedComponentInputBinder, Router, RouterConfigLoader, RouterEvent, RouterOutlet, RouterState, RouterStateSnapshot, RoutesRecognized, Scroll, TitleStrategy, UrlHandlingStrategy, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VIEW_TRANSITION_OPTIONS, afterNextNavigation, convertToParamMap, createUrlTreeFromSnapshot, createViewTransition, defaultUrlMatcher, isUrlTree, loadChildren, stringifyEvent, ɵEmptyOutletComponent };\n","/**\n * @license Angular v19.2.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i3 from '@angular/common';\nimport { LOCATION_INITIALIZED, HashLocationStrategy, LocationStrategy, ViewportScroller, Location, PathLocationStrategy } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { ɵRuntimeError as _RuntimeError, ɵɵsanitizeUrlOrResourceUrl as __sanitizeUrlOrResourceUrl, booleanAttribute, HostListener, Input, HostBinding, Attribute, Directive, EventEmitter, Output, ContentChildren, Optional, createEnvironmentInjector, Injectable, InjectionToken, ɵperformanceMarkFeature as _performanceMarkFeature, makeEnvironmentProviders, APP_BOOTSTRAP_LISTENER, ENVIRONMENT_INITIALIZER, provideAppInitializer, inject, Injector, ApplicationRef, InjectFlags, NgZone, SkipSelf, NgModule } from '@angular/core';\nimport { NavigationEnd, isUrlTree, Router, ActivatedRoute, RouterConfigLoader, NavigationStart, NavigationSkipped, NavigationSkippedCode, Scroll, UrlSerializer, NavigationTransitions, ROUTES, afterNextNavigation, ROUTER_CONFIGURATION, NAVIGATION_ERROR_HANDLER, RoutedComponentInputBinder, INPUT_BINDER, createViewTransition, CREATE_VIEW_TRANSITION, VIEW_TRANSITION_OPTIONS, stringifyEvent, DefaultUrlSerializer, ChildrenOutletContexts, RouterOutlet, ɵEmptyOutletComponent as _EmptyOutletComponent } from './router-B-Y85L0c.mjs';\nimport { Subject, of, from } from 'rxjs';\nimport { mergeAll, catchError, filter, concatMap, mergeMap } from 'rxjs/operators';\n\n/**\n * @description\n *\n * When applied to an element in a template, makes that element a link\n * that initiates navigation to a route. Navigation opens one or more routed components\n * in one or more `<router-outlet>` locations on the page.\n *\n * Given a route configuration `[{ path: 'user/:name', component: UserCmp }]`,\n * the following creates a static link to the route:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * You can use dynamic values to generate the link.\n * For a dynamic link, pass an array of path segments,\n * followed by the params for each segment.\n * For example, `['/team', teamId, 'user', userName, {details: true}]`\n * generates a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one term and combined with dynamic segments.\n * For example, `['/team/11/user', userName, {details: true}]`\n *\n * The input that you provide to the link is treated as a delta to the current URL.\n * For instance, suppose the current URL is `/user/(box//aux:team)`.\n * The link `<a [routerLink]=\"['/user/jim']\">Jim</a>` creates the URL\n * `/user/(jim//aux:team)`.\n * See {@link Router#createUrlTree} for more information.\n *\n * @usageNotes\n *\n * You can use absolute or relative paths in a link, set query parameters,\n * control how parameters are handled, and keep a history of navigation states.\n *\n * ### Relative link paths\n *\n * The first segment name can be prepended with `/`, `./`, or `../`.\n * * If the first segment begins with `/`, the router looks up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router\n *   looks in the children of the current activated route.\n * * If the first segment begins with `../`, the router goes up one level in the route tree.\n *\n * ### Setting and handling query params and fragments\n *\n * The following link adds a query parameter and a fragment to the generated URL:\n *\n * ```html\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * By default, the directive constructs the new URL using the given query parameters.\n * The example generates the link: `/user/bob?debug=true#education`.\n *\n * You can instruct the directive to handle query parameters differently\n * by specifying the `queryParamsHandling` option in the link.\n * Allowed values are:\n *\n *  - `'merge'`: Merge the given `queryParams` into the current query params.\n *  - `'preserve'`: Preserve the current query params.\n *\n * For example:\n *\n * ```html\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * `queryParams`, `fragment`, `queryParamsHandling`, `preserveFragment`, and `relativeTo`\n * cannot be used when the `routerLink` input is a `UrlTree`.\n *\n * See {@link UrlCreationOptions#queryParamsHandling}.\n *\n * ### Preserving navigation history\n *\n * You can provide a `state` value to be persisted to the browser's\n * [`History.state` property](https://developer.mozilla.org/en-US/docs/Web/API/History#Properties).\n * For example:\n *\n * ```html\n * <a [routerLink]=\"['/user/bob']\" [state]=\"{tracingId: 123}\">\n *   link to user component\n * </a>\n * ```\n *\n * Use {@link Router#getCurrentNavigation} to retrieve a saved\n * navigation-state value. For example, to capture the `tracingId` during the `NavigationStart`\n * event:\n *\n * ```ts\n * // Get NavigationStart events\n * router.events.pipe(filter(e => e instanceof NavigationStart)).subscribe(e => {\n *   const navigation = router.getCurrentNavigation();\n *   tracingService.trace({id: navigation.extras.state.tracingId});\n * });\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet RouterLink = /*#__PURE__*/(() => {\n  class RouterLink {\n    router;\n    route;\n    tabIndexAttribute;\n    renderer;\n    el;\n    locationStrategy;\n    /**\n     * Represents an `href` attribute value applied to a host element,\n     * when a host element is `<a>`. For other tags, the value is `null`.\n     */\n    href = null;\n    /**\n     * Represents the `target` attribute on a host element.\n     * This is only used when the host element is an `<a>` tag.\n     */\n    target;\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * @see {@link UrlCreationOptions#queryParams}\n     * @see {@link Router#createUrlTree}\n     */\n    queryParams;\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * @see {@link UrlCreationOptions#fragment}\n     * @see {@link Router#createUrlTree}\n     */\n    fragment;\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * @see {@link UrlCreationOptions#queryParamsHandling}\n     * @see {@link Router#createUrlTree}\n     */\n    queryParamsHandling;\n    /**\n     * Passed to {@link Router#navigateByUrl} as part of the\n     * `NavigationBehaviorOptions`.\n     * @see {@link NavigationBehaviorOptions#state}\n     * @see {@link Router#navigateByUrl}\n     */\n    state;\n    /**\n     * Passed to {@link Router#navigateByUrl} as part of the\n     * `NavigationBehaviorOptions`.\n     * @see {@link NavigationBehaviorOptions#info}\n     * @see {@link Router#navigateByUrl}\n     */\n    info;\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * Specify a value here when you do not want to use the default value\n     * for `routerLink`, which is the current activated route.\n     * Note that a value of `undefined` here will use the `routerLink` default.\n     * @see {@link UrlCreationOptions#relativeTo}\n     * @see {@link Router#createUrlTree}\n     */\n    relativeTo;\n    /** Whether a host element is an `<a>` tag. */\n    isAnchorElement;\n    subscription;\n    /** @internal */\n    onChanges = new Subject();\n    constructor(router, route, tabIndexAttribute, renderer, el, locationStrategy) {\n      this.router = router;\n      this.route = route;\n      this.tabIndexAttribute = tabIndexAttribute;\n      this.renderer = renderer;\n      this.el = el;\n      this.locationStrategy = locationStrategy;\n      const tagName = el.nativeElement.tagName?.toLowerCase();\n      this.isAnchorElement = tagName === 'a' || tagName === 'area';\n      if (this.isAnchorElement) {\n        this.subscription = router.events.subscribe(s => {\n          if (s instanceof NavigationEnd) {\n            this.updateHref();\n          }\n        });\n      } else {\n        this.setTabIndexIfNotOnNativeEl('0');\n      }\n    }\n    /**\n     * Passed to {@link Router#createUrlTree} as part of the\n     * `UrlCreationOptions`.\n     * @see {@link UrlCreationOptions#preserveFragment}\n     * @see {@link Router#createUrlTree}\n     */\n    preserveFragment = false;\n    /**\n     * Passed to {@link Router#navigateByUrl} as part of the\n     * `NavigationBehaviorOptions`.\n     * @see {@link NavigationBehaviorOptions#skipLocationChange}\n     * @see {@link Router#navigateByUrl}\n     */\n    skipLocationChange = false;\n    /**\n     * Passed to {@link Router#navigateByUrl} as part of the\n     * `NavigationBehaviorOptions`.\n     * @see {@link NavigationBehaviorOptions#replaceUrl}\n     * @see {@link Router#navigateByUrl}\n     */\n    replaceUrl = false;\n    /**\n     * Modifies the tab index if there was not a tabindex attribute on the element during\n     * instantiation.\n     */\n    setTabIndexIfNotOnNativeEl(newTabIndex) {\n      if (this.tabIndexAttribute != null /* both `null` and `undefined` */ || this.isAnchorElement) {\n        return;\n      }\n      this.applyAttributeValue('tabindex', newTabIndex);\n    }\n    /** @nodoc */\n    // TODO(atscott): Remove changes parameter in major version as a breaking change.\n    ngOnChanges(changes) {\n      if (ngDevMode && isUrlTree(this.routerLinkInput) && (this.fragment !== undefined || this.queryParams || this.queryParamsHandling || this.preserveFragment || this.relativeTo)) {\n        throw new _RuntimeError(4016 /* RuntimeErrorCode.INVALID_ROUTER_LINK_INPUTS */, 'Cannot configure queryParams or fragment when using a UrlTree as the routerLink input value.');\n      }\n      if (this.isAnchorElement) {\n        this.updateHref();\n      }\n      // This is subscribed to by `RouterLinkActive` so that it knows to update when there are changes\n      // to the RouterLinks it's tracking.\n      this.onChanges.next(this);\n    }\n    routerLinkInput = null;\n    /**\n     * Commands to pass to {@link Router#createUrlTree} or a `UrlTree`.\n     *   - **array**: commands to pass to {@link Router#createUrlTree}.\n     *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`\n     *   - **UrlTree**: a `UrlTree` for this link rather than creating one from the commands\n     *     and other inputs that correspond to properties of `UrlCreationOptions`.\n     *   - **null|undefined**: effectively disables the `routerLink`\n     * @see {@link Router#createUrlTree}\n     */\n    set routerLink(commandsOrUrlTree) {\n      if (commandsOrUrlTree == null) {\n        this.routerLinkInput = null;\n        this.setTabIndexIfNotOnNativeEl(null);\n      } else {\n        if (isUrlTree(commandsOrUrlTree)) {\n          this.routerLinkInput = commandsOrUrlTree;\n        } else {\n          this.routerLinkInput = Array.isArray(commandsOrUrlTree) ? commandsOrUrlTree : [commandsOrUrlTree];\n        }\n        this.setTabIndexIfNotOnNativeEl('0');\n      }\n    }\n    /** @nodoc */\n    onClick(button, ctrlKey, shiftKey, altKey, metaKey) {\n      const urlTree = this.urlTree;\n      if (urlTree === null) {\n        return true;\n      }\n      if (this.isAnchorElement) {\n        if (button !== 0 || ctrlKey || shiftKey || altKey || metaKey) {\n          return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n          return true;\n        }\n      }\n      const extras = {\n        skipLocationChange: this.skipLocationChange,\n        replaceUrl: this.replaceUrl,\n        state: this.state,\n        info: this.info\n      };\n      this.router.navigateByUrl(urlTree, extras);\n      // Return `false` for `<a>` elements to prevent default action\n      // and cancel the native behavior, since the navigation is handled\n      // by the Router.\n      return !this.isAnchorElement;\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.subscription?.unsubscribe();\n    }\n    updateHref() {\n      const urlTree = this.urlTree;\n      this.href = urlTree !== null && this.locationStrategy ? this.locationStrategy?.prepareExternalUrl(this.router.serializeUrl(urlTree)) : null;\n      const sanitizedValue = this.href === null ? null :\n      // This class represents a directive that can be added to both `<a>` elements,\n      // as well as other elements. As a result, we can't define security context at\n      // compile time. So the security context is deferred to runtime.\n      // The `ɵɵsanitizeUrlOrResourceUrl` selects the necessary sanitizer function\n      // based on the tag and property names. The logic mimics the one from\n      // `packages/compiler/src/schema/dom_security_schema.ts`, which is used at compile time.\n      //\n      // Note: we should investigate whether we can switch to using `@HostBinding('attr.href')`\n      // instead of applying a value via a renderer, after a final merge of the\n      // `RouterLinkWithHref` directive.\n      __sanitizeUrlOrResourceUrl(this.href, this.el.nativeElement.tagName.toLowerCase(), 'href');\n      this.applyAttributeValue('href', sanitizedValue);\n    }\n    applyAttributeValue(attrName, attrValue) {\n      const renderer = this.renderer;\n      const nativeElement = this.el.nativeElement;\n      if (attrValue !== null) {\n        renderer.setAttribute(nativeElement, attrName, attrValue);\n      } else {\n        renderer.removeAttribute(nativeElement, attrName);\n      }\n    }\n    get urlTree() {\n      if (this.routerLinkInput === null) {\n        return null;\n      } else if (isUrlTree(this.routerLinkInput)) {\n        return this.routerLinkInput;\n      }\n      return this.router.createUrlTree(this.routerLinkInput, {\n        // If the `relativeTo` input is not defined, we want to use `this.route` by default.\n        // Otherwise, we should use the value provided by the user in the input.\n        relativeTo: this.relativeTo !== undefined ? this.relativeTo : this.route,\n        queryParams: this.queryParams,\n        fragment: this.fragment,\n        queryParamsHandling: this.queryParamsHandling,\n        preserveFragment: this.preserveFragment\n      });\n    }\n    static ɵfac = function RouterLink_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RouterLink)(i0.ɵɵdirectiveInject(Router), i0.ɵɵdirectiveInject(ActivatedRoute), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.LocationStrategy));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RouterLink,\n      selectors: [[\"\", \"routerLink\", \"\"]],\n      hostVars: 1,\n      hostBindings: function RouterLink_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function RouterLink_click_HostBindingHandler($event) {\n            return ctx.onClick($event.button, $event.ctrlKey, $event.shiftKey, $event.altKey, $event.metaKey);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"target\", ctx.target);\n        }\n      },\n      inputs: {\n        target: \"target\",\n        queryParams: \"queryParams\",\n        fragment: \"fragment\",\n        queryParamsHandling: \"queryParamsHandling\",\n        state: \"state\",\n        info: \"info\",\n        relativeTo: \"relativeTo\",\n        preserveFragment: [2, \"preserveFragment\", \"preserveFragment\", booleanAttribute],\n        skipLocationChange: [2, \"skipLocationChange\", \"skipLocationChange\", booleanAttribute],\n        replaceUrl: [2, \"replaceUrl\", \"replaceUrl\", booleanAttribute],\n        routerLink: \"routerLink\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return RouterLink;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n *\n * @description\n *\n * Tracks whether the linked route of an element is currently active, and allows you\n * to specify one or more CSS classes to add to the element when the linked route\n * is active.\n *\n * Use this directive to create a visual distinction for elements associated with an active route.\n * For example, the following code highlights the word \"Bob\" when the router\n * activates the associated route:\n *\n * ```html\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * Whenever the URL is either '/user' or '/user/bob', the \"active-link\" class is\n * added to the anchor tag. If the URL changes, the class is removed.\n *\n * You can set more than one class using a space-separated string or an array.\n * For example:\n *\n * ```html\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * To add the classes only when the URL matches the link exactly, add the option `exact: true`:\n *\n * ```html\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * To directly check the `isActive` status of the link, assign the `RouterLinkActive`\n * instance to a template variable.\n * For example, the following checks the status without assigning any CSS classes:\n *\n * ```html\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * You can apply the `RouterLinkActive` directive to an ancestor of linked elements.\n * For example, the following sets the active-link class on the `<div>`  parent tag\n * when the URL is either '/user/jim' or '/user/bob'.\n *\n * ```html\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * The `RouterLinkActive` directive can also be used to set the aria-current attribute\n * to provide an alternative distinction for active elements to visually impaired users.\n *\n * For example, the following code adds the 'active' class to the Home Page link when it is\n * indeed active and in such case also sets its aria-current attribute to 'page':\n *\n * ```html\n * <a routerLink=\"/\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">Home Page</a>\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet RouterLinkActive = /*#__PURE__*/(() => {\n  class RouterLinkActive {\n    router;\n    element;\n    renderer;\n    cdr;\n    link;\n    links;\n    classes = [];\n    routerEventsSubscription;\n    linkInputChangesSubscription;\n    _isActive = false;\n    get isActive() {\n      return this._isActive;\n    }\n    /**\n     * Options to configure how to determine if the router link is active.\n     *\n     * These options are passed to the `Router.isActive()` function.\n     *\n     * @see {@link Router#isActive}\n     */\n    routerLinkActiveOptions = {\n      exact: false\n    };\n    /**\n     * Aria-current attribute to apply when the router link is active.\n     *\n     * Possible values: `'page'` | `'step'` | `'location'` | `'date'` | `'time'` | `true` | `false`.\n     *\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current}\n     */\n    ariaCurrentWhenActive;\n    /**\n     *\n     * You can use the output `isActiveChange` to get notified each time the link becomes\n     * active or inactive.\n     *\n     * Emits:\n     * true  -> Route is active\n     * false -> Route is inactive\n     *\n     * ```html\n     * <a\n     *  routerLink=\"/user/bob\"\n     *  routerLinkActive=\"active-link\"\n     *  (isActiveChange)=\"this.onRouterLinkActive($event)\">Bob</a>\n     * ```\n     */\n    isActiveChange = new EventEmitter();\n    constructor(router, element, renderer, cdr, link) {\n      this.router = router;\n      this.element = element;\n      this.renderer = renderer;\n      this.cdr = cdr;\n      this.link = link;\n      this.routerEventsSubscription = router.events.subscribe(s => {\n        if (s instanceof NavigationEnd) {\n          this.update();\n        }\n      });\n    }\n    /** @nodoc */\n    ngAfterContentInit() {\n      // `of(null)` is used to force subscribe body to execute once immediately (like `startWith`).\n      of(this.links.changes, of(null)).pipe(mergeAll()).subscribe(_ => {\n        this.update();\n        this.subscribeToEachLinkOnChanges();\n      });\n    }\n    subscribeToEachLinkOnChanges() {\n      this.linkInputChangesSubscription?.unsubscribe();\n      const allLinkChanges = [...this.links.toArray(), this.link].filter(link => !!link).map(link => link.onChanges);\n      this.linkInputChangesSubscription = from(allLinkChanges).pipe(mergeAll()).subscribe(link => {\n        if (this._isActive !== this.isLinkActive(this.router)(link)) {\n          this.update();\n        }\n      });\n    }\n    set routerLinkActive(data) {\n      const classes = Array.isArray(data) ? data : data.split(' ');\n      this.classes = classes.filter(c => !!c);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      this.update();\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.routerEventsSubscription.unsubscribe();\n      this.linkInputChangesSubscription?.unsubscribe();\n    }\n    update() {\n      if (!this.links || !this.router.navigated) return;\n      queueMicrotask(() => {\n        const hasActiveLinks = this.hasActiveLinks();\n        this.classes.forEach(c => {\n          if (hasActiveLinks) {\n            this.renderer.addClass(this.element.nativeElement, c);\n          } else {\n            this.renderer.removeClass(this.element.nativeElement, c);\n          }\n        });\n        if (hasActiveLinks && this.ariaCurrentWhenActive !== undefined) {\n          this.renderer.setAttribute(this.element.nativeElement, 'aria-current', this.ariaCurrentWhenActive.toString());\n        } else {\n          this.renderer.removeAttribute(this.element.nativeElement, 'aria-current');\n        }\n        // Only emit change if the active state changed.\n        if (this._isActive !== hasActiveLinks) {\n          this._isActive = hasActiveLinks;\n          this.cdr.markForCheck();\n          // Emit on isActiveChange after classes are updated\n          this.isActiveChange.emit(hasActiveLinks);\n        }\n      });\n    }\n    isLinkActive(router) {\n      const options = isActiveMatchOptions(this.routerLinkActiveOptions) ? this.routerLinkActiveOptions :\n      // While the types should disallow `undefined` here, it's possible without strict inputs\n      this.routerLinkActiveOptions.exact || false;\n      return link => {\n        const urlTree = link.urlTree;\n        return urlTree ? router.isActive(urlTree, options) : false;\n      };\n    }\n    hasActiveLinks() {\n      const isActiveCheckFn = this.isLinkActive(this.router);\n      return this.link && isActiveCheckFn(this.link) || this.links.some(isActiveCheckFn);\n    }\n    static ɵfac = function RouterLinkActive_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RouterLinkActive)(i0.ɵɵdirectiveInject(Router), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(RouterLink, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RouterLinkActive,\n      selectors: [[\"\", \"routerLinkActive\", \"\"]],\n      contentQueries: function RouterLinkActive_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, RouterLink, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.links = _t);\n        }\n      },\n      inputs: {\n        routerLinkActiveOptions: \"routerLinkActiveOptions\",\n        ariaCurrentWhenActive: \"ariaCurrentWhenActive\",\n        routerLinkActive: \"routerLinkActive\"\n      },\n      outputs: {\n        isActiveChange: \"isActiveChange\"\n      },\n      exportAs: [\"routerLinkActive\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return RouterLinkActive;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use instead of `'paths' in options` to be compatible with property renaming\n */\nfunction isActiveMatchOptions(options) {\n  return !!options.paths;\n}\n\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @publicApi\n */\nclass PreloadingStrategy {}\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```ts\n * RouterModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @publicApi\n */\nlet PreloadAllModules = /*#__PURE__*/(() => {\n  class PreloadAllModules {\n    preload(route, fn) {\n      return fn().pipe(catchError(() => of(null)));\n    }\n    static ɵfac = function PreloadAllModules_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PreloadAllModules)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: PreloadAllModules,\n      factory: PreloadAllModules.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return PreloadAllModules;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @publicApi\n */\nlet NoPreloading = /*#__PURE__*/(() => {\n  class NoPreloading {\n    preload(route, fn) {\n      return of(null);\n    }\n    static ɵfac = function NoPreloading_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NoPreloading)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NoPreloading,\n      factory: NoPreloading.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NoPreloading;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * @publicApi\n */\nlet RouterPreloader = /*#__PURE__*/(() => {\n  class RouterPreloader {\n    router;\n    injector;\n    preloadingStrategy;\n    loader;\n    subscription;\n    constructor(router, compiler, injector, preloadingStrategy, loader) {\n      this.router = router;\n      this.injector = injector;\n      this.preloadingStrategy = preloadingStrategy;\n      this.loader = loader;\n    }\n    setUpPreloading() {\n      this.subscription = this.router.events.pipe(filter(e => e instanceof NavigationEnd), concatMap(() => this.preload())).subscribe(() => {});\n    }\n    preload() {\n      return this.processRoutes(this.injector, this.router.config);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n    processRoutes(injector, routes) {\n      const res = [];\n      for (const route of routes) {\n        if (route.providers && !route._injector) {\n          route._injector = createEnvironmentInjector(route.providers, injector, `Route: ${route.path}`);\n        }\n        const injectorForCurrentRoute = route._injector ?? injector;\n        const injectorForChildren = route._loadedInjector ?? injectorForCurrentRoute;\n        // Note that `canLoad` is only checked as a condition that prevents `loadChildren` and not\n        // `loadComponent`. `canLoad` guards only block loading of child routes by design. This\n        // happens as a consequence of needing to descend into children for route matching immediately\n        // while component loading is deferred until route activation. Because `canLoad` guards can\n        // have side effects, we cannot execute them here so we instead skip preloading altogether\n        // when present. Lastly, it remains to be decided whether `canLoad` should behave this way\n        // at all. Code splitting and lazy loading is separate from client-side authorization checks\n        // and should not be used as a security measure to prevent loading of code.\n        if (route.loadChildren && !route._loadedRoutes && route.canLoad === undefined || route.loadComponent && !route._loadedComponent) {\n          res.push(this.preloadConfig(injectorForCurrentRoute, route));\n        }\n        if (route.children || route._loadedRoutes) {\n          res.push(this.processRoutes(injectorForChildren, route.children ?? route._loadedRoutes));\n        }\n      }\n      return from(res).pipe(mergeAll());\n    }\n    preloadConfig(injector, route) {\n      return this.preloadingStrategy.preload(route, () => {\n        let loadedChildren$;\n        if (route.loadChildren && route.canLoad === undefined) {\n          loadedChildren$ = this.loader.loadChildren(injector, route);\n        } else {\n          loadedChildren$ = of(null);\n        }\n        const recursiveLoadChildren$ = loadedChildren$.pipe(mergeMap(config => {\n          if (config === null) {\n            return of(void 0);\n          }\n          route._loadedRoutes = config.routes;\n          route._loadedInjector = config.injector;\n          // If the loaded config was a module, use that as the module/module injector going\n          // forward. Otherwise, continue using the current module/module injector.\n          return this.processRoutes(config.injector ?? injector, config.routes);\n        }));\n        if (route.loadComponent && !route._loadedComponent) {\n          const loadComponent$ = this.loader.loadComponent(route);\n          return from([recursiveLoadChildren$, loadComponent$]).pipe(mergeAll());\n        } else {\n          return recursiveLoadChildren$;\n        }\n      });\n    }\n    static ɵfac = function RouterPreloader_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RouterPreloader)(i0.ɵɵinject(Router), i0.ɵɵinject(i0.Compiler), i0.ɵɵinject(i0.EnvironmentInjector), i0.ɵɵinject(PreloadingStrategy), i0.ɵɵinject(RouterConfigLoader));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RouterPreloader,\n      factory: RouterPreloader.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return RouterPreloader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst ROUTER_SCROLLER = /*#__PURE__*/new InjectionToken('');\nlet RouterScroller = /*#__PURE__*/(() => {\n  class RouterScroller {\n    urlSerializer;\n    transitions;\n    viewportScroller;\n    zone;\n    options;\n    routerEventsSubscription;\n    scrollEventsSubscription;\n    lastId = 0;\n    lastSource = 'imperative';\n    restoredId = 0;\n    store = {};\n    /** @nodoc */\n    constructor(urlSerializer, transitions, viewportScroller, zone, options = {}) {\n      this.urlSerializer = urlSerializer;\n      this.transitions = transitions;\n      this.viewportScroller = viewportScroller;\n      this.zone = zone;\n      this.options = options;\n      // Default both options to 'disabled'\n      options.scrollPositionRestoration ||= 'disabled';\n      options.anchorScrolling ||= 'disabled';\n    }\n    init() {\n      // we want to disable the automatic scrolling because having two places\n      // responsible for scrolling results race conditions, especially given\n      // that browser don't implement this behavior consistently\n      if (this.options.scrollPositionRestoration !== 'disabled') {\n        this.viewportScroller.setHistoryScrollRestoration('manual');\n      }\n      this.routerEventsSubscription = this.createScrollEvents();\n      this.scrollEventsSubscription = this.consumeScrollEvents();\n    }\n    createScrollEvents() {\n      return this.transitions.events.subscribe(e => {\n        if (e instanceof NavigationStart) {\n          // store the scroll position of the current stable navigations.\n          this.store[this.lastId] = this.viewportScroller.getScrollPosition();\n          this.lastSource = e.navigationTrigger;\n          this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n        } else if (e instanceof NavigationEnd) {\n          this.lastId = e.id;\n          this.scheduleScrollEvent(e, this.urlSerializer.parse(e.urlAfterRedirects).fragment);\n        } else if (e instanceof NavigationSkipped && e.code === NavigationSkippedCode.IgnoredSameUrlNavigation) {\n          this.lastSource = undefined;\n          this.restoredId = 0;\n          this.scheduleScrollEvent(e, this.urlSerializer.parse(e.url).fragment);\n        }\n      });\n    }\n    consumeScrollEvents() {\n      return this.transitions.events.subscribe(e => {\n        if (!(e instanceof Scroll)) return;\n        // a popstate event. The pop state event will always ignore anchor scrolling.\n        if (e.position) {\n          if (this.options.scrollPositionRestoration === 'top') {\n            this.viewportScroller.scrollToPosition([0, 0]);\n          } else if (this.options.scrollPositionRestoration === 'enabled') {\n            this.viewportScroller.scrollToPosition(e.position);\n          }\n          // imperative navigation \"forward\"\n        } else {\n          if (e.anchor && this.options.anchorScrolling === 'enabled') {\n            this.viewportScroller.scrollToAnchor(e.anchor);\n          } else if (this.options.scrollPositionRestoration !== 'disabled') {\n            this.viewportScroller.scrollToPosition([0, 0]);\n          }\n        }\n      });\n    }\n    scheduleScrollEvent(routerEvent, anchor) {\n      this.zone.runOutsideAngular(() => {\n        // The scroll event needs to be delayed until after change detection. Otherwise, we may\n        // attempt to restore the scroll position before the router outlet has fully rendered the\n        // component by executing its update block of the template function.\n        setTimeout(() => {\n          this.zone.run(() => {\n            this.transitions.events.next(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n          });\n        }, 0);\n      });\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.routerEventsSubscription?.unsubscribe();\n      this.scrollEventsSubscription?.unsubscribe();\n    }\n    static ɵfac = function RouterScroller_Factory(__ngFactoryType__) {\n      i0.ɵɵinvalidFactory();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RouterScroller,\n      factory: RouterScroller.ɵfac\n    });\n  }\n  return RouterScroller;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Sets up providers necessary to enable `Router` functionality for the application.\n * Allows to configure a set of routes as well as extra features that should be enabled.\n *\n * @usageNotes\n *\n * Basic example of how you can add a Router to your application:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent, {\n *   providers: [provideRouter(appRoutes)]\n * });\n * ```\n *\n * You can also enable optional features in the Router by adding functions from the `RouterFeatures`\n * type:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes,\n *         withDebugTracing(),\n *         withRouterConfig({paramsInheritanceStrategy: 'always'}))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link RouterFeatures}\n *\n * @publicApi\n * @param routes A set of `Route`s to use for the application routing table.\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to setup a Router.\n */\nfunction provideRouter(routes, ...features) {\n  return makeEnvironmentProviders([{\n    provide: ROUTES,\n    multi: true,\n    useValue: routes\n  }, typeof ngDevMode === 'undefined' || ngDevMode ? {\n    provide: ROUTER_IS_PROVIDED,\n    useValue: true\n  } : [], {\n    provide: ActivatedRoute,\n    useFactory: rootRoute,\n    deps: [Router]\n  }, {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useFactory: getBootstrapListener\n  }, features.map(feature => feature.ɵproviders)]);\n}\nfunction rootRoute(router) {\n  return router.routerState.root;\n}\n/**\n * Helper function to create an object that represents a Router feature.\n */\nfunction routerFeature(kind, providers) {\n  return {\n    ɵkind: kind,\n    ɵproviders: providers\n  };\n}\n/**\n * An Injection token used to indicate whether `provideRouter` or `RouterModule.forRoot` was ever\n * called.\n */\nconst ROUTER_IS_PROVIDED = /*#__PURE__*/new InjectionToken('', {\n  providedIn: 'root',\n  factory: () => false\n});\nconst routerIsProvidedDevModeCheck = {\n  provide: ENVIRONMENT_INITIALIZER,\n  multi: true,\n  useFactory() {\n    return () => {\n      if (!inject(ROUTER_IS_PROVIDED)) {\n        console.warn('`provideRoutes` was called without `provideRouter` or `RouterModule.forRoot`. ' + 'This is likely a mistake.');\n      }\n    };\n  }\n};\n/**\n * Registers a DI provider for a set of routes.\n * @param routes The route configuration to provide.\n *\n * @usageNotes\n *\n * ```ts\n * @NgModule({\n *   providers: [provideRoutes(ROUTES)]\n * })\n * class LazyLoadedChildModule {}\n * ```\n *\n * @deprecated If necessary, provide routes using the `ROUTES` `InjectionToken`.\n * @see {@link ROUTES}\n * @publicApi\n */\nfunction provideRoutes(routes) {\n  return [{\n    provide: ROUTES,\n    multi: true,\n    useValue: routes\n  }, typeof ngDevMode === 'undefined' || ngDevMode ? routerIsProvidedDevModeCheck : []];\n}\n/**\n * Enables customizable scrolling behavior for router navigations.\n *\n * @usageNotes\n *\n * Basic example of how you can enable scrolling feature:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withInMemoryScrolling())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n * @see {@link ViewportScroller}\n *\n * @publicApi\n * @param options Set of configuration parameters to customize scrolling behavior, see\n *     `InMemoryScrollingOptions` for additional information.\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withInMemoryScrolling(options = {}) {\n  const providers = [{\n    provide: ROUTER_SCROLLER,\n    useFactory: () => {\n      const viewportScroller = inject(ViewportScroller);\n      const zone = inject(NgZone);\n      const transitions = inject(NavigationTransitions);\n      const urlSerializer = inject(UrlSerializer);\n      return new RouterScroller(urlSerializer, transitions, viewportScroller, zone, options);\n    }\n  }];\n  return routerFeature(4 /* RouterFeatureKind.InMemoryScrollingFeature */, providers);\n}\nfunction getBootstrapListener() {\n  const injector = inject(Injector);\n  return bootstrappedComponentRef => {\n    const ref = injector.get(ApplicationRef);\n    if (bootstrappedComponentRef !== ref.components[0]) {\n      return;\n    }\n    const router = injector.get(Router);\n    const bootstrapDone = injector.get(BOOTSTRAP_DONE);\n    if (injector.get(INITIAL_NAVIGATION) === 1 /* InitialNavigation.EnabledNonBlocking */) {\n      router.initialNavigation();\n    }\n    injector.get(ROUTER_PRELOADER, null, InjectFlags.Optional)?.setUpPreloading();\n    injector.get(ROUTER_SCROLLER, null, InjectFlags.Optional)?.init();\n    router.resetRootComponentType(ref.componentTypes[0]);\n    if (!bootstrapDone.closed) {\n      bootstrapDone.next();\n      bootstrapDone.complete();\n      bootstrapDone.unsubscribe();\n    }\n  };\n}\n/**\n * A subject used to indicate that the bootstrapping phase is done. When initial navigation is\n * `enabledBlocking`, the first navigation waits until bootstrapping is finished before continuing\n * to the activation phase.\n */\nconst BOOTSTRAP_DONE = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'bootstrap done indicator' : '', {\n  factory: () => {\n    return new Subject();\n  }\n});\nconst INITIAL_NAVIGATION = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'initial navigation' : '', {\n  providedIn: 'root',\n  factory: () => 1 /* InitialNavigation.EnabledNonBlocking */\n});\n/**\n * Configures initial navigation to start before the root component is created.\n *\n * The bootstrap is blocked until the initial navigation is complete. This should be set in case\n * you use [server-side rendering](guide/ssr), but do not enable [hydration](guide/hydration) for\n * your application.\n *\n * @usageNotes\n *\n * Basic example of how you can enable this navigation behavior:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withEnabledBlockingInitialNavigation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @publicApi\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withEnabledBlockingInitialNavigation() {\n  const providers = [{\n    provide: INITIAL_NAVIGATION,\n    useValue: 0 /* InitialNavigation.EnabledBlocking */\n  }, provideAppInitializer(() => {\n    const injector = inject(Injector);\n    const locationInitialized = injector.get(LOCATION_INITIALIZED, Promise.resolve());\n    return locationInitialized.then(() => {\n      return new Promise(resolve => {\n        const router = injector.get(Router);\n        const bootstrapDone = injector.get(BOOTSTRAP_DONE);\n        afterNextNavigation(router, () => {\n          // Unblock APP_INITIALIZER in case the initial navigation was canceled or errored\n          // without a redirect.\n          resolve(true);\n        });\n        injector.get(NavigationTransitions).afterPreactivation = () => {\n          // Unblock APP_INITIALIZER once we get to `afterPreactivation`. At this point, we\n          // assume activation will complete successfully (even though this is not\n          // guaranteed).\n          resolve(true);\n          return bootstrapDone.closed ? of(void 0) : bootstrapDone;\n        };\n        router.initialNavigation();\n      });\n    });\n  })];\n  return routerFeature(2 /* RouterFeatureKind.EnabledBlockingInitialNavigationFeature */, providers);\n}\n/**\n * Disables initial navigation.\n *\n * Use if there is a reason to have more control over when the router starts its initial navigation\n * due to some complex initialization logic.\n *\n * @usageNotes\n *\n * Basic example of how you can disable initial navigation:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withDisabledInitialNavigation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withDisabledInitialNavigation() {\n  const providers = [provideAppInitializer(() => {\n    inject(Router).setUpLocationChangeListener();\n  }), {\n    provide: INITIAL_NAVIGATION,\n    useValue: 2 /* InitialNavigation.Disabled */\n  }];\n  return routerFeature(3 /* RouterFeatureKind.DisabledInitialNavigationFeature */, providers);\n}\n/**\n * Enables logging of all internal navigation events to the console.\n * Extra logging might be useful for debugging purposes to inspect Router event sequence.\n *\n * @usageNotes\n *\n * Basic example of how you can enable debug tracing:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withDebugTracing())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withDebugTracing() {\n  let providers = [];\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    providers = [{\n      provide: ENVIRONMENT_INITIALIZER,\n      multi: true,\n      useFactory: () => {\n        const router = inject(Router);\n        return () => router.events.subscribe(e => {\n          // tslint:disable:no-console\n          console.group?.(`Router Event: ${e.constructor.name}`);\n          console.log(stringifyEvent(e));\n          console.log(e);\n          console.groupEnd?.();\n          // tslint:enable:no-console\n        });\n      }\n    }];\n  } else {\n    providers = [];\n  }\n  return routerFeature(1 /* RouterFeatureKind.DebugTracingFeature */, providers);\n}\nconst ROUTER_PRELOADER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router preloader' : '');\n/**\n * Allows to configure a preloading strategy to use. The strategy is configured by providing a\n * reference to a class that implements a `PreloadingStrategy`.\n *\n * @usageNotes\n *\n * Basic example of how you can configure preloading:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withPreloading(PreloadAllModules))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @param preloadingStrategy A reference to a class that implements a `PreloadingStrategy` that\n *     should be used.\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withPreloading(preloadingStrategy) {\n  const providers = [{\n    provide: ROUTER_PRELOADER,\n    useExisting: RouterPreloader\n  }, {\n    provide: PreloadingStrategy,\n    useExisting: preloadingStrategy\n  }];\n  return routerFeature(0 /* RouterFeatureKind.PreloadingFeature */, providers);\n}\n/**\n * Allows to provide extra parameters to configure Router.\n *\n * @usageNotes\n *\n * Basic example of how you can provide extra configuration options:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withRouterConfig({\n *          onSameUrlNavigation: 'reload'\n *       }))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @param options A set of parameters to configure Router, see `RouterConfigOptions` for\n *     additional information.\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withRouterConfig(options) {\n  const providers = [{\n    provide: ROUTER_CONFIGURATION,\n    useValue: options\n  }];\n  return routerFeature(5 /* RouterFeatureKind.RouterConfigurationFeature */, providers);\n}\n/**\n * Provides the location strategy that uses the URL fragment instead of the history API.\n *\n * @usageNotes\n *\n * Basic example of how you can use the hash location option:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withHashLocation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n * @see {@link /api/common/HashLocationStrategy HashLocationStrategy}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withHashLocation() {\n  const providers = [{\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n  }];\n  return routerFeature(6 /* RouterFeatureKind.RouterHashLocationFeature */, providers);\n}\n/**\n * Provides a function which is called when a navigation error occurs.\n *\n * This function is run inside application's [injection context](guide/di/dependency-injection-context)\n * so you can use the [`inject`](api/core/inject) function.\n *\n * This function can return a `RedirectCommand` to convert the error to a redirect, similar to returning\n * a `UrlTree` or `RedirectCommand` from a guard. This will also prevent the `Router` from emitting\n * `NavigationError`; it will instead emit `NavigationCancel` with code NavigationCancellationCode.Redirect.\n * Return values other than `RedirectCommand` are ignored and do not change any behavior with respect to\n * how the `Router` handles the error.\n *\n * @usageNotes\n *\n * Basic example of how you can use the error handler option:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withNavigationErrorHandler((e: NavigationError) =>\n * inject(MyErrorTracker).trackError(e)))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link NavigationError}\n * @see {@link /api/core/inject inject}\n * @see {@link runInInjectionContext}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withNavigationErrorHandler(handler) {\n  const providers = [{\n    provide: NAVIGATION_ERROR_HANDLER,\n    useValue: handler\n  }];\n  return routerFeature(7 /* RouterFeatureKind.NavigationErrorHandlerFeature */, providers);\n}\n/**\n * Enables binding information from the `Router` state directly to the inputs of the component in\n * `Route` configurations.\n *\n * @usageNotes\n *\n * Basic example of how you can enable the feature:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withComponentInputBinding())\n *     ]\n *   }\n * );\n * ```\n *\n * The router bindings information from any of the following sources:\n *\n *  - query parameters\n *  - path and matrix parameters\n *  - static route data\n *  - data from resolvers\n *\n * Duplicate keys are resolved in the same order from above, from least to greatest,\n * meaning that resolvers have the highest precedence and override any of the other information\n * from the route.\n *\n * Importantly, when an input does not have an item in the route data with a matching key, this\n * input is set to `undefined`. This prevents previous information from being\n * retained if the data got removed from the route (i.e. if a query parameter is removed).\n * Default values can be provided with a resolver on the route to ensure the value is always present\n * or an input and use an input transform in the component.\n *\n * @see {@link /guide/components/inputs#input-transforms Input Transforms}\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withComponentInputBinding() {\n  const providers = [RoutedComponentInputBinder, {\n    provide: INPUT_BINDER,\n    useExisting: RoutedComponentInputBinder\n  }];\n  return routerFeature(8 /* RouterFeatureKind.ComponentInputBindingFeature */, providers);\n}\n/**\n * Enables view transitions in the Router by running the route activation and deactivation inside of\n * `document.startViewTransition`.\n *\n * Note: The View Transitions API is not available in all browsers. If the browser does not support\n * view transitions, the Router will not attempt to start a view transition and continue processing\n * the navigation as usual.\n *\n * @usageNotes\n *\n * Basic example of how you can enable the feature:\n * ```ts\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withViewTransitions())\n *     ]\n *   }\n * );\n * ```\n *\n * @returns A set of providers for use with `provideRouter`.\n * @see https://developer.chrome.com/docs/web-platform/view-transitions/\n * @see https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API\n * @developerPreview\n */\nfunction withViewTransitions(options) {\n  _performanceMarkFeature('NgRouterViewTransitions');\n  const providers = [{\n    provide: CREATE_VIEW_TRANSITION,\n    useValue: createViewTransition\n  }, {\n    provide: VIEW_TRANSITION_OPTIONS,\n    useValue: {\n      skipNextTransition: !!options?.skipInitialTransition,\n      ...options\n    }\n  }];\n  return routerFeature(9 /* RouterFeatureKind.ViewTransitionsFeature */, providers);\n}\n\n/**\n * The directives defined in the `RouterModule`.\n */\nconst ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkActive, _EmptyOutletComponent];\n/**\n * @docsNotRequired\n */\nconst ROUTER_FORROOT_GUARD = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router duplicate forRoot guard' : '');\n// TODO(atscott): All of these except `ActivatedRoute` are `providedIn: 'root'`. They are only kept\n// here to avoid a breaking change whereby the provider order matters based on where the\n// `RouterModule`/`RouterTestingModule` is imported. These can/should be removed as a \"breaking\"\n// change in a major version.\nconst ROUTER_PROVIDERS = [Location, {\n  provide: UrlSerializer,\n  useClass: DefaultUrlSerializer\n}, Router, ChildrenOutletContexts, {\n  provide: ActivatedRoute,\n  useFactory: rootRoute,\n  deps: [Router]\n}, RouterConfigLoader,\n// Only used to warn when `provideRoutes` is used without `RouterModule` or `provideRouter`. Can\n// be removed when `provideRoutes` is removed.\ntypeof ngDevMode === 'undefined' || ngDevMode ? {\n  provide: ROUTER_IS_PROVIDED,\n  useValue: true\n} : []];\n/**\n * @description\n *\n * Adds directives and providers for in-app navigation among views defined in an application.\n * Use the Angular `Router` service to declaratively specify application states and manage state\n * transitions.\n *\n * You can import this NgModule multiple times, once for each lazy-loaded bundle.\n * However, only one `Router` service can be active.\n * To ensure this, there are two ways to register routes when importing this module:\n *\n * * The `forRoot()` method creates an `NgModule` that contains all the directives, the given\n * routes, and the `Router` service itself.\n * * The `forChild()` method creates an `NgModule` that contains all the directives and the given\n * routes, but does not include the `Router` service.\n *\n * @see [Routing and Navigation guide](guide/routing/common-router-tasks) for an\n * overview of how the `Router` service should be used.\n *\n * @publicApi\n */\nlet RouterModule = /*#__PURE__*/(() => {\n  class RouterModule {\n    constructor() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        inject(ROUTER_FORROOT_GUARD, {\n          optional: true\n        });\n      }\n    }\n    /**\n     * Creates and configures a module with all the router providers and directives.\n     * Optionally sets up an application listener to perform an initial navigation.\n     *\n     * When registering the NgModule at the root, import as follows:\n     *\n     * ```ts\n     * @NgModule({\n     *   imports: [RouterModule.forRoot(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the application.\n     * @param config An `ExtraOptions` configuration object that controls how navigation is performed.\n     * @return The new `NgModule`.\n     *\n     */\n    static forRoot(routes, config) {\n      return {\n        ngModule: RouterModule,\n        providers: [ROUTER_PROVIDERS, typeof ngDevMode === 'undefined' || ngDevMode ? config?.enableTracing ? withDebugTracing().ɵproviders : [] : [], {\n          provide: ROUTES,\n          multi: true,\n          useValue: routes\n        }, typeof ngDevMode === 'undefined' || ngDevMode ? {\n          provide: ROUTER_FORROOT_GUARD,\n          useFactory: provideForRootGuard,\n          deps: [[Router, new Optional(), new SkipSelf()]]\n        } : [], config?.errorHandler ? {\n          provide: NAVIGATION_ERROR_HANDLER,\n          useValue: config.errorHandler\n        } : [], {\n          provide: ROUTER_CONFIGURATION,\n          useValue: config ? config : {}\n        }, config?.useHash ? provideHashLocationStrategy() : providePathLocationStrategy(), provideRouterScroller(), config?.preloadingStrategy ? withPreloading(config.preloadingStrategy).ɵproviders : [], config?.initialNavigation ? provideInitialNavigation(config) : [], config?.bindToComponentInputs ? withComponentInputBinding().ɵproviders : [], config?.enableViewTransitions ? withViewTransitions().ɵproviders : [], provideRouterInitializer()]\n      };\n    }\n    /**\n     * Creates a module with all the router directives and a provider registering routes,\n     * without creating a new Router service.\n     * When registering for submodules and lazy-loaded submodules, create the NgModule as follows:\n     *\n     * ```ts\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the submodule.\n     * @return The new NgModule.\n     *\n     */\n    static forChild(routes) {\n      return {\n        ngModule: RouterModule,\n        providers: [{\n          provide: ROUTES,\n          multi: true,\n          useValue: routes\n        }]\n      };\n    }\n    static ɵfac = function RouterModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RouterModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: RouterModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return RouterModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * For internal use by `RouterModule` only. Note that this differs from `withInMemoryRouterScroller`\n * because it reads from the `ExtraOptions` which should not be used in the standalone world.\n */\nfunction provideRouterScroller() {\n  return {\n    provide: ROUTER_SCROLLER,\n    useFactory: () => {\n      const viewportScroller = inject(ViewportScroller);\n      const zone = inject(NgZone);\n      const config = inject(ROUTER_CONFIGURATION);\n      const transitions = inject(NavigationTransitions);\n      const urlSerializer = inject(UrlSerializer);\n      if (config.scrollOffset) {\n        viewportScroller.setOffset(config.scrollOffset);\n      }\n      return new RouterScroller(urlSerializer, transitions, viewportScroller, zone, config);\n    }\n  };\n}\n// Note: For internal use only with `RouterModule`. Standalone setup via `provideRouter` should\n// provide hash location directly via `{provide: LocationStrategy, useClass: HashLocationStrategy}`.\nfunction provideHashLocationStrategy() {\n  return {\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n  };\n}\n// Note: For internal use only with `RouterModule`. Standalone setup via `provideRouter` does not\n// need this at all because `PathLocationStrategy` is the default factory for `LocationStrategy`.\nfunction providePathLocationStrategy() {\n  return {\n    provide: LocationStrategy,\n    useClass: PathLocationStrategy\n  };\n}\nfunction provideForRootGuard(router) {\n  if (router) {\n    throw new _RuntimeError(4007 /* RuntimeErrorCode.FOR_ROOT_CALLED_TWICE */, `The Router was provided more than once. This can happen if 'forRoot' is used outside of the root injector.` + ` Lazy loaded modules should use RouterModule.forChild() instead.`);\n  }\n  return 'guarded';\n}\n// Note: For internal use only with `RouterModule`. Standalone router setup with `provideRouter`\n// users call `withXInitialNavigation` directly.\nfunction provideInitialNavigation(config) {\n  return [config.initialNavigation === 'disabled' ? withDisabledInitialNavigation().ɵproviders : [], config.initialNavigation === 'enabledBlocking' ? withEnabledBlockingInitialNavigation().ɵproviders : []];\n}\n// TODO(atscott): This should not be in the public API\n/**\n * A DI token for the router initializer that\n * is called after the app is bootstrapped.\n *\n * @publicApi\n */\nconst ROUTER_INITIALIZER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'Router Initializer' : '');\nfunction provideRouterInitializer() {\n  return [\n  // ROUTER_INITIALIZER token should be removed. It's public API but shouldn't be. We can just\n  // have `getBootstrapListener` directly attached to APP_BOOTSTRAP_LISTENER.\n  {\n    provide: ROUTER_INITIALIZER,\n    useFactory: getBootstrapListener\n  }, {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useExisting: ROUTER_INITIALIZER\n  }];\n}\nexport { NoPreloading, PreloadAllModules, PreloadingStrategy, ROUTER_INITIALIZER, ROUTER_PROVIDERS, RouterLink, RouterLinkActive, RouterModule, RouterPreloader, provideRouter, provideRoutes, withComponentInputBinding, withDebugTracing, withDisabledInitialNavigation, withEnabledBlockingInitialNavigation, withHashLocation, withInMemoryScrolling, withNavigationErrorHandler, withPreloading, withRouterConfig, withViewTransitions };\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Mensagem } from './mensagem';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ServicoMensagens {\r\n  private mensagensSubject = new BehaviorSubject<Mensagem[]>([]);\r\n  mensagens$ = this.mensagensSubject.asObservable();\r\n\r\n  private contador = 0;\r\n\r\n  erro(texto: string) {\r\n    this.adicionarMensagem('erro', texto);\r\n  }\r\n\r\n  sucesso(texto: string) {\r\n    this.adicionarMensagem('sucesso', texto);\r\n  }\r\n\r\n  info(texto: string) {\r\n    this.adicionarMensagem('info', texto);\r\n  }\r\n\r\n  aviso(texto: string) {\r\n    this.adicionarMensagem('aviso', texto);\r\n  }\r\n\r\n  private adicionarMensagem(tipo: Mensagem['tipo'], texto: string) {\r\n    const mensagem: Mensagem = {\r\n      id: ++this.contador,\r\n      tipo,\r\n      texto\r\n    };\r\n    const atual = this.mensagensSubject.value\r\n    this.mensagensSubject.next([...atual, mensagem])\r\n\r\n    // Remover automaticamente após 3s\r\n    setTimeout(() => this.removerMensagem(mensagem.id), 3000)\r\n  }\r\n\r\n  removerMensagem(id: number) {\r\n    this.mensagensSubject.next(this.mensagensSubject.value.filter(msg => msg.id !== id))\r\n  }\r\n}\r\n","import { inject, Injectable, signal } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Route, Router } from '@angular/router';\r\nimport { ServicoMensagens } from '../Componentes/ServicoMensagens/Mensagens.service';\r\n//import { NzMessageService } from 'ng-zorro-antd/message';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class HttpService {\r\n\r\n  //private MessageService = inject(NzMessageService)\r\n\r\n  private readonly DefaultHeaders = {\r\n    'Content-Type': 'application/json'\r\n  }\r\n\r\n  ServicoMensagens = inject(ServicoMensagens)\r\n\r\n\r\n  async Request(RequestURL: URL | string, Method: string = \"GET\", ErrorSuffix: string = \"\", Data?: any): Promise<any> {\r\n    return new Promise(async (resolve, reject) => {\r\n\r\n\r\n      let RequestHeaders: any = undefined\r\n\r\n\r\n\r\n\r\n      if (typeof (RequestURL) == 'string') {\r\n        RequestURL = new URL(RequestURL)\r\n      }\r\n\r\n      if (Method == 'GET' && Data) {\r\n\r\n        // Convert object to search params\r\n        for (const [key, value] of Object.entries(Data)) {\r\n          RequestURL.searchParams.append(key, String(value))\r\n        }\r\n        Data = undefined\r\n      } else {\r\n\r\n        // Convert body type\r\n        const FormDataBody = (Data instanceof FormData)\r\n        const EncodedBody = (Data instanceof URLSearchParams)\r\n        const JSONBody = !EncodedBody && !FormDataBody\r\n        if (JSONBody) {\r\n          Data = JSON.stringify(Data)\r\n          RequestHeaders = { 'Content-Type': 'application/json' }\r\n        } else if (EncodedBody) {\r\n          RequestHeaders = { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n        }\r\n      }\r\n\r\n\r\n      const Request = fetch(RequestURL, {\r\n        headers: RequestHeaders,\r\n        method: Method,\r\n        credentials: 'include',\r\n        body: Data,\r\n\r\n        //PARSING\r\n      }).then(async (Response) => {\r\n        const ContentType = Response.headers.get(\"Content-Type\") || ''\r\n\r\n        var Result: any = undefined\r\n\r\n        if (ContentType.includes(\"application/json\")) {\r\n          Result = await Response.json()\r\n        } else if (ContentType.includes(\"text/html\")) {\r\n          Result = await Response.text()\r\n        } else {\r\n          Result = await Response.blob()\r\n        }\r\n\r\n\r\n        if (Response.ok) {\r\n          resolve(Result)\r\n        } else {\r\n          const MensagemErro = `${ErrorSuffix} - ${Response.statusText}`\r\n          if (ErrorSuffix) {\r\n            console.error(`Erro: ${MensagemErro}`)\r\n            this.ServicoMensagens.erro(MensagemErro)\r\n          }\r\n          resolve(false)\r\n        }\r\n\r\n        // ERROR\r\n      }).catch((Error: Error) => {\r\n        console.error(Error)\r\n        this.ServicoMensagens.erro('Falha ao conectar ao servidor')\r\n        resolve(false)\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  // para testes\r\n  Wait = (seconds: number) => new Promise(resolve => setTimeout(resolve, seconds * 1000));\r\n}\r\n","import { isDevMode } from \"@angular/core\"\r\n\r\nexport class Definicoes {\r\n    static API_URL = window.location.href.includes('localhost') ? \"http://localhost:3000/api/\" : 'https://servidorautobus.onrender.com/api/'\r\n}","import { inject, Injectable, signal } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Route, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { HttpService } from './Http.service';\r\nimport { Definicoes } from '../Definicoes';\r\n\r\ninterface Utilizador {\r\n  nif: number;\r\n  telefone:number;\r\n  morada: string;\r\n  nascimento: string;\r\n  localidade:string;\r\n  nome: string;\r\n  email: string;\r\n  tipo_utilizador: number;\r\n  atividade: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ServicoAutenticacao {\r\n\r\n  router = inject(Router)\r\n  HttpService = inject(HttpService)\r\n  Utilizador = signal<Utilizador | undefined>(undefined)\r\n  Admin = signal<boolean>(false)\r\n\r\n  async Autenticar(){\r\n    const AuthURL = new URL('autenticar',Definicoes.API_URL)\r\n    const RespostaLogin = await this.HttpService.Request(AuthURL, 'POST')\r\n    \r\n    if (RespostaLogin){\r\n      this.Utilizador.set(RespostaLogin)\r\n      if (RespostaLogin.tipo_utilizador == 1){\r\n        this.Admin.set(true)\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, inject } from '@angular/core';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { ServicoAutenticacao } from '../../Services/Autenticacao.service';\r\n\r\n@Component({\r\n  selector: 'footer-componente',\r\n  imports: [RouterModule],\r\n  templateUrl: './footer.html',\r\n  styleUrl: './footer.css'\r\n})\r\n\r\nexport class Footer {\r\n  router = inject(Router)\r\n  ServicoAutenticacao = inject(ServicoAutenticacao)\r\n\r\n  \r\n  Caminho = this.router.url\r\n}\r\n","\r\n<footer class=\"footer\">\r\n    <div style=\"display: flex; align-items: center;\">\r\n\r\n        @if (!Caminho.includes(\"definicoes\")) {\r\n            @if (Caminho.includes(\"contacto\")) {\r\n                <div style=\"position: absolute; left: 0; display: flex;\">\r\n                    <button class=\"contact-button\">\r\n                        <div style=\"display:flex;\">\r\n                            <img class=\"imagemContact\" src=\"img/telefoneB.png\">\r\n                            <a style=\"padding-top: 7px\">+351 916942618</a>\r\n                        </div>\r\n                    </button>\r\n                    <button class=\"contact-button\">\r\n                        <div style=\"display:flex;\">\r\n                            <img class=\"imagemContact\" src=\"img/emailB.png\">\r\n                            <a style=\"padding-top: 7px\">autobus.pap&#64;gmail.com</a>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            }\r\n            \r\n            @else {\r\n                <div style=\"position: absolute; left: 0;\">\r\n                    <button class=\"contact-button\" routerLink=\"/contacto\">Contacte-nos!</button>\r\n                    <button class=\"contact-button\" routerLink=\"/sobre\">Sobre</button>\r\n                </div>\r\n            }\r\n        }\r\n\r\n        <div style=\"margin: 0 auto; text-align:center;\">\r\n\r\n            <br>\r\n\r\n            <!--licenças do site-->\r\n            <p xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dct=\"http://purl.org/dc/terms/\">\r\n                <span property=\"dct:title\"><strong>AutoBus</strong></span> by <span property=\"cc:attributionName\"><strong>Sofia Miranda</strong></span><br> is licensed under \r\n                <a href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/?ref=chooser-v1\" target=\"_blank\" rel=\"license noopener noreferrer\" style=\"display:inline-block; color: white; text-decoration: none;\">CC BY-NC-ND 4.0\r\n                    <img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1\">\r\n                    <img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1\">\r\n                    <img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/nc.svg?ref=chooser-v1\">\r\n                    <img style=\"height:22px!important;margin-left:3px;vertical-align:text-bottom;\" src=\"https://mirrors.creativecommons.org/presskit/icons/nd.svg?ref=chooser-v1\">\r\n                </a>\r\n            </p>\r\n\r\n            <!--<p><strong>By,</strong> Sofia Miranda</p>-->\r\n        </div>\r\n    </div>\r\n</footer>","import { Component, inject } from '@angular/core';\r\nimport { RouterModule, RouterOutlet } from '@angular/router';\r\nimport { ServicoAutenticacao } from '../../Services/Autenticacao.service';\r\nimport { Footer } from '../../Componentes/Footer/footer';\r\n\r\n@Component({\r\n  selector: 'pagina-definicoes',\r\n  imports: [RouterModule, RouterOutlet, Footer],\r\n  templateUrl: './definicoes.html',\r\n  styleUrl: './definicoes.less'\r\n})\r\nexport class PaginaDefinicoes {\r\n  JanelaAtiva = \"MinhaConta\";  \r\n\r\n  \r\n  ServicoAutenticacao = inject(ServicoAutenticacao)\r\n  Utilizador = this.ServicoAutenticacao.Utilizador\r\n}\r\n","<div class=\"roww\">\r\n    <div class=\"menu-lateral\">\r\n        <button routerLink=\"minha-conta\" type='button' id='minhaConta' class='botao' (click)='JanelaAtiva=\"MinhaConta\"'>Minha\r\n            conta</button>\r\n\r\n        <button routerLink=\"privacidade\" type='button' id='privacidadeSeguranca' class='botao' (click)='JanelaAtiva=\"Seguranca\"'>Privacidade\r\n            e Segurança</button>\r\n\r\n        @if (!ServicoAutenticacao.Admin()) {\r\n            <button routerLink=\"utilizadores\" type=\"button\" id=\"gestor\" class=\"botao\" (click)='JanelaAtiva=\"Utilizadores\"'>Gerir\r\n                Utilizadores</button>\r\n\r\n            <!-- <button routerLink=\"editar-utilizador\" type=\"button\" id=\"edicao\" class=\"botao\" (click)='JanelaAtiva=\"EditarUtilizador\"'>Editar\r\n                Utilizadores</button> -->\r\n        }\r\n\r\n        <a routerLink=\"/inicial\"><button type='button' value='Voltar' class='botao'>Voltar</button></a>\r\n    </div>\r\n\r\n    <div class=\"janela\">\r\n        <!-- Aqui, as janelas sao renderizadas de acordo com o link. \r\n        Por exemplo, se o link for /definicoes/minha-conta, os conteudos renderizados serao os da sub-pagina minha-conta. -->\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n\r\n</div>\r\n\r\n<br>\r\n\r\n<footer-componente></footer-componente>","import { Component, Input } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'carregamento',\r\n  imports: [RouterModule],\r\n  templateUrl: './carregamento.html',\r\n  styleUrl: './carregamento.css'\r\n})\r\n\r\nexport class Carregamento {\r\n  @Input() Visivel: boolean = false;\r\n}\r\n","@if (Visivel){\r\n    <div class=\"fundo\">\r\n        <div class=\"dot-spinner\">\r\n            <div class=\"dot-spinner__dot\"></div>\r\n            <div class=\"dot-spinner__dot\"></div>\r\n            <div class=\"dot-spinner__dot\"></div>\r\n            <div class=\"dot-spinner__dot\"></div>\r\n            <div class=\"dot-spinner__dot\"></div>\r\n            <div class=\"dot-spinner__dot\"></div>\r\n            <div class=\"dot-spinner__dot\"></div>\r\n            <div class=\"dot-spinner__dot\"></div>\r\n        </div>\r\n    </div>\r\n}","/**\n * @license Angular v19.2.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, forwardRef, Optional, Inject, ɵisPromise as _isPromise, ɵisSubscribable as _isSubscribable, ɵRuntimeError as _RuntimeError, Self, untracked, computed, signal, EventEmitter, Input, Host, SkipSelf, booleanAttribute, ChangeDetectorRef, Output, inject, Injectable, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM as _getDOM } from '@angular/common';\nimport { from, forkJoin, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nlet BaseControlValueAccessor = /*#__PURE__*/(() => {\n  class BaseControlValueAccessor {\n    _renderer;\n    _elementRef;\n    /**\n     * The registered callback function called when a change or input event occurs on the input\n     * element.\n     * @nodoc\n     */\n    onChange = _ => {};\n    /**\n     * The registered callback function called when a blur event occurs on the input element.\n     * @nodoc\n     */\n    onTouched = () => {};\n    constructor(_renderer, _elementRef) {\n      this._renderer = _renderer;\n      this._elementRef = _elementRef;\n    }\n    /**\n     * Helper method that sets a property on a target element using the current Renderer\n     * implementation.\n     * @nodoc\n     */\n    setProperty(key, value) {\n      this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n      this.setProperty('disabled', isDisabled);\n    }\n    static ɵfac = function BaseControlValueAccessor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BaseControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BaseControlValueAccessor\n    });\n  }\n  return BaseControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nlet BuiltInControlValueAccessor = /*#__PURE__*/(() => {\n  class BuiltInControlValueAccessor extends BaseControlValueAccessor {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵBuiltInControlValueAccessor_BaseFactory;\n      return function BuiltInControlValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵBuiltInControlValueAccessor_BaseFactory || (ɵBuiltInControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(BuiltInControlValueAccessor)))(__ngFactoryType__ || BuiltInControlValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: BuiltInControlValueAccessor,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return BuiltInControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgValueAccessor' : '');\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => CheckboxControlValueAccessor),\n  multi: true\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet CheckboxControlValueAccessor = /*#__PURE__*/(() => {\n  class CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"checked\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.setProperty('checked', value);\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵCheckboxControlValueAccessor_BaseFactory;\n      return function CheckboxControlValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵCheckboxControlValueAccessor_BaseFactory || (ɵCheckboxControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxControlValueAccessor)))(__ngFactoryType__ || CheckboxControlValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CheckboxControlValueAccessor,\n      selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]],\n      hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.checked);\n          })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return CheckboxControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst DEFAULT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => DefaultValueAccessor),\n  multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n  const userAgent = _getDOM() ? _getDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = /*#__PURE__*/new InjectionToken(ngDevMode ? 'CompositionEventMode' : '');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```html\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet DefaultValueAccessor = /*#__PURE__*/(() => {\n  class DefaultValueAccessor extends BaseControlValueAccessor {\n    _compositionMode;\n    /** Whether the user is creating a composition string (IME events). */\n    _composing = false;\n    constructor(renderer, elementRef, _compositionMode) {\n      super(renderer, elementRef);\n      this._compositionMode = _compositionMode;\n      if (this._compositionMode == null) {\n        this._compositionMode = !_isAndroid();\n      }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      const normalizedValue = value == null ? '' : value;\n      this.setProperty('value', normalizedValue);\n    }\n    /** @internal */\n    _handleInput(value) {\n      if (!this._compositionMode || this._compositionMode && !this._composing) {\n        this.onChange(value);\n      }\n    }\n    /** @internal */\n    _compositionStart() {\n      this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n      this._composing = false;\n      this._compositionMode && this.onChange(value);\n    }\n    static ɵfac = function DefaultValueAccessor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DefaultValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: DefaultValueAccessor,\n      selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]],\n      hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) {\n            return ctx._handleInput($event.target.value);\n          })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() {\n            return ctx._compositionStart();\n          })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) {\n            return ctx._compositionEnd($event.target.value);\n          });\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return DefaultValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isEmptyInputValue(value) {\n  return value == null || lengthOrSize(value) === 0;\n}\n/**\n * Extract the length property in case it's an array or a string.\n * Extract the size property in case it's a set.\n * Return null else.\n * @param value Either an array, set or undefined.\n */\nfunction lengthOrSize(value) {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  if (value == null) {\n    return null;\n  } else if (Array.isArray(value) || typeof value === 'string') {\n    return value.length;\n  } else if (value instanceof Set) {\n    return value.size;\n  }\n  return null;\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_ASYNC_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```ts\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgValidators' : '');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```ts\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgAsyncValidators' : '');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n  /**\n   * @description\n   * Validator that requires the control's value to be greater than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a minimum of 3\n   *\n   * ```ts\n   * const control = new FormControl(2, Validators.min(3));\n   *\n   * console.log(control.errors); // {min: {min: 3, actual: 2}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `min` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static min(min) {\n    return minValidator(min);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to be less than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a maximum of 15\n   *\n   * ```ts\n   * const control = new FormControl(16, Validators.max(15));\n   *\n   * console.log(control.errors); // {max: {max: 15, actual: 16}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `max` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static max(max) {\n    return maxValidator(max);\n  }\n  /**\n   * @description\n   * Validator that requires the control have a non-empty value.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field is non-empty\n   *\n   * ```ts\n   * const control = new FormControl('', Validators.required);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map with the `required` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static required(control) {\n    return requiredValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value be true. This validator is commonly\n   * used for required checkboxes.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field value is true\n   *\n   * ```ts\n   * const control = new FormControl('some value', Validators.requiredTrue);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map that contains the `required` property\n   * set to `true` if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static requiredTrue(control) {\n    return requiredTrueValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value pass an email validation test.\n   *\n   * Tests the value using a [regular\n   * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n   * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n   * address in the [WHATWG HTML\n   * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n   * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n   * lengths of different parts of the address).\n   *\n   * The differences from the WHATWG version include:\n   * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n   * - Disallow `local-part` to be longer than 64 characters.\n   * - Disallow the whole address to be longer than 254 characters.\n   *\n   * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n   * validate the value against a different pattern.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field matches a valid email pattern\n   *\n   * ```ts\n   * const control = new FormControl('bad@', Validators.email);\n   *\n   * console.log(control.errors); // {email: true}\n   * ```\n   *\n   * @returns An error map with the `email` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static email(control) {\n    return emailValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the number of items in the control's value to be greater than or equal\n   * to the provided minimum length. This validator is also provided by default if you use\n   * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n   * only for types that have a numeric `length` or `size` property, such as strings, arrays or\n   * sets. The `minLength` validator logic is also not invoked for values when their `length` or\n   * `size` property is 0 (for example in case of an empty string or an empty array), to support\n   * optional controls. You can use the standard `required` validator if empty values should not be\n   * considered valid.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has a minimum of 3 characters\n   *\n   * ```ts\n   * const control = new FormControl('ng', Validators.minLength(3));\n   *\n   * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n   * ```\n   *\n   * ```html\n   * <input minlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `minlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static minLength(minLength) {\n    return minLengthValidator(minLength);\n  }\n  /**\n   * @description\n   * Validator that requires the number of items in the control's value to be less than or equal\n   * to the provided maximum length. This validator is also provided by default if you use\n   * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n   * only for types that have a numeric `length` or `size` property, such as strings, arrays or\n   * sets.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has maximum of 5 characters\n   *\n   * ```ts\n   * const control = new FormControl('Angular', Validators.maxLength(5));\n   *\n   * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n   * ```\n   *\n   * ```html\n   * <input maxlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `maxlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static maxLength(maxLength) {\n    return maxLengthValidator(maxLength);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to match a regex pattern. This validator is also\n   * provided by default if you use the HTML5 `pattern` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field only contains letters or spaces\n   *\n   * ```ts\n   * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n   *\n   * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n   * ```\n   *\n   * ```html\n   * <input pattern=\"[a-zA-Z ]*\">\n   * ```\n   *\n   * ### Pattern matching with the global or sticky flag\n   *\n   * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n   * can produce different results on the same input when validations are run consecutively. This is\n   * due to how the behavior of `RegExp.prototype.test` is\n   * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n   * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n   * Due to this behavior, it is recommended that when using\n   * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n   * flag enabled.\n   *\n   * ```ts\n   * // Not recommended (since the `g` flag is used)\n   * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n   *\n   * // Good\n   * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n   * ```\n   *\n   * @param pattern A regular expression to be used as is to test the values, or a string.\n   * If a string is passed, the `^` character is prepended and the `$` character is\n   * appended to the provided string (if not already present), and the resulting regular\n   * expression is used to test the values.\n   *\n   * @returns A validator function that returns an error map with the\n   * `pattern` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static pattern(pattern) {\n    return patternValidator(pattern);\n  }\n  /**\n   * @description\n   * Validator that performs no operation.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static nullValidator(control) {\n    return nullValidator();\n  }\n  static compose(validators) {\n    return compose(validators);\n  }\n  /**\n   * @description\n   * Compose multiple async validators into a single function that returns the union\n   * of the individual error objects for the provided control.\n   *\n   * @returns A validator function that returns an error map with the\n   * merged error objects of the async validators if the validation check fails, otherwise `null`.\n   *\n   * @see {@link /api/forms/AbstractControl#updateValueAndValidity updateValueAndValidity}\n   *\n   */\n  static composeAsync(validators) {\n    return composeAsync(validators);\n  }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n  return control => {\n    if (control.value == null || min == null) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n    return !isNaN(value) && value < min ? {\n      'min': {\n        'min': min,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n  return control => {\n    if (control.value == null || max == null) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n    return !isNaN(value) && value > max ? {\n      'max': {\n        'max': max,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n  return isEmptyInputValue(control.value) ? {\n    'required': true\n  } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n  return control.value === true ? null : {\n    'required': true\n  };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n  if (isEmptyInputValue(control.value)) {\n    return null; // don't validate empty values to allow optional controls\n  }\n  return EMAIL_REGEXP.test(control.value) ? null : {\n    'email': true\n  };\n}\n/**\n * Validator that requires the number of items in the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n *\n * The minLengthValidator respects every length property in an object, regardless of whether it's an array.\n * For example, the object {id: 1, length: 0, width: 0} should be validated.\n */\nfunction minLengthValidator(minLength) {\n  return control => {\n    const length = control.value?.length ?? lengthOrSize(control.value);\n    if (length === null || length === 0) {\n      // don't validate empty values to allow optional controls\n      // don't validate values without `length` or `size` property\n      return null;\n    }\n    return length < minLength ? {\n      'minlength': {\n        'requiredLength': minLength,\n        'actualLength': length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the number of items in the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n *\n * The maxLengthValidator respects every length property in an object, regardless of whether it's an array.\n * For example, the object {id: 1, length: 0, width: 0} should be validated.\n */\nfunction maxLengthValidator(maxLength) {\n  return control => {\n    const length = control.value?.length ?? lengthOrSize(control.value);\n    if (length !== null && length > maxLength) {\n      return {\n        'maxlength': {\n          'requiredLength': maxLength,\n          'actualLength': length\n        }\n      };\n    }\n    return null;\n  };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n  if (!pattern) return nullValidator;\n  let regex;\n  let regexStr;\n  if (typeof pattern === 'string') {\n    regexStr = '';\n    if (pattern.charAt(0) !== '^') regexStr += '^';\n    regexStr += pattern;\n    if (pattern.charAt(pattern.length - 1) !== '$') regexStr += '$';\n    regex = new RegExp(regexStr);\n  } else {\n    regexStr = pattern.toString();\n    regex = pattern;\n  }\n  return control => {\n    if (isEmptyInputValue(control.value)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = control.value;\n    return regex.test(value) ? null : {\n      'pattern': {\n        'requiredPattern': regexStr,\n        'actualValue': value\n      }\n    };\n  };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n  return null;\n}\nfunction isPresent(o) {\n  return o != null;\n}\nfunction toObservable(value) {\n  const obs = _isPromise(value) ? from(value) : value;\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && !_isSubscribable(obs)) {\n    let errorMessage = `Expected async validator to return Promise or Observable.`;\n    // A synchronous validator will return object or null.\n    if (typeof value === 'object') {\n      errorMessage += ' Are you using a synchronous validator where an async validator is expected?';\n    }\n    throw new _RuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n  }\n  return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n  let res = {};\n  arrayOfErrors.forEach(errors => {\n    res = errors != null ? {\n      ...res,\n      ...errors\n    } : res;\n  });\n  return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n  return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n  return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n  return validators.map(validator => {\n    return isValidatorFn(validator) ? validator : c => validator.validate(c);\n  });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    return mergeErrors(executeValidators(control, presentValidators));\n  };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n  return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    const observables = executeValidators(control, presentValidators).map(toObservable);\n    return forkJoin(observables).pipe(map(mergeErrors));\n  };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n  return validators != null ? composeAsync(normalizeValidators(validators)) : null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n  if (controlValidators === null) return [dirValidator];\n  return Array.isArray(controlValidators) ? [...controlValidators, dirValidator] : [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n  return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n  return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n  if (!validators) return [];\n  return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n  return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n  const current = makeValidatorsArray(currentValidators);\n  const validatorsToAdd = makeValidatorsArray(validators);\n  validatorsToAdd.forEach(v => {\n    // Note: if there are duplicate entries in the new validators array,\n    // only the first one would be added to the current list of validators.\n    // Duplicate ones would be ignored since `hasValidator` would detect\n    // the presence of a validator function and we update the current list in place.\n    if (!hasValidator(current, v)) {\n      current.push(v);\n    }\n  });\n  return current;\n}\nfunction removeValidators(validators, currentValidators) {\n  return makeValidatorsArray(currentValidators).filter(v => !hasValidator(validators, v));\n}\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n  /**\n   * @description\n   * Reports the value of the control if it is present, otherwise null.\n   */\n  get value() {\n    return this.control ? this.control.value : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is valid. A control is considered valid if no\n   * validation errors exist with the current value.\n   * If the control is not present, null is returned.\n   */\n  get valid() {\n    return this.control ? this.control.valid : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is invalid, meaning that an error exists in the input value.\n   * If the control is not present, null is returned.\n   */\n  get invalid() {\n    return this.control ? this.control.invalid : null;\n  }\n  /**\n   * @description\n   * Reports whether a control is pending, meaning that async validation is occurring and\n   * errors are not yet available for the input value. If the control is not present, null is\n   * returned.\n   */\n  get pending() {\n    return this.control ? this.control.pending : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is disabled, meaning that the control is disabled\n   * in the UI and is exempt from validation checks and excluded from aggregate\n   * values of ancestor controls. If the control is not present, null is returned.\n   */\n  get disabled() {\n    return this.control ? this.control.disabled : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is enabled, meaning that the control is included in ancestor\n   * calculations of validity or value. If the control is not present, null is returned.\n   */\n  get enabled() {\n    return this.control ? this.control.enabled : null;\n  }\n  /**\n   * @description\n   * Reports the control's validation errors. If the control is not present, null is returned.\n   */\n  get errors() {\n    return this.control ? this.control.errors : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is pristine, meaning that the user has not yet changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get pristine() {\n    return this.control ? this.control.pristine : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is dirty, meaning that the user has changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get dirty() {\n    return this.control ? this.control.dirty : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is touched, meaning that the user has triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get touched() {\n    return this.control ? this.control.touched : null;\n  }\n  /**\n   * @description\n   * Reports the validation status of the control. Possible values include:\n   * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n   * If the control is not present, null is returned.\n   */\n  get status() {\n    return this.control ? this.control.status : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is untouched, meaning that the user has not yet triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get untouched() {\n    return this.control ? this.control.untouched : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable that emits a validation status whenever it is\n   * calculated for the control. If the control is not present, null is returned.\n   */\n  get statusChanges() {\n    return this.control ? this.control.statusChanges : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable of value changes for the control that emits every time the\n   * value of the control changes in the UI or programmatically.\n   * If the control is not present, null is returned.\n   */\n  get valueChanges() {\n    return this.control ? this.control.valueChanges : null;\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return null;\n  }\n  /**\n   * Contains the result of merging synchronous validators into a single validator function\n   * (combined using `Validators.compose`).\n   */\n  _composedValidatorFn;\n  /**\n   * Contains the result of merging asynchronous validators into a single validator function\n   * (combined using `Validators.composeAsync`).\n   */\n  _composedAsyncValidatorFn;\n  /**\n   * Set of synchronous validators as they were provided while calling `setValidators` function.\n   * @internal\n   */\n  _rawValidators = [];\n  /**\n   * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n   * function.\n   * @internal\n   */\n  _rawAsyncValidators = [];\n  /**\n   * Sets synchronous validators for this directive.\n   * @internal\n   */\n  _setValidators(validators) {\n    this._rawValidators = validators || [];\n    this._composedValidatorFn = composeValidators(this._rawValidators);\n  }\n  /**\n   * Sets asynchronous validators for this directive.\n   * @internal\n   */\n  _setAsyncValidators(validators) {\n    this._rawAsyncValidators = validators || [];\n    this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n  }\n  /**\n   * @description\n   * Synchronous validator function composed of all the synchronous validators registered with this\n   * directive.\n   */\n  get validator() {\n    return this._composedValidatorFn || null;\n  }\n  /**\n   * @description\n   * Asynchronous validator function composed of all the asynchronous validators registered with\n   * this directive.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn || null;\n  }\n  /*\n   * The set of callbacks to be invoked when directive instance is being destroyed.\n   */\n  _onDestroyCallbacks = [];\n  /**\n   * Internal function to register callbacks that should be invoked\n   * when directive instance is being destroyed.\n   * @internal\n   */\n  _registerOnDestroy(fn) {\n    this._onDestroyCallbacks.push(fn);\n  }\n  /**\n   * Internal function to invoke all registered \"on destroy\" callbacks.\n   * Note: calling this function also clears the list of callbacks.\n   * @internal\n   */\n  _invokeOnDestroyCallbacks() {\n    this._onDestroyCallbacks.forEach(fn => fn());\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Resets the control with the provided value if the control is present.\n   */\n  reset(value = undefined) {\n    if (this.control) this.control.reset(value);\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return this.control ? this.control.hasError(errorCode, path) : false;\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    return this.control ? this.control.getError(errorCode, path) : null;\n  }\n}\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n  /**\n   * @description\n   * The name for the control\n   */\n  name;\n  /**\n   * @description\n   * The top-level form directive for the control.\n   */\n  get formDirective() {\n    return null;\n  }\n  /**\n   * @description\n   * The path to this group.\n   */\n  get path() {\n    return null;\n  }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n  /**\n   * @description\n   * The parent form for the control.\n   *\n   * @internal\n   */\n  _parent = null;\n  /**\n   * @description\n   * The name for the control\n   */\n  name = null;\n  /**\n   * @description\n   * The value accessor for the control\n   */\n  valueAccessor = null;\n}\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n  _cd;\n  constructor(cd) {\n    this._cd = cd;\n  }\n  get isTouched() {\n    // track the touched signal\n    this._cd?.control?._touched?.();\n    return !!this._cd?.control?.touched;\n  }\n  get isUntouched() {\n    return !!this._cd?.control?.untouched;\n  }\n  get isPristine() {\n    // track the pristine signal\n    this._cd?.control?._pristine?.();\n    return !!this._cd?.control?.pristine;\n  }\n  get isDirty() {\n    // pristine signal already tracked above\n    return !!this._cd?.control?.dirty;\n  }\n  get isValid() {\n    // track the status signal\n    this._cd?.control?._status?.();\n    return !!this._cd?.control?.valid;\n  }\n  get isInvalid() {\n    // status signal already tracked above\n    return !!this._cd?.control?.invalid;\n  }\n  get isPending() {\n    // status signal already tracked above\n    return !!this._cd?.control?.pending;\n  }\n  get isSubmitted() {\n    // track the submitted signal\n    this._cd?._submitted?.();\n    // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n    // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n    return !!this._cd?.submitted;\n  }\n}\nconst ngControlStatusHost = {\n  '[class.ng-untouched]': 'isUntouched',\n  '[class.ng-touched]': 'isTouched',\n  '[class.ng-pristine]': 'isPristine',\n  '[class.ng-dirty]': 'isDirty',\n  '[class.ng-valid]': 'isValid',\n  '[class.ng-invalid]': 'isInvalid',\n  '[class.ng-pending]': 'isPending'\n};\nconst ngGroupStatusHost = {\n  ...ngControlStatusHost,\n  '[class.ng-submitted]': 'isSubmitted'\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgControlStatus = /*#__PURE__*/(() => {\n  class NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n      super(cd);\n    }\n    static ɵfac = function NgControlStatus_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgControlStatus)(i0.ɵɵdirectiveInject(NgControl, 2));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgControlStatus,\n      selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]],\n      hostVars: 14,\n      hostBindings: function NgControlStatus_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending);\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgControlStatus;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgControlStatusGroup = /*#__PURE__*/(() => {\n  class NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n      super(cd);\n    }\n    static ɵfac = function NgControlStatusGroup_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgControlStatusGroup)(i0.ɵɵdirectiveInject(ControlContainer, 10));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgControlStatusGroup,\n      selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]],\n      hostVars: 16,\n      hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending)(\"ng-submitted\", ctx.isSubmitted);\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgControlStatusGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\nfunction controlParentException(nameOrIndex) {\n  return new _RuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive. You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      ${describeFormControl(nameOrIndex)}\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction describeFormControl(nameOrIndex) {\n  if (nameOrIndex == null || nameOrIndex === '') {\n    return '';\n  }\n  const valueType = typeof nameOrIndex === 'string' ? 'name' : 'index';\n  return `Affected Form Control ${valueType}: \"${nameOrIndex}\"`;\n}\nfunction ngModelGroupException() {\n  return new _RuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n  return new _RuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n  return new _RuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n  return new _RuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n  return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n  return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n  return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n  return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n  return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see {@link status}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see {@link status}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see {@link markAsPending}\n * @see {@link status}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see {@link markAsDisabled}\n * @see {@link status}\n */\nconst DISABLED = 'DISABLED';\n/**\n * Base class for every event sent by `AbstractControl.events()`\n *\n * @publicApi\n */\nclass ControlEvent {}\n/**\n * Event fired when the value of a control changes.\n *\n * @publicApi\n */\nclass ValueChangeEvent extends ControlEvent {\n  value;\n  source;\n  constructor(value, source) {\n    super();\n    this.value = value;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's pristine state changes (pristine <=> dirty).\n *\n * @publicApi */\nclass PristineChangeEvent extends ControlEvent {\n  pristine;\n  source;\n  constructor(pristine, source) {\n    super();\n    this.pristine = pristine;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's touched status changes (touched <=> untouched).\n *\n * @publicApi\n */\nclass TouchedChangeEvent extends ControlEvent {\n  touched;\n  source;\n  constructor(touched, source) {\n    super();\n    this.touched = touched;\n    this.source = source;\n  }\n}\n/**\n * Event fired when the control's status changes.\n *\n * @publicApi\n */\nclass StatusChangeEvent extends ControlEvent {\n  status;\n  source;\n  constructor(status, source) {\n    super();\n    this.status = status;\n    this.source = source;\n  }\n}\n/**\n * Event fired when a form is submitted\n *\n * @publicApi\n */\nclass FormSubmittedEvent extends ControlEvent {\n  source;\n  constructor(source) {\n    super();\n    this.source = source;\n  }\n}\n/**\n * Event fired when a form is reset.\n *\n * @publicApi\n */\nclass FormResetEvent extends ControlEvent {\n  source;\n  constructor(source) {\n    super();\n    this.source = source;\n  }\n}\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n  return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n      console.warn(asyncValidatorsDroppedWithOptsWarning);\n    }\n  }\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n  return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) && typeof validatorOrOpts === 'object';\n}\nfunction assertControlPresent(parent, isGroup, key) {\n  const controls = parent.controls;\n  const collection = isGroup ? Object.keys(controls) : controls;\n  if (!collection.length) {\n    throw new _RuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, typeof ngDevMode === 'undefined' || ngDevMode ? noControlsError(isGroup) : '');\n  }\n  if (!controls[key]) {\n    throw new _RuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlError(isGroup, key) : '');\n  }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n  control._forEachChild((_, key) => {\n    if (value[key] === undefined) {\n      throw new _RuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlValueError(isGroup, key) : '');\n    }\n  });\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see [Dynamic Forms Guide](guide/forms/dynamic-forms)\n *\n * @publicApi\n */\nclass AbstractControl {\n  /** @internal */\n  _pendingDirty = false;\n  /**\n   * Indicates that a control has its own pending asynchronous validation in progress.\n   * It also stores if the control should emit events when the validation status changes.\n   *\n   * @internal\n   */\n  _hasOwnPendingAsyncValidator = null;\n  /** @internal */\n  _pendingTouched = false;\n  /** @internal */\n  _onCollectionChange = () => {};\n  /** @internal */\n  _updateOn;\n  _parent = null;\n  _asyncValidationSubscription;\n  /**\n   * Contains the result of merging synchronous validators into a single validator function\n   * (combined using `Validators.compose`).\n   *\n   * @internal\n   */\n  _composedValidatorFn;\n  /**\n   * Contains the result of merging asynchronous validators into a single validator function\n   * (combined using `Validators.composeAsync`).\n   *\n   * @internal\n   */\n  _composedAsyncValidatorFn;\n  /**\n   * Synchronous validators as they were provided:\n   *  - in `AbstractControl` constructor\n   *  - as an argument while calling `setValidators` function\n   *  - while calling the setter on the `validator` field (e.g. `control.validator = validatorFn`)\n   *\n   * @internal\n   */\n  _rawValidators;\n  /**\n   * Asynchronous validators as they were provided:\n   *  - in `AbstractControl` constructor\n   *  - as an argument while calling `setAsyncValidators` function\n   *  - while calling the setter on the `asyncValidator` field (e.g. `control.asyncValidator =\n   * asyncValidatorFn`)\n   *\n   * @internal\n   */\n  _rawAsyncValidators;\n  /**\n   * The current value of the control.\n   *\n   * * For a `FormControl`, the current value.\n   * * For an enabled `FormGroup`, the values of enabled controls as an object\n   * with a key-value pair for each member of the group.\n   * * For a disabled `FormGroup`, the values of all controls as an object\n   * with a key-value pair for each member of the group.\n   * * For a `FormArray`, the values of enabled controls as an array.\n   *\n   */\n  value;\n  /**\n   * Initialize the AbstractControl instance.\n   *\n   * @param validators The function or array of functions that is used to determine the validity of\n   *     this control synchronously.\n   * @param asyncValidators The function or array of functions that is used to determine validity of\n   *     this control asynchronously.\n   */\n  constructor(validators, asyncValidators) {\n    this._assignValidators(validators);\n    this._assignAsyncValidators(asyncValidators);\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control synchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get validator() {\n    return this._composedValidatorFn;\n  }\n  set validator(validatorFn) {\n    this._rawValidators = this._composedValidatorFn = validatorFn;\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control asynchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn;\n  }\n  set asyncValidator(asyncValidatorFn) {\n    this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n  }\n  /**\n   * The parent control.\n   */\n  get parent() {\n    return this._parent;\n  }\n  /**\n   * The validation status of the control.\n   *\n   * @see {@link FormControlStatus}\n   *\n   * These status values are mutually exclusive, so a control cannot be\n   * both valid AND invalid or invalid AND disabled.\n   */\n  get status() {\n    return untracked(this.statusReactive);\n  }\n  set status(v) {\n    untracked(() => this.statusReactive.set(v));\n  }\n  /** @internal */\n  _status = /*#__PURE__*/computed(() => this.statusReactive());\n  statusReactive = /*#__PURE__*/signal(undefined);\n  /**\n   * A control is `valid` when its `status` is `VALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control has passed all of its validation tests,\n   * false otherwise.\n   */\n  get valid() {\n    return this.status === VALID;\n  }\n  /**\n   * A control is `invalid` when its `status` is `INVALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control has failed one or more of its validation checks,\n   * false otherwise.\n   */\n  get invalid() {\n    return this.status === INVALID;\n  }\n  /**\n   * A control is `pending` when its `status` is `PENDING`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control is in the process of conducting a validation check,\n   * false otherwise.\n   */\n  get pending() {\n    return this.status == PENDING;\n  }\n  /**\n   * A control is `disabled` when its `status` is `DISABLED`.\n   *\n   * Disabled controls are exempt from validation checks and\n   * are not included in the aggregate value of their ancestor\n   * controls.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control is disabled, false otherwise.\n   */\n  get disabled() {\n    return this.status === DISABLED;\n  }\n  /**\n   * A control is `enabled` as long as its `status` is not `DISABLED`.\n   *\n   * @returns True if the control has any status other than 'DISABLED',\n   * false if the status is 'DISABLED'.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   */\n  get enabled() {\n    return this.status !== DISABLED;\n  }\n  /**\n   * An object containing any errors generated by failing validation,\n   * or null if there are no errors.\n   */\n  errors;\n  /**\n   * A control is `pristine` if the user has not yet changed\n   * the value in the UI.\n   *\n   * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get pristine() {\n    return untracked(this.pristineReactive);\n  }\n  set pristine(v) {\n    untracked(() => this.pristineReactive.set(v));\n  }\n  /** @internal */\n  _pristine = /*#__PURE__*/computed(() => this.pristineReactive());\n  pristineReactive = /*#__PURE__*/signal(true);\n  /**\n   * A control is `dirty` if the user has changed the value\n   * in the UI.\n   *\n   * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get dirty() {\n    return !this.pristine;\n  }\n  /**\n   * True if the control is marked as `touched`.\n   *\n   * A control is marked `touched` once the user has triggered\n   * a `blur` event on it.\n   */\n  get touched() {\n    return untracked(this.touchedReactive);\n  }\n  set touched(v) {\n    untracked(() => this.touchedReactive.set(v));\n  }\n  /** @internal */\n  _touched = /*#__PURE__*/computed(() => this.touchedReactive());\n  touchedReactive = /*#__PURE__*/signal(false);\n  /**\n   * True if the control has not been marked as touched\n   *\n   * A control is `untouched` if the user has not yet triggered\n   * a `blur` event on it.\n   */\n  get untouched() {\n    return !this.touched;\n  }\n  /**\n   * Exposed as observable, see below.\n   *\n   * @internal\n   */\n  _events = /*#__PURE__*/new Subject();\n  /**\n   * A multicasting observable that emits an event every time the state of the control changes.\n   * It emits for value, status, pristine or touched changes.\n   *\n   * **Note**: On value change, the emit happens right after a value of this control is updated. The\n   * value of a parent control (for example if this FormControl is a part of a FormGroup) is updated\n   * later, so accessing a value of a parent control (using the `value` property) from the callback\n   * of this event might result in getting a value that has not been updated yet. Subscribe to the\n   * `events` of the parent control instead.\n   * For other event types, the events are emitted after the parent control has been updated.\n   *\n   */\n  events = /*#__PURE__*/this._events.asObservable();\n  /**\n   * A multicasting observable that emits an event every time the value of the control changes, in\n   * the UI or programmatically. It also emits an event each time you call enable() or disable()\n   * without passing along {emitEvent: false} as a function argument.\n   *\n   * **Note**: the emit happens right after a value of this control is updated. The value of a\n   * parent control (for example if this FormControl is a part of a FormGroup) is updated later, so\n   * accessing a value of a parent control (using the `value` property) from the callback of this\n   * event might result in getting a value that has not been updated yet. Subscribe to the\n   * `valueChanges` event of the parent control instead.\n   */\n  valueChanges;\n  /**\n   * A multicasting observable that emits an event every time the validation `status` of the control\n   * recalculates.\n   *\n   * @see {@link FormControlStatus}\n   * @see {@link AbstractControl.status}\n   */\n  statusChanges;\n  /**\n   * Reports the update strategy of the `AbstractControl` (meaning\n   * the event on which the control updates itself).\n   * Possible values: `'change'` | `'blur'` | `'submit'`\n   * Default value: `'change'`\n   */\n  get updateOn() {\n    return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';\n  }\n  /**\n   * Sets the synchronous validators that are active on this control.  Calling\n   * this overwrites any existing synchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addValidators()` method instead.\n   */\n  setValidators(validators) {\n    this._assignValidators(validators);\n  }\n  /**\n   * Sets the asynchronous validators that are active on this control. Calling this\n   * overwrites any existing asynchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addAsyncValidators()` method instead.\n   */\n  setAsyncValidators(validators) {\n    this._assignAsyncValidators(validators);\n  }\n  /**\n   * Add a synchronous validator or validators to this control, without affecting other validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect. If duplicate validator functions\n   * are present in the `validators` array, only the first instance would be added to a form\n   * control.\n   *\n   * @param validators The new validator function or functions to add to this control.\n   */\n  addValidators(validators) {\n    this.setValidators(addValidators(validators, this._rawValidators));\n  }\n  /**\n   * Add an asynchronous validator or validators to this control, without affecting other\n   * validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect.\n   *\n   * @param validators The new asynchronous validator function or functions to add to this control.\n   */\n  addAsyncValidators(validators) {\n    this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Remove a synchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found,\n   * it is ignored.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<string | null>('', Validators.required);\n   * ctrl.removeValidators(Validators.required);\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<string | null>('', minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   *\n   * ctrl.removeValidators(minValidator);\n   * ```\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The validator or validators to remove.\n   */\n  removeValidators(validators) {\n    this.setValidators(removeValidators(validators, this._rawValidators));\n  }\n  /**\n   * Remove an asynchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found, it\n   * is ignored.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The asynchronous validator or validators to remove.\n   */\n  removeAsyncValidators(validators) {\n    this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Check whether a synchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<number | null>(0, Validators.required);\n   * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<number | null>(0, minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   * ```\n   *\n   * @param validator The validator to check for presence. Compared by function reference.\n   * @returns Whether the provided validator was found on this control.\n   */\n  hasValidator(validator) {\n    return hasValidator(this._rawValidators, validator);\n  }\n  /**\n   * Check whether an asynchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @param validator The asynchronous validator to check for presence. Compared by function\n   *     reference.\n   * @returns Whether the provided asynchronous validator was found on this control.\n   */\n  hasAsyncValidator(validator) {\n    return hasValidator(this._rawAsyncValidators, validator);\n  }\n  /**\n   * Empties out the synchronous validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearValidators() {\n    this.validator = null;\n  }\n  /**\n   * Empties out the async validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearAsyncValidators() {\n    this.asyncValidator = null;\n  }\n  markAsTouched(opts = {}) {\n    const changed = this.touched === false;\n    this.touched = true;\n    const sourceControl = opts.sourceControl ?? this;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsTouched({\n        ...opts,\n        sourceControl\n      });\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new TouchedChangeEvent(true, sourceControl));\n    }\n  }\n  /**\n   * Marks the control and all its descendant controls as `touched`.\n   * @see {@link markAsTouched()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `emitEvent`: When true or not supplied (the default), the `events`\n   * observable emits a `TouchedChangeEvent` with the `touched` property being `true`.\n   * When false, no events are emitted.\n   */\n  markAllAsTouched(opts = {}) {\n    this.markAsTouched({\n      onlySelf: true,\n      emitEvent: opts.emitEvent,\n      sourceControl: this\n    });\n    this._forEachChild(control => control.markAllAsTouched(opts));\n  }\n  markAsUntouched(opts = {}) {\n    const changed = this.touched === true;\n    this.touched = false;\n    this._pendingTouched = false;\n    const sourceControl = opts.sourceControl ?? this;\n    this._forEachChild(control => {\n      control.markAsUntouched({\n        onlySelf: true,\n        emitEvent: opts.emitEvent,\n        sourceControl\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts, sourceControl);\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new TouchedChangeEvent(false, sourceControl));\n    }\n  }\n  markAsDirty(opts = {}) {\n    const changed = this.pristine === true;\n    this.pristine = false;\n    const sourceControl = opts.sourceControl ?? this;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsDirty({\n        ...opts,\n        sourceControl\n      });\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new PristineChangeEvent(false, sourceControl));\n    }\n  }\n  markAsPristine(opts = {}) {\n    const changed = this.pristine === false;\n    this.pristine = true;\n    this._pendingDirty = false;\n    const sourceControl = opts.sourceControl ?? this;\n    this._forEachChild(control => {\n      /** We don't propagate the source control downwards */\n      control.markAsPristine({\n        onlySelf: true,\n        emitEvent: opts.emitEvent\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts, sourceControl);\n    }\n    if (changed && opts.emitEvent !== false) {\n      this._events.next(new PristineChangeEvent(true, sourceControl));\n    }\n  }\n  markAsPending(opts = {}) {\n    this.status = PENDING;\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsPending({\n        ...opts,\n        sourceControl\n      });\n    }\n  }\n  disable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = DISABLED;\n    this.errors = null;\n    this._forEachChild(control => {\n      /** We don't propagate the source control downwards */\n      control.disable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this._updateValue();\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new ValueChangeEvent(this.value, sourceControl));\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    }, this);\n    this._onDisabledChange.forEach(changeFn => changeFn(true));\n  }\n  /**\n   * Enables the control. This means the control is included in validation checks and\n   * the aggregate value of its parent. Its status recalculates based on its value and\n   * its validators.\n   *\n   * By default, if the control has children, all children are enabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configure options that control how the control propagates changes and\n   * emits events when marked as untouched\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`,\n   * `valueChanges` and `events`\n   * observables emit events with the latest status and value when the control is enabled.\n   * When false, no events are emitted.\n   */\n  enable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = VALID;\n    this._forEachChild(control => {\n      control.enable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    }, this);\n    this._onDisabledChange.forEach(changeFn => changeFn(false));\n  }\n  _updateAncestors(opts, sourceControl) {\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n      if (!opts.skipPristineCheck) {\n        this._parent._updatePristine({}, sourceControl);\n      }\n      this._parent._updateTouched({}, sourceControl);\n    }\n  }\n  /**\n   * Sets the parent of the control\n   *\n   * @param parent The new parent.\n   */\n  setParent(parent) {\n    this._parent = parent;\n  }\n  /**\n   * The raw value of this control. For most control implementations, the raw value will include\n   * disabled children.\n   */\n  getRawValue() {\n    return this.value;\n  }\n  updateValueAndValidity(opts = {}) {\n    this._setInitialStatus();\n    this._updateValue();\n    if (this.enabled) {\n      const shouldHaveEmitted = this._cancelExistingSubscription();\n      this.errors = this._runValidator();\n      this.status = this._calculateStatus();\n      if (this.status === VALID || this.status === PENDING) {\n        // If the canceled subscription should have emitted\n        // we make sure the async validator emits the status change on completion\n        this._runAsyncValidator(shouldHaveEmitted, opts.emitEvent);\n      }\n    }\n    const sourceControl = opts.sourceControl ?? this;\n    if (opts.emitEvent !== false) {\n      this._events.next(new ValueChangeEvent(this.value, sourceControl));\n      this._events.next(new StatusChangeEvent(this.status, sourceControl));\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity({\n        ...opts,\n        sourceControl\n      });\n    }\n  }\n  /** @internal */\n  _updateTreeValidity(opts = {\n    emitEvent: true\n  }) {\n    this._forEachChild(ctrl => ctrl._updateTreeValidity(opts));\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n  }\n  _setInitialStatus() {\n    this.status = this._allControlsDisabled() ? DISABLED : VALID;\n  }\n  _runValidator() {\n    return this.validator ? this.validator(this) : null;\n  }\n  _runAsyncValidator(shouldHaveEmitted, emitEvent) {\n    if (this.asyncValidator) {\n      this.status = PENDING;\n      this._hasOwnPendingAsyncValidator = {\n        emitEvent: emitEvent !== false\n      };\n      const obs = toObservable(this.asyncValidator(this));\n      this._asyncValidationSubscription = obs.subscribe(errors => {\n        this._hasOwnPendingAsyncValidator = null;\n        // This will trigger the recalculation of the validation status, which depends on\n        // the state of the asynchronous validation (whether it is in progress or not). So, it is\n        // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n        this.setErrors(errors, {\n          emitEvent,\n          shouldHaveEmitted\n        });\n      });\n    }\n  }\n  _cancelExistingSubscription() {\n    if (this._asyncValidationSubscription) {\n      this._asyncValidationSubscription.unsubscribe();\n      // we're cancelling the validator subscribtion, we keep if it should have emitted\n      // because we want to emit eventually if it was required at least once.\n      const shouldHaveEmitted = this._hasOwnPendingAsyncValidator?.emitEvent ?? false;\n      this._hasOwnPendingAsyncValidator = null;\n      return shouldHaveEmitted;\n    }\n    return false;\n  }\n  setErrors(errors, opts = {}) {\n    this.errors = errors;\n    this._updateControlsErrors(opts.emitEvent !== false, this, opts.shouldHaveEmitted);\n  }\n  /**\n   * Retrieves a child control given the control's name or path.\n   *\n   * @param path A dot-delimited string or array of string/number values that define the path to the\n   * control. If a string is provided, passing it as a string literal will result in improved type\n   * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n   * information to be available.\n   *\n   * @usageNotes\n   * ### Retrieve a nested control\n   *\n   * For example, to get a `name` control nested within a `person` sub-group:\n   *\n   * * `this.form.get('person.name');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n   *\n   * ### Retrieve a control in a FormArray\n   *\n   * When accessing an element inside a FormArray, you can use an element index.\n   * For example, to get a `price` control from the first element in an `items` array you can use:\n   *\n   * * `this.form.get('items.0.price');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['items', 0, 'price']);`\n   */\n  get(path) {\n    let currPath = path;\n    if (currPath == null) return null;\n    if (!Array.isArray(currPath)) currPath = currPath.split('.');\n    if (currPath.length === 0) return null;\n    return currPath.reduce((control, name) => control && control._find(name), this);\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    const control = path ? this.get(path) : this;\n    return control && control.errors ? control.errors[errorCode] : null;\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```ts\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return !!this.getError(errorCode, path);\n  }\n  /**\n   * Retrieves the top-level ancestor of this control.\n   */\n  get root() {\n    let x = this;\n    while (x._parent) {\n      x = x._parent;\n    }\n    return x;\n  }\n  /** @internal */\n  _updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted) {\n    this.status = this._calculateStatus();\n    if (emitEvent) {\n      this.statusChanges.emit(this.status);\n    }\n    // The Events Observable expose a slight different bevahior than the statusChanges obs\n    // An async validator will still emit a StatusChangeEvent is a previously cancelled\n    // async validator has emitEvent set to true\n    if (emitEvent || shouldHaveEmitted) {\n      this._events.next(new StatusChangeEvent(this.status, changedControl));\n    }\n    if (this._parent) {\n      this._parent._updateControlsErrors(emitEvent, changedControl, shouldHaveEmitted);\n    }\n  }\n  /** @internal */\n  _initObservables() {\n    // TODO: this should be piped from events() but is breaking in G3\n    this.valueChanges = new EventEmitter();\n    this.statusChanges = new EventEmitter();\n  }\n  _calculateStatus() {\n    if (this._allControlsDisabled()) return DISABLED;\n    if (this.errors) return INVALID;\n    if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING)) return PENDING;\n    if (this._anyControlsHaveStatus(INVALID)) return INVALID;\n    return VALID;\n  }\n  /** @internal */\n  _anyControlsHaveStatus(status) {\n    return this._anyControls(control => control.status === status);\n  }\n  /** @internal */\n  _anyControlsDirty() {\n    return this._anyControls(control => control.dirty);\n  }\n  /** @internal */\n  _anyControlsTouched() {\n    return this._anyControls(control => control.touched);\n  }\n  /** @internal */\n  _updatePristine(opts, changedControl) {\n    const newPristine = !this._anyControlsDirty();\n    const changed = this.pristine !== newPristine;\n    this.pristine = newPristine;\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts, changedControl);\n    }\n    if (changed) {\n      this._events.next(new PristineChangeEvent(this.pristine, changedControl));\n    }\n  }\n  /** @internal */\n  _updateTouched(opts = {}, changedControl) {\n    this.touched = this._anyControlsTouched();\n    this._events.next(new TouchedChangeEvent(this.touched, changedControl));\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts, changedControl);\n    }\n  }\n  /** @internal */\n  _onDisabledChange = [];\n  /** @internal */\n  _registerOnCollectionChange(fn) {\n    this._onCollectionChange = fn;\n  }\n  /** @internal */\n  _setUpdateStrategy(opts) {\n    if (isOptionsObj(opts) && opts.updateOn != null) {\n      this._updateOn = opts.updateOn;\n    }\n  }\n  /**\n   * Check to see if parent has been marked artificially dirty.\n   *\n   * @internal\n   */\n  _parentMarkedDirty(onlySelf) {\n    const parentDirty = this._parent && this._parent.dirty;\n    return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n  }\n  /** @internal */\n  _find(name) {\n    return null;\n  }\n  /**\n   * Internal implementation of the `setValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignValidators(validators) {\n    this._rawValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedValidatorFn = coerceToValidator(this._rawValidators);\n  }\n  /**\n   * Internal implementation of the `setAsyncValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignAsyncValidators(validators) {\n    this._rawAsyncValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n  }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```ts\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```ts\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```ts\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```ts\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n  /**\n   * Creates a new `FormGroup` instance.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateFormGroupControls(controls);\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n      // so we set `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  controls;\n  registerControl(name, control) {\n    if (this.controls[name]) return this.controls[name];\n    this.controls[name] = control;\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n    return control;\n  }\n  addControl(name, control, options = {}) {\n    this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Remove a control from this group. In a strongly-typed group, required controls cannot be\n   * removed.\n   *\n   * This method also updates the value and validity of the control.\n   *\n   * @param name The control name to remove from the collection\n   * @param options Specifies whether this FormGroup instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeControl(name, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  setControl(name, control, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    if (control) this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  contains(controlName) {\n    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n  }\n  /**\n   * Sets the value of the `FormGroup`. It accepts an object that matches\n   * the structure of the group, with control names as keys.\n   *\n   * @usageNotes\n   * ### Set the complete value for the form group\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl(),\n   *   last: new FormControl()\n   * });\n   *\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.setValue({first: 'Nancy', last: 'Drew'});\n   * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n   * ```\n   *\n   * @throws When strict checks fail, such as setting the value of a control\n   * that doesn't exist or if you exclude a value of a control that does exist.\n   *\n   * @param value The new value for the control that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events after the value changes.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, true, value);\n    Object.keys(value).forEach(name => {\n      assertControlPresent(this, true, name);\n      this.controls[name].setValue(value[name], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormGroup`. It accepts an object with control\n   * names as keys, and does its best to match the values to the correct controls\n   * in the group.\n   *\n   * It accepts both super-sets and sub-sets of the group without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the value for a form group\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *    first: new FormControl(),\n   *    last: new FormControl()\n   * });\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.patchValue({first: 'Nancy'});\n   * console.log(form.value);   // {first: 'Nancy', last: null}\n   * ```\n   *\n   * @param value The object that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes and\n   * emits events after the value is patched.\n   * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n   * true.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control value\n   * is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values, so\n    // we just ignore such cases when a field containing FormGroup instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    Object.keys(value).forEach(name => {\n      // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n      // `as any` is required.\n      const control = this.controls[name];\n      if (control) {\n        control.patchValue(/* Guaranteed to be present, due to the outer forEach. */value[name], {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n   * the value of all descendants to their default values, or null if no defaults were provided.\n   *\n   * You reset to a specific form state by passing in a map of states\n   * that matches the structure of your form, with control names as keys. The state\n   * is a standalone value or a form state object with both a value and a disabled\n   * status.\n   *\n   * @param value Resets the control with an initial value,\n   * or an object that defines the initial value and disabled state.\n   *\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events when the group is reset.\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * @usageNotes\n   *\n   * ### Reset the form group values\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * console.log(form.value);  // {first: 'first name', last: 'last name'}\n   *\n   * form.reset({ first: 'name', last: 'last name' });\n   *\n   * console.log(form.value);  // {first: 'name', last: 'last name'}\n   * ```\n   *\n   * ### Reset the form group values and disabled status\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * form.reset({\n   *   first: {value: 'name', disabled: true},\n   *   last: 'last'\n   * });\n   *\n   * console.log(form.value);  // {last: 'last'}\n   * console.log(form.get('first').status);  // 'DISABLED'\n   * ```\n   */\n  reset(value = {}, options = {}) {\n    this._forEachChild((control, name) => {\n      control.reset(value ? value[name] : null, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options, this);\n    this._updateTouched(options, this);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the `FormGroup`, including any disabled controls.\n   *\n   * Retrieves all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this._reduceChildren({}, (acc, control, name) => {\n      acc[name] = control.getRawValue();\n      return acc;\n    });\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    });\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    Object.keys(this.controls).forEach(key => {\n      // The list of controls can change (for ex. controls might be removed) while the loop\n      // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n      // have to null check before invoking the callback.\n      const control = this.controls[key];\n      control && cb(control, key);\n    });\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => {\n      control.setParent(this);\n      control._registerOnCollectionChange(this._onCollectionChange);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this._reduceValue();\n  }\n  /** @internal */\n  _anyControls(condition) {\n    for (const [controlName, control] of Object.entries(this.controls)) {\n      if (this.contains(controlName) && condition(control)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /** @internal */\n  _reduceValue() {\n    let acc = {};\n    return this._reduceChildren(acc, (acc, control, name) => {\n      if (control.enabled || this.disabled) {\n        acc[name] = control.value;\n      }\n      return acc;\n    });\n  }\n  /** @internal */\n  _reduceChildren(initValue, fn) {\n    let res = initValue;\n    this._forEachChild((control, name) => {\n      res = fn(res, control, name);\n    });\n    return res;\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const controlName of Object.keys(this.controls)) {\n      if (this.controls[controlName].enabled) {\n        return false;\n      }\n    }\n    return Object.keys(this.controls).length > 0 || this.disabled;\n  }\n  /** @internal */\n  _find(name) {\n    return this.controls.hasOwnProperty(name) ? this.controls[name] : null;\n  }\n}\n/**\n * Will validate that none of the controls has a key with a dot\n * Throws other wise\n */\nfunction validateFormGroupControls(controls) {\n  const invalidKeys = Object.keys(controls).filter(key => key.includes('.'));\n  if (invalidKeys.length > 0) {\n    // TODO: make this an error once there are no more uses in G3\n    console.warn(`FormGroup keys cannot include \\`.\\`, please replace the keys for: ${invalidKeys.join(',')}.`);\n  }\n}\nconst UntypedFormGroup = FormGroup;\n/**\n * @description\n * Asserts that the given control is an instance of `FormGroup`\n *\n * @publicApi\n */\nconst isFormGroup = control => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```ts\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {}\n/**\n * @description\n * Asserts that the given control is an instance of `FormRecord`\n *\n * @publicApi\n */\nconst isFormRecord = control => control instanceof FormRecord;\n\n/**\n * Token to provide to allow SetDisabledState to always be called when a CVA is added, regardless of\n * whether the control is disabled or enabled.\n *\n * @see {@link FormsModule#withconfig}\n */\nconst CALL_SET_DISABLED_STATE = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'CallSetDisabledState' : '', {\n  providedIn: 'root',\n  factory: () => setDisabledStateDefault\n});\n/**\n * Whether to use the fixed setDisabledState behavior by default.\n */\nconst setDisabledStateDefault = 'always';\nfunction controlPath(name, parent) {\n  return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir, callSetDisabledState = setDisabledStateDefault) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!control) _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor) _throwMissingValueAccessorError(dir);\n  }\n  setUpValidators(control, dir);\n  dir.valueAccessor.writeValue(control.value);\n  // The legacy behavior only calls the CVA's `setDisabledState` if the control is disabled.\n  // If the `callSetDisabledState` option is set to `always`, then this bug is fixed and\n  // the method is always called.\n  if (control.disabled || callSetDisabledState === 'always') {\n    dir.valueAccessor.setDisabledState?.(control.disabled);\n  }\n  setUpViewChangePipeline(control, dir);\n  setUpModelChangePipeline(control, dir);\n  setUpBlurPipeline(control, dir);\n  setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n  const noop = () => {\n    if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      _noControlError(dir);\n    }\n  };\n  // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n  // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n  // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n  // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n  // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n  if (dir.valueAccessor) {\n    dir.valueAccessor.registerOnChange(noop);\n    dir.valueAccessor.registerOnTouched(noop);\n  }\n  cleanUpValidators(control, dir);\n  if (control) {\n    dir._invokeOnDestroyCallbacks();\n    control._registerOnCollectionChange(() => {});\n  }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n  validators.forEach(validator => {\n    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(onChange);\n  });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n  if (dir.valueAccessor.setDisabledState) {\n    const onDisabledChange = isDisabled => {\n      dir.valueAccessor.setDisabledState(isDisabled);\n    };\n    control.registerOnDisabledChange(onDisabledChange);\n    // Register a callback function to cleanup disabled change handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n      control._unregisterOnDisabledChange(onDisabledChange);\n    });\n  }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n  const validators = getControlValidators(control);\n  if (dir.validator !== null) {\n    control.setValidators(mergeValidators(validators, dir.validator));\n  } else if (typeof validators === 'function') {\n    // If sync validators are represented by a single validator function, we force the\n    // `Validators.compose` call to happen by executing the `setValidators` function with\n    // an array that contains that function. We need this to avoid possible discrepancies in\n    // validators behavior, so sync validators are always processed by the `Validators.compose`.\n    // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n    // have consistent behavior on AbstractControl API level. The same applies to the async\n    // validators logic below.\n    control.setValidators([validators]);\n  }\n  const asyncValidators = getControlAsyncValidators(control);\n  if (dir.asyncValidator !== null) {\n    control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n  } else if (typeof asyncValidators === 'function') {\n    control.setAsyncValidators([asyncValidators]);\n  }\n  // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  const onValidatorChange = () => control.updateValueAndValidity();\n  registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n  registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n  let isControlUpdated = false;\n  if (control !== null) {\n    if (dir.validator !== null) {\n      const validators = getControlValidators(control);\n      if (Array.isArray(validators) && validators.length > 0) {\n        // Filter out directive validator function.\n        const updatedValidators = validators.filter(validator => validator !== dir.validator);\n        if (updatedValidators.length !== validators.length) {\n          isControlUpdated = true;\n          control.setValidators(updatedValidators);\n        }\n      }\n    }\n    if (dir.asyncValidator !== null) {\n      const asyncValidators = getControlAsyncValidators(control);\n      if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n        // Filter out directive async validator function.\n        const updatedAsyncValidators = asyncValidators.filter(asyncValidator => asyncValidator !== dir.asyncValidator);\n        if (updatedAsyncValidators.length !== asyncValidators.length) {\n          isControlUpdated = true;\n          control.setAsyncValidators(updatedAsyncValidators);\n        }\n      }\n    }\n  }\n  // Clear onValidatorChange callbacks by providing a noop function.\n  const noop = () => {};\n  registerOnValidatorChange(dir._rawValidators, noop);\n  registerOnValidatorChange(dir._rawAsyncValidators, noop);\n  return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n  dir.valueAccessor.registerOnChange(newValue => {\n    control._pendingValue = newValue;\n    control._pendingChange = true;\n    control._pendingDirty = true;\n    if (control.updateOn === 'change') updateControl(control, dir);\n  });\n}\nfunction setUpBlurPipeline(control, dir) {\n  dir.valueAccessor.registerOnTouched(() => {\n    control._pendingTouched = true;\n    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);\n    if (control.updateOn !== 'submit') control.markAsTouched();\n  });\n}\nfunction updateControl(control, dir) {\n  if (control._pendingDirty) control.markAsDirty();\n  control.setValue(control._pendingValue, {\n    emitModelToViewChange: false\n  });\n  dir.viewToModelUpdate(control._pendingValue);\n  control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n  const onChange = (newValue, emitModelEvent) => {\n    // control -> view\n    dir.valueAccessor.writeValue(newValue);\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  };\n  control.registerOnChange(onChange);\n  // Register a callback function to cleanup onChange handler\n  // from a control instance when a directive is destroyed.\n  dir._registerOnDestroy(() => {\n    control._unregisterOnChange(onChange);\n  });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n  if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'Cannot find control with');\n  setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n  return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n  const messageEnd = _describeControlLocation(dir);\n  throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n  const path = dir.path;\n  if (path && path.length > 1) return `path: '${path.join(' -> ')}'`;\n  if (path?.[0]) return `name: '${path}'`;\n  return 'unspecified name attribute';\n}\nfunction _throwMissingValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new _RuntimeError(-1203 /* RuntimeErrorCode.NG_MISSING_VALUE_ACCESSOR */, `No value accessor for form control ${loc}.`);\n}\nfunction _throwInvalidValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new _RuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` + `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n  if (!changes.hasOwnProperty('model')) return false;\n  const change = changes['model'];\n  if (change.isFirstChange()) return true;\n  return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n  // Check if a given value accessor is an instance of a class that directly extends\n  // `BuiltInControlValueAccessor` one.\n  return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n  form._syncPendingControls();\n  directives.forEach(dir => {\n    const control = dir.control;\n    if (control.updateOn === 'submit' && control._pendingChange) {\n      dir.viewToModelUpdate(control._pendingValue);\n      control._pendingChange = false;\n    }\n  });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n  if (!valueAccessors) return null;\n  if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwInvalidValueAccessorError(dir);\n  let defaultAccessor = undefined;\n  let builtinAccessor = undefined;\n  let customAccessor = undefined;\n  valueAccessors.forEach(v => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n    } else {\n      if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    _throwError(dir, 'No valid value accessor for form control with');\n  }\n  return null;\n}\nfunction removeListItem$1(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n  if (warningConfig === 'never') return;\n  if ((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce || warningConfig === 'always' && !instance._ngModelWarningSent) {\n    console.warn(ngModelWarning(name));\n    type._ngModelWarningSentOnce = true;\n    instance._ngModelWarningSent = true;\n  }\n}\nconst formDirectiveProvider$1 = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => NgForm)\n};\nconst resolvedPromise$1 = /*#__PURE__*/(() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgForm = /*#__PURE__*/(() => {\n  class NgForm extends ControlContainer {\n    callSetDisabledState;\n    /**\n     * @description\n     * Returns whether the form submission has been triggered.\n     */\n    get submitted() {\n      return untracked(this.submittedReactive);\n    }\n    /** @internal */\n    _submitted = computed(() => this.submittedReactive());\n    submittedReactive = signal(false);\n    _directives = new Set();\n    /**\n     * @description\n     * The `FormGroup` instance created for this form.\n     */\n    form;\n    /**\n     * @description\n     * Event emitter for the \"ngSubmit\" event\n     */\n    ngSubmit = new EventEmitter();\n    /**\n     * @description\n     * Tracks options for the `NgForm` instance.\n     *\n     * **updateOn**: Sets the default `updateOn` value for all child `NgModels` below it\n     * unless explicitly set by a child `NgModel` using `ngModelOptions`). Defaults to 'change'.\n     * Possible values: `'change'` | `'blur'` | `'submit'`.\n     *\n     */\n    options;\n    constructor(validators, asyncValidators, callSetDisabledState) {\n      super();\n      this.callSetDisabledState = callSetDisabledState;\n      this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /** @nodoc */\n    ngAfterViewInit() {\n      this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n      return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n      return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        dir.control = container.registerControl(dir.name, dir.control);\n        setUpControl(dir.control, dir, this.callSetDisabledState);\n        dir.control.updateValueAndValidity({\n          emitEvent: false\n        });\n        this._directives.add(dir);\n      });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        if (container) {\n          container.removeControl(dir.name);\n        }\n        this._directives.delete(dir);\n      });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        const group = new FormGroup({});\n        setUpFormContainer(group, dir);\n        container.registerControl(dir.name, group);\n        group.updateValueAndValidity({\n          emitEvent: false\n        });\n      });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        if (container) {\n          container.removeControl(dir.name);\n        }\n      });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n      resolvedPromise$1.then(() => {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n      });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n      this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n      this.submittedReactive.set(true);\n      syncPendingControls(this.form, this._directives);\n      this.ngSubmit.emit($event);\n      // Forms with `method=\"dialog\"` have some special behavior\n      // that won't reload the page and that shouldn't be prevented.\n      return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n      this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n      this.form.reset(value);\n      this.submittedReactive.set(false);\n    }\n    _setUpdateStrategy() {\n      if (this.options && this.options.updateOn != null) {\n        this.form._updateOn = this.options.updateOn;\n      }\n    }\n    _findContainer(path) {\n      path.pop();\n      return path.length ? this.form.get(path) : this.form;\n    }\n    static ɵfac = function NgForm_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgForm)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgForm,\n      selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]],\n      hostBindings: function NgForm_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) {\n            return ctx.onSubmit($event);\n          })(\"reset\", function NgForm_reset_HostBindingHandler() {\n            return ctx.onReset();\n          });\n        }\n      },\n      inputs: {\n        options: [0, \"ngFormOptions\", \"options\"]\n      },\n      outputs: {\n        ngSubmit: \"ngSubmit\"\n      },\n      exportAs: [\"ngForm\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formDirectiveProvider$1]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgForm;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction removeListItem(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\nfunction isFormControlState(formState) {\n  return typeof formState === 'object' && formState !== null && Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n}\nconst FormControl = class FormControl extends AbstractControl {\n  /** @publicApi */\n  defaultValue = null;\n  /** @internal */\n  _onChange = [];\n  /** @internal */\n  _pendingValue;\n  /** @internal */\n  _pendingChange = false;\n  constructor(\n  // formState and defaultValue will only be null if T is nullable\n  formState = null, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this._applyFormState(formState);\n    this._setUpdateStrategy(validatorOrOpts);\n    this._initObservables();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set\n      // `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n    if (isOptionsObj(validatorOrOpts) && (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n      if (isFormControlState(formState)) {\n        this.defaultValue = formState.value;\n      } else {\n        this.defaultValue = formState;\n      }\n    }\n  }\n  setValue(value, options = {}) {\n    this.value = this._pendingValue = value;\n    if (this._onChange.length && options.emitModelToViewChange !== false) {\n      this._onChange.forEach(changeFn => changeFn(this.value, options.emitViewToModelChange !== false));\n    }\n    this.updateValueAndValidity(options);\n  }\n  patchValue(value, options = {}) {\n    this.setValue(value, options);\n  }\n  reset(formState = this.defaultValue, options = {}) {\n    this._applyFormState(formState);\n    this.markAsPristine(options);\n    this.markAsUntouched(options);\n    this.setValue(this.value, options);\n    this._pendingChange = false;\n  }\n  /**  @internal */\n  _updateValue() {}\n  /**  @internal */\n  _anyControls(condition) {\n    return false;\n  }\n  /**  @internal */\n  _allControlsDisabled() {\n    return this.disabled;\n  }\n  registerOnChange(fn) {\n    this._onChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnChange(fn) {\n    removeListItem(this._onChange, fn);\n  }\n  registerOnDisabledChange(fn) {\n    this._onDisabledChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnDisabledChange(fn) {\n    removeListItem(this._onDisabledChange, fn);\n  }\n  /** @internal */\n  _forEachChild(cb) {}\n  /** @internal */\n  _syncPendingControls() {\n    if (this.updateOn === 'submit') {\n      if (this._pendingDirty) this.markAsDirty();\n      if (this._pendingTouched) this.markAsTouched();\n      if (this._pendingChange) {\n        this.setValue(this._pendingValue, {\n          onlySelf: true,\n          emitModelToViewChange: false\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n  _applyFormState(formState) {\n    if (isFormControlState(formState)) {\n      this.value = this._pendingValue = formState.value;\n      formState.disabled ? this.disable({\n        onlySelf: true,\n        emitEvent: false\n      }) : this.enable({\n        onlySelf: true,\n        emitEvent: false\n      });\n    } else {\n      this.value = this._pendingValue = formState;\n    }\n  }\n};\nconst UntypedFormControl = FormControl;\n/**\n * @description\n * Asserts that the given control is an instance of `FormControl`\n *\n * @publicApi\n */\nconst isFormControl = control => control instanceof FormControl;\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nlet AbstractFormGroupDirective = /*#__PURE__*/(() => {\n  class AbstractFormGroupDirective extends ControlContainer {\n    /**\n     * @description\n     * The parent control for the group\n     *\n     * @internal\n     */\n    _parent;\n    /** @nodoc */\n    ngOnInit() {\n      this._checkParentType();\n      // Register the group with its parent group.\n      this.formDirective.addFormGroup(this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        // Remove the group from its parent group.\n        this.formDirective.removeFormGroup(this);\n      }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n      return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /** @internal */\n    _checkParentType() {}\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵAbstractFormGroupDirective_BaseFactory;\n      return function AbstractFormGroupDirective_Factory(__ngFactoryType__) {\n        return (ɵAbstractFormGroupDirective_BaseFactory || (ɵAbstractFormGroupDirective_BaseFactory = i0.ɵɵgetInheritedFactory(AbstractFormGroupDirective)))(__ngFactoryType__ || AbstractFormGroupDirective);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: AbstractFormGroupDirective,\n      standalone: false,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return AbstractFormGroupDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction modelParentException() {\n  return new _RuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n  return new _RuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n  return new _RuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n  return new _RuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nconst modelGroupProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgModelGroup = /*#__PURE__*/(() => {\n  class NgModelGroup extends AbstractFormGroupDirective {\n    /**\n     * @description\n     * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n     * to a key in the parent `NgForm`.\n     */\n    name = '';\n    constructor(parent, validators, asyncValidators) {\n      super();\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n      if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw modelGroupParentException();\n      }\n    }\n    static ɵfac = function NgModelGroup_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgModelGroup)(i0.ɵɵdirectiveInject(ControlContainer, 5), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgModelGroup,\n      selectors: [[\"\", \"ngModelGroup\", \"\"]],\n      inputs: {\n        name: [0, \"ngModelGroup\", \"name\"]\n      },\n      exportAs: [\"ngModelGroup\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([modelGroupProvider]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NgModelGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formControlBinding$1 = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => NgModel)\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```html\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = /*#__PURE__*/(() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a [domain\n * model](https://en.wikipedia.org/wiki/Domain_model) and binds it to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see {@link RadioControlValueAccessor}\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgModel = /*#__PURE__*/(() => {\n  class NgModel extends NgControl {\n    _changeDetectorRef;\n    callSetDisabledState;\n    control = new FormControl();\n    // At runtime we coerce arbitrary values assigned to the \"disabled\" input to a \"boolean\".\n    // This is not reflected in the type of the property because outside of templates, consumers\n    // should only deal with booleans. In templates, a string is allowed for convenience and to\n    // match the native \"disabled attribute\" semantics which can be observed on input elements.\n    // This static member tells the compiler that values of type \"string\" can also be assigned\n    // to the input in a template.\n    /** @nodoc */\n    static ngAcceptInputType_isDisabled;\n    /** @internal */\n    _registered = false;\n    /**\n     * Internal reference to the view model value.\n     * @nodoc\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the name bound to the directive. If a parent form exists, it\n     * uses this name as a key to retrieve this control's value.\n     */\n    name = '';\n    /**\n     * @description\n     * Tracks whether the control is disabled.\n     */\n    isDisabled;\n    /**\n     * @description\n     * Tracks the value bound to this directive.\n     */\n    model;\n    /**\n     * @description\n     * Tracks the configuration options for this `ngModel` instance.\n     *\n     * **name**: An alternative to setting the name attribute on the form control element. See\n     * the [example](api/forms/NgModel#using-ngmodel-on-a-standalone-control) for using `NgModel`\n     * as a standalone control.\n     *\n     * **standalone**: When set to true, the `ngModel` will not register itself with its parent form,\n     * and acts as if it's not in the form. Defaults to false. If no parent form exists, this option\n     * has no effect.\n     *\n     * **updateOn**: Defines the event upon which the form control value and validity update.\n     * Defaults to 'change'. Possible values: `'change'` | `'blur'` | `'submit'`.\n     *\n     */\n    options;\n    /**\n     * @description\n     * Event emitter for producing the `ngModelChange` event after\n     * the view model updates.\n     */\n    update = new EventEmitter();\n    constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef, callSetDisabledState) {\n      super();\n      this._changeDetectorRef = _changeDetectorRef;\n      this.callSetDisabledState = callSetDisabledState;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      this._checkForErrors();\n      if (!this._registered || 'name' in changes) {\n        if (this._registered) {\n          this._checkName();\n          if (this.formDirective) {\n            // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n            // changed. We also can't reset the name temporarily since the logic in `removeControl`\n            // is inside a promise and it won't run immediately. We work around it by giving it an\n            // object with the same shape instead.\n            const oldName = changes['name'].previousValue;\n            this.formDirective.removeControl({\n              name: oldName,\n              path: this._getPath(oldName)\n            });\n          }\n        }\n        this._setUpControl();\n      }\n      if ('isDisabled' in changes) {\n        this._updateDisabled(changes);\n      }\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        this._updateValue(this.model);\n        this.viewModel = this.model;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return this._getPath(this.name);\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    _setUpControl() {\n      this._setUpdateStrategy();\n      this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n      this._registered = true;\n    }\n    _setUpdateStrategy() {\n      if (this.options && this.options.updateOn != null) {\n        this.control._updateOn = this.options.updateOn;\n      }\n    }\n    _isStandalone() {\n      return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n      setUpControl(this.control, this, this.callSetDisabledState);\n      this.control.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    _checkForErrors() {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._isStandalone()) {\n        checkParentType$1(this._parent);\n      }\n      this._checkName();\n    }\n    _checkName() {\n      if (this.options && this.options.name) this.name = this.options.name;\n      if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw missingNameException();\n      }\n    }\n    _updateValue(value) {\n      resolvedPromise.then(() => {\n        this.control.setValue(value, {\n          emitViewToModelChange: false\n        });\n        this._changeDetectorRef?.markForCheck();\n      });\n    }\n    _updateDisabled(changes) {\n      const disabledValue = changes['isDisabled'].currentValue;\n      // checking for 0 to avoid breaking change\n      const isDisabled = disabledValue !== 0 && booleanAttribute(disabledValue);\n      resolvedPromise.then(() => {\n        if (isDisabled && !this.control.disabled) {\n          this.control.disable();\n        } else if (!isDisabled && this.control.disabled) {\n          this.control.enable();\n        }\n        this._changeDetectorRef?.markForCheck();\n      });\n    }\n    _getPath(controlName) {\n      return this._parent ? controlPath(controlName, this._parent) : [controlName];\n    }\n    static ɵfac = function NgModel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgModel)(i0.ɵɵdirectiveInject(ControlContainer, 9), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgModel,\n      selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]],\n      inputs: {\n        name: \"name\",\n        isDisabled: [0, \"disabled\", \"isDisabled\"],\n        model: [0, \"ngModel\", \"model\"],\n        options: [0, \"ngModelOptions\", \"options\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      exportAs: [\"ngModel\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formControlBinding$1]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return NgModel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction checkParentType$1(parent) {\n  if (!(parent instanceof NgModelGroup) && parent instanceof AbstractFormGroupDirective) {\n    throw formGroupNameException();\n  } else if (!(parent instanceof NgModelGroup) && !(parent instanceof NgForm)) {\n    throw modelParentException();\n  }\n}\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```html\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nlet ɵNgNoValidate = /*#__PURE__*/(() => {\n  class ɵNgNoValidate {\n    static ɵfac = function ɵNgNoValidate_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ɵNgNoValidate)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ɵNgNoValidate,\n      selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]],\n      hostAttrs: [\"novalidate\", \"\"],\n      standalone: false\n    });\n  }\n  return ɵNgNoValidate;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => NumberValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NumberValueAccessor = /*#__PURE__*/(() => {\n  class NumberValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n      const normalizedValue = value == null ? '' : value;\n      this.setProperty('value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = value => {\n        fn(value == '' ? null : parseFloat(value));\n      };\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵNumberValueAccessor_BaseFactory;\n      return function NumberValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵNumberValueAccessor_BaseFactory || (ɵNumberValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(NumberValueAccessor)))(__ngFactoryType__ || NumberValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NumberValueAccessor,\n      selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]],\n      hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return NumberValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => RadioControlValueAccessor),\n  multi: true\n};\nfunction throwNameError() {\n  throw new _RuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nlet RadioControlRegistry = /*#__PURE__*/(() => {\n  class RadioControlRegistry {\n    _accessors = [];\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n      this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n      for (let i = this._accessors.length - 1; i >= 0; --i) {\n        if (this._accessors[i][1] === accessor) {\n          this._accessors.splice(i, 1);\n          return;\n        }\n      }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n      this._accessors.forEach(c => {\n        if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n          c[1].fireUncheck(accessor.value);\n        }\n      });\n    }\n    _isSameGroup(controlPair, accessor) {\n      if (!controlPair[0].control) return false;\n      return controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name;\n    }\n    static ɵfac = function RadioControlRegistry_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RadioControlRegistry)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: RadioControlRegistry,\n      factory: RadioControlRegistry.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return RadioControlRegistry;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet RadioControlValueAccessor = /*#__PURE__*/(() => {\n  class RadioControlValueAccessor extends BuiltInControlValueAccessor {\n    _registry;\n    _injector;\n    /** @internal */\n    _state;\n    /** @internal */\n    _control;\n    /** @internal */\n    _fn;\n    setDisabledStateFired = false;\n    /**\n     * The registered callback function called when a change event occurs on the input element.\n     * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n     * to override the `onChange` function (which expects 1 argument) in the parent\n     * `BaseControlValueAccessor` class.\n     * @nodoc\n     */\n    onChange = () => {};\n    /**\n     * @description\n     * Tracks the name of the radio input element.\n     */\n    name;\n    /**\n     * @description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     */\n    formControlName;\n    /**\n     * @description\n     * Tracks the value of the radio input element\n     */\n    value;\n    callSetDisabledState = inject(CALL_SET_DISABLED_STATE, {\n      optional: true\n    }) ?? setDisabledStateDefault;\n    constructor(renderer, elementRef, _registry, _injector) {\n      super(renderer, elementRef);\n      this._registry = _registry;\n      this._injector = _injector;\n    }\n    /** @nodoc */\n    ngOnInit() {\n      this._control = this._injector.get(NgControl);\n      this._checkName();\n      this._registry.add(this._control, this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this._registry.remove(this);\n    }\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this._state = value === this.value;\n      this.setProperty('checked', this._state);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this._fn = fn;\n      this.onChange = () => {\n        fn(this.value);\n        this._registry.select(this);\n      };\n    }\n    /** @nodoc */\n    setDisabledState(isDisabled) {\n      /**\n       * `setDisabledState` is supposed to be called whenever the disabled state of a control changes,\n       * including upon control creation. However, a longstanding bug caused the method to not fire\n       * when an *enabled* control was attached. This bug was fixed in v15 in #47576.\n       *\n       * This had a side effect: previously, it was possible to instantiate a reactive form control\n       * with `[attr.disabled]=true`, even though the corresponding control was enabled in the\n       * model. This resulted in a mismatch between the model and the DOM. Now, because\n       * `setDisabledState` is always called, the value in the DOM will be immediately overwritten\n       * with the \"correct\" enabled value.\n       *\n       * However, the fix also created an exceptional case: radio buttons. Because Reactive Forms\n       * models the entire group of radio buttons as a single `FormControl`, there is no way to\n       * control the disabled state for individual radios, so they can no longer be configured as\n       * disabled. Thus, we keep the old behavior for radio buttons, so that `[attr.disabled]`\n       * continues to work. Specifically, we drop the first call to `setDisabledState` if `disabled`\n       * is `false`, and we are not in legacy mode.\n       */\n      if (this.setDisabledStateFired || isDisabled || this.callSetDisabledState === 'whenDisabledForLegacyCode') {\n        this.setProperty('disabled', isDisabled);\n      }\n      this.setDisabledStateFired = true;\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n      this.writeValue(value);\n    }\n    _checkName() {\n      if (this.name && this.formControlName && this.name !== this.formControlName && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwNameError();\n      }\n      if (!this.name && this.formControlName) this.name = this.formControlName;\n    }\n    static ɵfac = function RadioControlValueAccessor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RadioControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(RadioControlRegistry), i0.ɵɵdirectiveInject(i0.Injector));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RadioControlValueAccessor,\n      selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]],\n      hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() {\n            return ctx.onChange();\n          })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        name: \"name\",\n        formControlName: \"formControlName\",\n        value: \"value\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return RadioControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst RANGE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => RangeValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```html\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet RangeValueAccessor = /*#__PURE__*/(() => {\n  class RangeValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.setProperty('value', parseFloat(value));\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = value => {\n        fn(value == '' ? null : parseFloat(value));\n      };\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵRangeValueAccessor_BaseFactory;\n      return function RangeValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵRangeValueAccessor_BaseFactory || (ɵRangeValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(RangeValueAccessor)))(__ngFactoryType__ || RangeValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RangeValueAccessor,\n      selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]],\n      hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return RangeValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgModelWithFormControlWarning' : '');\nconst formControlBinding = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormControlDirective = /*#__PURE__*/(() => {\n  class FormControlDirective extends NgControl {\n    _ngModelWarningConfig;\n    callSetDisabledState;\n    /**\n     * Internal reference to the view model value.\n     * @nodoc\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the `FormControl` instance bound to the directive.\n     */\n    form;\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(disabledAttrWarning);\n      }\n    }\n    // TODO(kara): remove next 4 properties once deprecation period is over\n    /** @deprecated as of v6 */\n    model;\n    /** @deprecated as of v6 */\n    update = new EventEmitter();\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static _ngModelWarningSentOnce = false;\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    _ngModelWarningSent = false;\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig, callSetDisabledState) {\n      super();\n      this._ngModelWarningConfig = _ngModelWarningConfig;\n      this.callSetDisabledState = callSetDisabledState;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (this._isControlChanged(changes)) {\n        const previousForm = changes['form'].previousValue;\n        if (previousForm) {\n          cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */false);\n        }\n        setUpControl(this.form, this, this.callSetDisabledState);\n        this.form.updateValueAndValidity({\n          emitEvent: false\n        });\n      }\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n        }\n        this.form.setValue(this.model);\n        this.viewModel = this.model;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.form) {\n        cleanUpControl(this.form, this, /* validateControlPresenceOnChange */false);\n      }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n      return changes.hasOwnProperty('form');\n    }\n    static ɵfac = function FormControlDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormControlDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormControlDirective,\n      selectors: [[\"\", \"formControl\", \"\"]],\n      inputs: {\n        form: [0, \"formControl\", \"form\"],\n        isDisabled: [0, \"disabled\", \"isDisabled\"],\n        model: [0, \"ngModel\", \"model\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      exportAs: [\"ngForm\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formControlBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return FormControlDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formDirectiveProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormGroupDirective = /*#__PURE__*/(() => {\n  class FormGroupDirective extends ControlContainer {\n    callSetDisabledState;\n    /**\n     * @description\n     * Reports whether the form submission has been triggered.\n     */\n    get submitted() {\n      return untracked(this._submittedReactive);\n    }\n    // TODO(atscott): Remove once invalid API usage is cleaned up internally\n    set submitted(value) {\n      this._submittedReactive.set(value);\n    }\n    /** @internal */\n    _submitted = computed(() => this._submittedReactive());\n    _submittedReactive = signal(false);\n    /**\n     * Reference to an old form group input value, which is needed to cleanup\n     * old instance in case it was replaced with a new one.\n     */\n    _oldForm;\n    /**\n     * Callback that should be invoked when controls in FormGroup or FormArray collection change\n     * (added or removed). This callback triggers corresponding DOM updates.\n     */\n    _onCollectionChange = () => this._updateDomValue();\n    /**\n     * @description\n     * Tracks the list of added `FormControlName` instances\n     */\n    directives = [];\n    /**\n     * @description\n     * Tracks the `FormGroup` bound to this directive.\n     */\n    form = null;\n    /**\n     * @description\n     * Emits an event when the form submission has been triggered.\n     */\n    ngSubmit = new EventEmitter();\n    constructor(validators, asyncValidators, callSetDisabledState) {\n      super();\n      this.callSetDisabledState = callSetDisabledState;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this.form) {\n        throw missingFormException();\n      }\n      if (changes.hasOwnProperty('form')) {\n        this._updateValidators();\n        this._updateDomValue();\n        this._updateRegistrations();\n        this._oldForm = this.form;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.form) {\n        cleanUpValidators(this.form, this);\n        // Currently the `onCollectionChange` callback is rewritten each time the\n        // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n        // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n        // Otherwise it might cause overriding a callback of some other directive instances. We should\n        // consider updating this logic later to make it similar to how `onChange` callbacks are\n        // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n        if (this.form._onCollectionChange === this._onCollectionChange) {\n          this.form._registerOnCollectionChange(() => {});\n        }\n      }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n      return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n      const ctrl = this.form.get(dir.path);\n      setUpControl(ctrl, dir, this.callSetDisabledState);\n      ctrl.updateValueAndValidity({\n        emitEvent: false\n      });\n      this.directives.push(dir);\n      return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n      cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */false);\n      removeListItem$1(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n      this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) {\n      this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n      this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) {\n      this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n      const ctrl = this.form.get(dir.path);\n      ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n      this._submittedReactive.set(true);\n      syncPendingControls(this.form, this.directives);\n      this.ngSubmit.emit($event);\n      this.form._events.next(new FormSubmittedEvent(this.control));\n      // Forms with `method=\"dialog\"` have some special behavior that won't reload the page and that\n      // shouldn't be prevented. Note that we need to null check the `event` and the `target`, because\n      // some internal apps call this method directly with the wrong arguments.\n      return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n      this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n      this.form.reset(value);\n      this._submittedReactive.set(false);\n      this.form._events.next(new FormResetEvent(this.form));\n    }\n    /** @internal */\n    _updateDomValue() {\n      this.directives.forEach(dir => {\n        const oldCtrl = dir.control;\n        const newCtrl = this.form.get(dir.path);\n        if (oldCtrl !== newCtrl) {\n          // Note: the value of the `dir.control` may not be defined, for example when it's a first\n          // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n          cleanUpControl(oldCtrl || null, dir);\n          // Check whether new control at the same location inside the corresponding `FormGroup` is an\n          // instance of `FormControl` and perform control setup only if that's the case.\n          // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n          // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n          // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n          if (isFormControl(newCtrl)) {\n            setUpControl(newCtrl, dir, this.callSetDisabledState);\n            dir.control = newCtrl;\n          }\n        }\n      });\n      this.form._updateTreeValidity({\n        emitEvent: false\n      });\n    }\n    _setUpFormContainer(dir) {\n      const ctrl = this.form.get(dir.path);\n      setUpFormContainer(ctrl, dir);\n      // NOTE: this operation looks unnecessary in case no new validators were added in\n      // `setUpFormContainer` call. Consider updating this code to match the logic in\n      // `_cleanUpFormContainer` function.\n      ctrl.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    _cleanUpFormContainer(dir) {\n      if (this.form) {\n        const ctrl = this.form.get(dir.path);\n        if (ctrl) {\n          const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n          if (isControlUpdated) {\n            // Run validity check only in case a control was updated (i.e. view validators were\n            // removed) as removing view validators might cause validity to change.\n            ctrl.updateValueAndValidity({\n              emitEvent: false\n            });\n          }\n        }\n      }\n    }\n    _updateRegistrations() {\n      this.form._registerOnCollectionChange(this._onCollectionChange);\n      if (this._oldForm) {\n        this._oldForm._registerOnCollectionChange(() => {});\n      }\n    }\n    _updateValidators() {\n      setUpValidators(this.form, this);\n      if (this._oldForm) {\n        cleanUpValidators(this._oldForm, this);\n      }\n    }\n    static ɵfac = function FormGroupDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormGroupDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormGroupDirective,\n      selectors: [[\"\", \"formGroup\", \"\"]],\n      hostBindings: function FormGroupDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) {\n            return ctx.onSubmit($event);\n          })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() {\n            return ctx.onReset();\n          });\n        }\n      },\n      inputs: {\n        form: [0, \"formGroup\", \"form\"]\n      },\n      outputs: {\n        ngSubmit: \"ngSubmit\"\n      },\n      exportAs: [\"ngForm\"],\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formDirectiveProvider]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return FormGroupDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formGroupNameProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormGroupName = /*#__PURE__*/(() => {\n  class FormGroupName extends AbstractFormGroupDirective {\n    /**\n     * @description\n     * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form groups to be bound\n     * to indices when iterating over groups in a `FormArray`.\n     */\n    name = null;\n    constructor(parent, validators, asyncValidators) {\n      super();\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n      if (hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw groupParentException();\n      }\n    }\n    static ɵfac = function FormGroupName_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormGroupName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormGroupName,\n      selectors: [[\"\", \"formGroupName\", \"\"]],\n      inputs: {\n        name: [0, \"formGroupName\", \"name\"]\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formGroupNameProvider]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return FormGroupName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formArrayNameProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormArrayName = /*#__PURE__*/(() => {\n  class FormArrayName extends ControlContainer {\n    /** @internal */\n    _parent;\n    /**\n     * @description\n     * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form arrays to be bound\n     * to indices when iterating over arrays in a `FormArray`.\n     */\n    name = null;\n    constructor(parent, validators, asyncValidators) {\n      super();\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /**\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     * @throws If the directive does not have a valid parent.\n     * @nodoc\n     */\n    ngOnInit() {\n      if (hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw arrayParentException();\n      }\n      this.formDirective.addFormArray(this);\n    }\n    /**\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @nodoc\n     */\n    ngOnDestroy() {\n      this.formDirective?.removeFormArray(this);\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n      return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    static ɵfac = function FormArrayName_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormArrayName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormArrayName,\n      selectors: [[\"\", \"formArrayName\", \"\"]],\n      inputs: {\n        name: [0, \"formArrayName\", \"name\"]\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([formArrayNameProvider]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return FormArrayName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction hasInvalidParent(parent) {\n  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName);\n}\nconst controlNameBinding = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormControlName = /*#__PURE__*/(() => {\n  class FormControlName extends NgControl {\n    _ngModelWarningConfig;\n    _added = false;\n    /**\n     * Internal reference to the view model value.\n     * @internal\n     */\n    viewModel;\n    /**\n     * @description\n     * Tracks the `FormControl` instance bound to the directive.\n     */\n    control;\n    /**\n     * @description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form controls to be bound\n     * to indices when iterating over controls in a `FormArray`.\n     */\n    name = null;\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(disabledAttrWarning);\n      }\n    }\n    // TODO(kara): remove next 4 properties once deprecation period is over\n    /** @deprecated as of v6 */\n    model;\n    /** @deprecated as of v6 */\n    update = new EventEmitter();\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static _ngModelWarningSentOnce = false;\n    /**\n     * @description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular FormControlName instance. Used to support warning config of \"always\".\n     *\n     * @internal\n     */\n    _ngModelWarningSent = false;\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n      super();\n      this._ngModelWarningConfig = _ngModelWarningConfig;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (!this._added) this._setUpControl();\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n        }\n        this.viewModel = this.model;\n        this.formDirective.updateModel(this, this.model);\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        this.formDirective.removeControl(this);\n      }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    _setUpControl() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        checkParentType(this._parent, this.name);\n      }\n      this.control = this.formDirective.addControl(this);\n      this._added = true;\n    }\n    static ɵfac = function FormControlName_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormControlName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FormControlName,\n      selectors: [[\"\", \"formControlName\", \"\"]],\n      inputs: {\n        name: [0, \"formControlName\", \"name\"],\n        isDisabled: [0, \"disabled\", \"isDisabled\"],\n        model: [0, \"ngModel\", \"model\"]\n      },\n      outputs: {\n        update: \"ngModelChange\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([controlNameBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return FormControlName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction checkParentType(parent, name) {\n  if (!(parent instanceof FormGroupName) && parent instanceof AbstractFormGroupDirective) {\n    throw ngModelGroupException();\n  } else if (!(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName)) {\n    throw controlParentException(name);\n  }\n}\nconst SELECT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString$1(id, value) {\n  if (id == null) return `${value}`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n  return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```html\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet SelectControlValueAccessor = /*#__PURE__*/(() => {\n  class SelectControlValueAccessor extends BuiltInControlValueAccessor {\n    /** @nodoc */\n    value;\n    /** @internal */\n    _optionMap = new Map();\n    /** @internal */\n    _idCounter = 0;\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new _RuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n      }\n      this._compareWith = fn;\n    }\n    _compareWith = Object.is;\n    /**\n     * Sets the \"value\" property on the select element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.value = value;\n      const id = this._getOptionId(value);\n      const valueString = _buildValueString$1(id, value);\n      this.setProperty('value', valueString);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = valueString => {\n        this.value = this._getOptionValue(valueString);\n        fn(this.value);\n      };\n    }\n    /** @internal */\n    _registerOption() {\n      return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n      for (const id of this._optionMap.keys()) {\n        if (this._compareWith(this._optionMap.get(id), value)) return id;\n      }\n      return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n      const id = _extractId$1(valueString);\n      return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵSelectControlValueAccessor_BaseFactory;\n      return function SelectControlValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵSelectControlValueAccessor_BaseFactory || (ɵSelectControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectControlValueAccessor)))(__ngFactoryType__ || SelectControlValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: SelectControlValueAccessor,\n      selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]],\n      hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target.value);\n          })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        compareWith: \"compareWith\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return SelectControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgSelectOption = /*#__PURE__*/(() => {\n  class NgSelectOption {\n    _element;\n    _renderer;\n    _select;\n    /**\n     * @description\n     * ID of the option element\n     */\n    id;\n    constructor(_element, _renderer, _select) {\n      this._element = _element;\n      this._renderer = _renderer;\n      this._select = _select;\n      if (this._select) this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n      if (this._select == null) return;\n      this._select._optionMap.set(this.id, value);\n      this._setElementValue(_buildValueString$1(this.id, value));\n      this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n      this._setElementValue(value);\n      if (this._select) this._select.writeValue(this._select.value);\n    }\n    /** @internal */\n    _setElementValue(value) {\n      this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this._select) {\n        this._select._optionMap.delete(this.id);\n        this._select.writeValue(this._select.value);\n      }\n    }\n    static ɵfac = function NgSelectOption_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NgSelectOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectControlValueAccessor, 9));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: NgSelectOption,\n      selectors: [[\"option\"]],\n      inputs: {\n        ngValue: \"ngValue\",\n        value: \"value\"\n      },\n      standalone: false\n    });\n  }\n  return NgSelectOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString(id, value) {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n  return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```html\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet SelectMultipleControlValueAccessor = /*#__PURE__*/(() => {\n  class SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * The current value.\n     * @nodoc\n     */\n    value;\n    /** @internal */\n    _optionMap = new Map();\n    /** @internal */\n    _idCounter = 0;\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new _RuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n      }\n      this._compareWith = fn;\n    }\n    _compareWith = Object.is;\n    /**\n     * Sets the \"value\" property on one or of more of the select's options.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.value = value;\n      let optionSelectedStateSetter;\n      if (Array.isArray(value)) {\n        // convert values to ids\n        const ids = value.map(v => this._getOptionId(v));\n        optionSelectedStateSetter = (opt, o) => {\n          opt._setSelected(ids.indexOf(o.toString()) > -1);\n        };\n      } else {\n        optionSelectedStateSetter = (opt, o) => {\n          opt._setSelected(false);\n        };\n      }\n      this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = element => {\n        const selected = [];\n        const selectedOptions = element.selectedOptions;\n        if (selectedOptions !== undefined) {\n          const options = selectedOptions;\n          for (let i = 0; i < options.length; i++) {\n            const opt = options[i];\n            const val = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n        // Degrade to use `options` when `selectedOptions` property is not available.\n        // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n        // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n        else {\n          const options = element.options;\n          for (let i = 0; i < options.length; i++) {\n            const opt = options[i];\n            if (opt.selected) {\n              const val = this._getOptionValue(opt.value);\n              selected.push(val);\n            }\n          }\n        }\n        this.value = selected;\n        fn(selected);\n      };\n    }\n    /** @internal */\n    _registerOption(value) {\n      const id = (this._idCounter++).toString();\n      this._optionMap.set(id, value);\n      return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n      for (const id of this._optionMap.keys()) {\n        if (this._compareWith(this._optionMap.get(id)._value, value)) return id;\n      }\n      return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n      const id = _extractId(valueString);\n      return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵSelectMultipleControlValueAccessor_BaseFactory;\n      return function SelectMultipleControlValueAccessor_Factory(__ngFactoryType__) {\n        return (ɵSelectMultipleControlValueAccessor_BaseFactory || (ɵSelectMultipleControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectMultipleControlValueAccessor)))(__ngFactoryType__ || SelectMultipleControlValueAccessor);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: SelectMultipleControlValueAccessor,\n      selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]],\n      hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) {\n            return ctx.onChange($event.target);\n          })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() {\n            return ctx.onTouched();\n          });\n        }\n      },\n      inputs: {\n        compareWith: \"compareWith\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return SelectMultipleControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectMultipleControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet ɵNgSelectMultipleOption = /*#__PURE__*/(() => {\n  class ɵNgSelectMultipleOption {\n    _element;\n    _renderer;\n    _select;\n    id;\n    /** @internal */\n    _value;\n    constructor(_element, _renderer, _select) {\n      this._element = _element;\n      this._renderer = _renderer;\n      this._select = _select;\n      if (this._select) {\n        this.id = this._select._registerOption(this);\n      }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n      if (this._select == null) return;\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n      if (this._select) {\n        this._value = value;\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n      } else {\n        this._setElementValue(value);\n      }\n    }\n    /** @internal */\n    _setElementValue(value) {\n      this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n      this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this._select) {\n        this._select._optionMap.delete(this.id);\n        this._select.writeValue(this._select.value);\n      }\n    }\n    static ɵfac = function ɵNgSelectMultipleOption_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ɵNgSelectMultipleOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ɵNgSelectMultipleOption,\n      selectors: [[\"option\"]],\n      inputs: {\n        ngValue: \"ngValue\",\n        value: \"value\"\n      },\n      standalone: false\n    });\n  }\n  return ɵNgSelectMultipleOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n  return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n  return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nlet AbstractValidatorDirective = /*#__PURE__*/(() => {\n  class AbstractValidatorDirective {\n    _validator = nullValidator;\n    _onChange;\n    /**\n     * A flag that tracks whether this validator is enabled.\n     *\n     * Marking it `internal` (vs `protected`), so that this flag can be used in host bindings of\n     * directive classes that extend this base class.\n     * @internal\n     */\n    _enabled;\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (this.inputName in changes) {\n        const input = this.normalizeInput(changes[this.inputName].currentValue);\n        this._enabled = this.enabled(input);\n        this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n        if (this._onChange) {\n          this._onChange();\n        }\n      }\n    }\n    /** @nodoc */\n    validate(control) {\n      return this._validator(control);\n    }\n    /** @nodoc */\n    registerOnValidatorChange(fn) {\n      this._onChange = fn;\n    }\n    /**\n     * @description\n     * Determines whether this validator should be active or not based on an input.\n     * Base class implementation checks whether an input is defined (if the value is different from\n     * `null` and `undefined`). Validator classes that extend this base class can override this\n     * function with the logic specific to a particular validator directive.\n     */\n    enabled(input) {\n      return input != null /* both `null` and `undefined` */;\n    }\n    static ɵfac = function AbstractValidatorDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AbstractValidatorDirective)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: AbstractValidatorDirective,\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return AbstractValidatorDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MaxValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MaxValidator = /*#__PURE__*/(() => {\n  class MaxValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the max bound to this directive.\n     */\n    max;\n    /** @internal */\n    inputName = 'max';\n    /** @internal */\n    normalizeInput = input => toFloat(input);\n    /** @internal */\n    createValidator = max => maxValidator(max);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMaxValidator_BaseFactory;\n      return function MaxValidator_Factory(__ngFactoryType__) {\n        return (ɵMaxValidator_BaseFactory || (ɵMaxValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxValidator)))(__ngFactoryType__ || MaxValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MaxValidator,\n      selectors: [[\"input\", \"type\", \"number\", \"max\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MaxValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"max\", ctx._enabled ? ctx.max : null);\n        }\n      },\n      inputs: {\n        max: \"max\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([MAX_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MaxValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MinValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MinValidator = /*#__PURE__*/(() => {\n  class MinValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the min bound to this directive.\n     */\n    min;\n    /** @internal */\n    inputName = 'min';\n    /** @internal */\n    normalizeInput = input => toFloat(input);\n    /** @internal */\n    createValidator = min => minValidator(min);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMinValidator_BaseFactory;\n      return function MinValidator_Factory(__ngFactoryType__) {\n        return (ɵMinValidator_BaseFactory || (ɵMinValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinValidator)))(__ngFactoryType__ || MinValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MinValidator,\n      selectors: [[\"input\", \"type\", \"number\", \"min\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MinValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"min\", ctx._enabled ? ctx.min : null);\n        }\n      },\n      inputs: {\n        min: \"min\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([MIN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MinValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => RequiredValidator),\n  multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => CheckboxRequiredValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```html\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet RequiredValidator = /*#__PURE__*/(() => {\n  class RequiredValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the required attribute bound to this directive.\n     */\n    required;\n    /** @internal */\n    inputName = 'required';\n    /** @internal */\n    normalizeInput = booleanAttribute;\n    /** @internal */\n    createValidator = input => requiredValidator;\n    /** @nodoc */\n    enabled(input) {\n      return input;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵRequiredValidator_BaseFactory;\n      return function RequiredValidator_Factory(__ngFactoryType__) {\n        return (ɵRequiredValidator_BaseFactory || (ɵRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(RequiredValidator)))(__ngFactoryType__ || RequiredValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RequiredValidator,\n      selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]],\n      hostVars: 1,\n      hostBindings: function RequiredValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n        }\n      },\n      inputs: {\n        required: \"required\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return RequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nlet CheckboxRequiredValidator = /*#__PURE__*/(() => {\n  class CheckboxRequiredValidator extends RequiredValidator {\n    /** @internal */\n    createValidator = input => requiredTrueValidator;\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵCheckboxRequiredValidator_BaseFactory;\n      return function CheckboxRequiredValidator_Factory(__ngFactoryType__) {\n        return (ɵCheckboxRequiredValidator_BaseFactory || (ɵCheckboxRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxRequiredValidator)))(__ngFactoryType__ || CheckboxRequiredValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: CheckboxRequiredValidator,\n      selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n        }\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return CheckboxRequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => EmailValidator),\n  multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```html\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nlet EmailValidator = /*#__PURE__*/(() => {\n  class EmailValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the email attribute bound to this directive.\n     */\n    email;\n    /** @internal */\n    inputName = 'email';\n    /** @internal */\n    normalizeInput = booleanAttribute;\n    /** @internal */\n    createValidator = input => emailValidator;\n    /** @nodoc */\n    enabled(input) {\n      return input;\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵEmailValidator_BaseFactory;\n      return function EmailValidator_Factory(__ngFactoryType__) {\n        return (ɵEmailValidator_BaseFactory || (ɵEmailValidator_BaseFactory = i0.ɵɵgetInheritedFactory(EmailValidator)))(__ngFactoryType__ || EmailValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: EmailValidator,\n      selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]],\n      inputs: {\n        email: \"email\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([EMAIL_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return EmailValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MinLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MinLengthValidator = /*#__PURE__*/(() => {\n  class MinLengthValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the minimum length bound to this directive.\n     */\n    minlength;\n    /** @internal */\n    inputName = 'minlength';\n    /** @internal */\n    normalizeInput = input => toInteger(input);\n    /** @internal */\n    createValidator = minlength => minLengthValidator(minlength);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMinLengthValidator_BaseFactory;\n      return function MinLengthValidator_Factory(__ngFactoryType__) {\n        return (ɵMinLengthValidator_BaseFactory || (ɵMinLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinLengthValidator)))(__ngFactoryType__ || MinLengthValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MinLengthValidator,\n      selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MinLengthValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"minlength\", ctx._enabled ? ctx.minlength : null);\n        }\n      },\n      inputs: {\n        minlength: \"minlength\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MinLengthValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MaxLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds maximum length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MaxLengthValidator = /*#__PURE__*/(() => {\n  class MaxLengthValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the maximum length bound to this directive.\n     */\n    maxlength;\n    /** @internal */\n    inputName = 'maxlength';\n    /** @internal */\n    normalizeInput = input => toInteger(input);\n    /** @internal */\n    createValidator = maxlength => maxLengthValidator(maxlength);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵMaxLengthValidator_BaseFactory;\n      return function MaxLengthValidator_Factory(__ngFactoryType__) {\n        return (ɵMaxLengthValidator_BaseFactory || (ɵMaxLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxLengthValidator)))(__ngFactoryType__ || MaxLengthValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MaxLengthValidator,\n      selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"maxlength\", ctx._enabled ? ctx.maxlength : null);\n        }\n      },\n      inputs: {\n        maxlength: \"maxlength\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return MaxLengthValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => PatternValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/forms/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet PatternValidator = /*#__PURE__*/(() => {\n  class PatternValidator extends AbstractValidatorDirective {\n    /**\n     * @description\n     * Tracks changes to the pattern bound to this directive.\n     */\n    pattern; // This input is always defined, since the name matches selector.\n    /** @internal */\n    inputName = 'pattern';\n    /** @internal */\n    normalizeInput = input => input;\n    /** @internal */\n    createValidator = input => patternValidator(input);\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵPatternValidator_BaseFactory;\n      return function PatternValidator_Factory(__ngFactoryType__) {\n        return (ɵPatternValidator_BaseFactory || (ɵPatternValidator_BaseFactory = i0.ɵɵgetInheritedFactory(PatternValidator)))(__ngFactoryType__ || PatternValidator);\n      };\n    })();\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: PatternValidator,\n      selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]],\n      hostVars: 1,\n      hostBindings: function PatternValidator_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"pattern\", ctx._enabled ? ctx.pattern : null);\n        }\n      },\n      inputs: {\n        pattern: \"pattern\"\n      },\n      standalone: false,\n      features: [i0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return PatternValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SHARED_FORM_DIRECTIVES = [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator, MinValidator, MaxValidator];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nlet ɵInternalFormsSharedModule = /*#__PURE__*/(() => {\n  class ɵInternalFormsSharedModule {\n    static ɵfac = function ɵInternalFormsSharedModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ɵInternalFormsSharedModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ɵInternalFormsSharedModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return ɵInternalFormsSharedModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```ts\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```ts\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n  /**\n   * Creates a new `FormArray` instance.\n   *\n   * @param controls An array of child controls. Each child control is given an index\n   * where it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n      // to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  controls;\n  /**\n   * Get the `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n   *     around from the back, and if index is greatly negative (less than `-length`), the result is\n   * undefined. This behavior is the same as `Array.at(index)`.\n   */\n  at(index) {\n    return this.controls[this._adjustIndex(index)];\n  }\n  /**\n   * Insert a new `AbstractControl` at the end of the array.\n   *\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is added.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  push(control, options = {}) {\n    this.controls.push(control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Insert a new `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to insert the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n   * This behavior is the same as `Array.splice(index, 0, control)`.\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is inserted.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  insert(index, control, options = {}) {\n    this.controls.splice(index, 0, control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Remove the control at the given `index` in the array.\n   *\n   * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n   *     element. This behavior is the same as `Array.splice(index, 1)`.\n   * @param options Specifies whether this FormArray instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeAt(index, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Replace an existing control.\n   *\n   * @param index Index in the array to replace the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n   *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n   * @param control The `AbstractControl` control to replace the existing control\n   * @param options Specifies whether this FormArray instance should emit events after an\n   *     existing control is replaced with a new one.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * replaced with a new one. When false, no events are emitted.\n   */\n  setControl(index, control, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    if (control) {\n      this.controls.splice(adjustedIndex, 0, control);\n      this._registerControl(control);\n    }\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Length of the control array.\n   */\n  get length() {\n    return this.controls.length;\n  }\n  /**\n   * Sets the value of the `FormArray`. It accepts an array that matches\n   * the structure of the control.\n   *\n   * This method performs strict checks, and throws an error if you try\n   * to set the value of a control that doesn't exist or if you exclude the\n   * value of a control.\n   *\n   * @usageNotes\n   * ### Set the values for the controls in the form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *   new FormControl(),\n   *   new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.setValue(['Nancy', 'Drew']);\n   * console.log(arr.value);   // ['Nancy', 'Drew']\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, false, value);\n    value.forEach((newValue, index) => {\n      assertControlPresent(this, false, index);\n      this.at(index).setValue(newValue, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormArray`. It accepts an array that matches the\n   * structure of the control, and does its best to match the values to the correct\n   * controls in the group.\n   *\n   * It accepts both super-sets and sub-sets of the array without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the values for controls in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.patchValue(['Nancy']);\n   * console.log(arr.value);   // ['Nancy', null]\n   * ```\n   *\n   * @param value Array of latest values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control\n   * value is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values,\n    // so we just ignore such cases when a field containing FormArray instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    value.forEach((newValue, index) => {\n      if (this.at(index)) {\n        this.at(index).patchValue(newValue, {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n   * value of all descendants to null or null maps.\n   *\n   * You reset to a specific form state by passing in an array of states\n   * that matches the structure of the control. The state is a standalone value\n   * or a form state object with both a value and a disabled status.\n   *\n   * @usageNotes\n   * ### Reset the values in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * arr.reset(['name', 'last name']);\n   *\n   * console.log(arr.value);  // ['name', 'last name']\n   * ```\n   *\n   * ### Reset the values in a form array and the disabled status for the first control\n   *\n   * ```ts\n   * arr.reset([\n   *   {value: 'name', disabled: true},\n   *   'last'\n   * ]);\n   *\n   * console.log(arr.value);  // ['last']\n   * console.log(arr.at(0).status);  // 'DISABLED'\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  reset(value = [], options = {}) {\n    this._forEachChild((control, index) => {\n      control.reset(value[index], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options, this);\n    this._updateTouched(options, this);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the array, including any disabled controls.\n   *\n   * Reports all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this.controls.map(control => control.getRawValue());\n  }\n  /**\n   * Remove all controls in the `FormArray`.\n   *\n   * @param options Specifies whether this FormArray instance should emit events after all\n   *     controls are removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when all controls\n   * in this FormArray instance are removed. When false, no events are emitted.\n   *\n   * @usageNotes\n   * ### Remove all elements from a FormArray\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.length);  // 2\n   *\n   * arr.clear();\n   * console.log(arr.length);  // 0\n   * ```\n   *\n   * It's a simpler and more efficient alternative to removing all elements one by one:\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   *\n   * while (arr.length) {\n   *    arr.removeAt(0);\n   * }\n   * ```\n   */\n  clear(options = {}) {\n    if (this.controls.length < 1) return;\n    this._forEachChild(control => control._registerOnCollectionChange(() => {}));\n    this.controls.splice(0);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Adjusts a negative index by summing it with the length of the array. For very negative\n   * indices, the result may remain negative.\n   * @internal\n   */\n  _adjustIndex(index) {\n    return index < 0 ? index + this.length : index;\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this.controls.reduce((updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    }, false);\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    this.controls.forEach((control, index) => {\n      cb(control, index);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this.controls.filter(control => control.enabled || this.disabled).map(control => control.value);\n  }\n  /** @internal */\n  _anyControls(condition) {\n    return this.controls.some(control => control.enabled && condition(control));\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => this._registerControl(control));\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const control of this.controls) {\n      if (control.enabled) return false;\n    }\n    return this.controls.length > 0 || this.disabled;\n  }\n  _registerControl(control) {\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n  }\n  /** @internal */\n  _find(name) {\n    return this.at(name) ?? null;\n  }\n}\nconst UntypedFormArray = FormArray;\n/**\n * @description\n * Asserts that the given control is an instance of `FormArray`\n *\n * @publicApi\n */\nconst isFormArray = control => control instanceof FormArray;\nfunction isAbstractControlOptions(options) {\n  return !!options && (options.asyncValidators !== undefined || options.validators !== undefined || options.updateOn !== undefined);\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nlet FormBuilder = /*#__PURE__*/(() => {\n  class FormBuilder {\n    useNonNullable = false;\n    /**\n     * @description\n     * Returns a FormBuilder in which automatically constructed `FormControl` elements\n     * have `{nonNullable: true}` and are non-nullable.\n     *\n     * **Constructing non-nullable controls**\n     *\n     * When constructing a control, it will be non-nullable, and will reset to its initial value.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.control('Alex'); // FormControl<string>\n     * name.reset();\n     * console.log(name); // 'Alex'\n     * ```\n     *\n     * **Constructing non-nullable groups or arrays**\n     *\n     * When constructing a group or array, all automatically created inner controls will be\n     * non-nullable, and will reset to their initial values.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n     * name.reset();\n     * console.log(name); // {who: 'Alex'}\n     * ```\n     * **Constructing *nullable* fields on groups or arrays**\n     *\n     * It is still possible to have a nullable field. In particular, any `FormControl` which is\n     * *already* constructed will not be altered. For example:\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * // FormGroup<{who: FormControl<string|null>}>\n     * let name = nnfb.group({who: new FormControl('Alex')});\n     * name.reset(); console.log(name); // {who: null}\n     * ```\n     *\n     * Because the inner control is constructed explicitly by the caller, the builder has\n     * no control over how it is created, and cannot exclude the `null`.\n     */\n    get nonNullable() {\n      const nnfb = new FormBuilder();\n      nnfb.useNonNullable = true;\n      return nnfb;\n    }\n    group(controls, options = null) {\n      const reducedControls = this._reduceControls(controls);\n      let newOptions = {};\n      if (isAbstractControlOptions(options)) {\n        // `options` are `AbstractControlOptions`\n        newOptions = options;\n      } else if (options !== null) {\n        // `options` are legacy form group options\n        newOptions.validators = options.validator;\n        newOptions.asyncValidators = options.asyncValidator;\n      }\n      return new FormGroup(reducedControls, newOptions);\n    }\n    /**\n     * @description\n     * Constructs a new `FormRecord` instance. Accepts a single generic argument, which is an object\n     * containing all the keys and corresponding inner control types.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormRecord`. The object should have the\n     * `AbstractControlOptions` type and might contain the following fields:\n     * * `validators`: A synchronous validator function, or an array of validator functions.\n     * * `asyncValidators`: A single async validator or array of async validator functions.\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n     * | submit').\n     */\n    record(controls, options = null) {\n      const reducedControls = this._reduceControls(controls);\n      // Cast to `any` because the inferred types are not as specific as Element.\n      return new FormRecord(reducedControls, options);\n    }\n    /**\n     * @description\n     * Constructs a new `FormControl` with the given state, validators and options. Sets\n     * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n     * control will be nullable. Accepts a single generic argument, which is the type  of the\n     * control's value.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or a `FormControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * {@example forms/ts/formBuilder/form_builder_example.ts region='disabled-control'}\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n      let newOptions = {};\n      if (!this.useNonNullable) {\n        return new FormControl(formState, validatorOrOpts, asyncValidator);\n      }\n      if (isAbstractControlOptions(validatorOrOpts)) {\n        // If the second argument is options, then they are copied.\n        newOptions = validatorOrOpts;\n      } else {\n        // If the other arguments are validators, they are copied into an options object.\n        newOptions.validators = validatorOrOpts;\n        newOptions.asyncValidators = asyncValidator;\n      }\n      return new FormControl(formState, {\n        ...newOptions,\n        nonNullable: true\n      });\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options. Accepts a single generic argument, which is the type of each control\n     * inside the array.\n     *\n     * @param controls An array of child controls or control configs. Each child control is given an\n     *     index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n     *     `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions.\n     */\n    array(controls, validatorOrOpts, asyncValidator) {\n      const createdControls = controls.map(c => this._createControl(c));\n      // Cast to `any` because the inferred types are not as specific as Element.\n      return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controls) {\n      const createdControls = {};\n      Object.keys(controls).forEach(controlName => {\n        createdControls[controlName] = this._createControl(controls[controlName]);\n      });\n      return createdControls;\n    }\n    /** @internal */\n    _createControl(controls) {\n      if (controls instanceof FormControl) {\n        return controls;\n      } else if (controls instanceof AbstractControl) {\n        // A control; just return it\n        return controls;\n      } else if (Array.isArray(controls)) {\n        // ControlConfig Tuple\n        const value = controls[0];\n        const validator = controls.length > 1 ? controls[1] : null;\n        const asyncValidator = controls.length > 2 ? controls[2] : null;\n        return this.control(value, validator, asyncValidator);\n      } else {\n        // T or FormControlState<T>\n        return this.control(controls);\n      }\n    }\n    static ɵfac = function FormBuilder_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormBuilder)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: FormBuilder,\n      factory: FormBuilder.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return FormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nlet NonNullableFormBuilder = /*#__PURE__*/(() => {\n  class NonNullableFormBuilder {\n    static ɵfac = function NonNullableFormBuilder_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NonNullableFormBuilder)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NonNullableFormBuilder,\n      factory: () => (() => inject(FormBuilder).nonNullable)(),\n      providedIn: 'root'\n    });\n  }\n  return NonNullableFormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * UntypedFormBuilder is the same as `FormBuilder`, but it provides untyped controls.\n */\nlet UntypedFormBuilder = /*#__PURE__*/(() => {\n  class UntypedFormBuilder extends FormBuilder {\n    group(controlsConfig, options = null) {\n      return super.group(controlsConfig, options);\n    }\n    /**\n     * Like `FormBuilder#control`, except the resulting control is untyped.\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n      return super.control(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Like `FormBuilder#array`, except the resulting array is untyped.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n      return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵUntypedFormBuilder_BaseFactory;\n      return function UntypedFormBuilder_Factory(__ngFactoryType__) {\n        return (ɵUntypedFormBuilder_BaseFactory || (ɵUntypedFormBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(UntypedFormBuilder)))(__ngFactoryType__ || UntypedFormBuilder);\n      };\n    })();\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: UntypedFormBuilder,\n      factory: UntypedFormBuilder.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return UntypedFormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n/**\n * @publicApi\n */\nconst VERSION = /*#__PURE__*/new Version('19.2.7');\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Template-driven Forms Guide](guide/forms)\n *\n * @publicApi\n */\nlet FormsModule = /*#__PURE__*/(() => {\n  class FormsModule {\n    /**\n     * @description\n     * Provides options for configuring the forms module.\n     *\n     * @param opts An object of configuration options\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n      return {\n        ngModule: FormsModule,\n        providers: [{\n          provide: CALL_SET_DISABLED_STATE,\n          useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n        }]\n      };\n    }\n    static ɵfac = function FormsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FormsModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: FormsModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [ɵInternalFormsSharedModule]\n    });\n  }\n  return FormsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms)\n * @see [Reactive Forms Guide](guide/forms/reactive-forms)\n *\n * @publicApi\n */\nlet ReactiveFormsModule = /*#__PURE__*/(() => {\n  class ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n      return {\n        ngModule: ReactiveFormsModule,\n        providers: [{\n          provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n          useValue: opts.warnOnNgModelWithFormControl ?? 'always'\n        }, {\n          provide: CALL_SET_DISABLED_STATE,\n          useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n        }]\n      };\n    }\n    static ɵfac = function ReactiveFormsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ReactiveFormsModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ReactiveFormsModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [ɵInternalFormsSharedModule]\n    });\n  }\n  return ReactiveFormsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, ControlEvent, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormResetEvent, FormSubmittedEvent, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, PristineChangeEvent, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, StatusChangeEvent, TouchedChangeEvent, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, ValueChangeEvent, isFormArray, isFormControl, isFormGroup, isFormRecord, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption };\n","import { Component, inject } from '@angular/core';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { Carregamento } from '../Carregamento/carregamento';\r\nimport { HttpService } from '../../Services/Http.service';\r\nimport { Definicoes } from '../../Definicoes';\r\nimport { FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { ServicoAutenticacao } from '../../Services/Autenticacao.service';\r\n\r\n@Component({\r\n  selector: 'topbar',\r\n  imports: [RouterModule, Carregamento, FormsModule, ReactiveFormsModule],\r\n  templateUrl: './topbar.html',\r\n  styleUrl: './topbar.less'\r\n})\r\n\r\n\r\nexport class Topbar {\r\n  ModalLoginVisivel = false\r\n  DropdownVisivel = false\r\n  CarregamentoVisivel = false\r\n\r\n  ServicoHttp = inject(HttpService)\r\n  ServicoAutenticacao = inject(ServicoAutenticacao)\r\n  Utilizador = this.ServicoAutenticacao.Utilizador\r\n  Router = inject(Router)\r\n\r\n  URL_Imagens = Definicoes.API_URL+'imagens/utilizador'\r\n  \r\n  async Login(){\r\n    this.CarregamentoVisivel = true\r\n\r\n    const ValoresForm = this.FormLogin.value\r\n\r\n    const URLLogin = new URL('login',Definicoes.API_URL)\r\n    const ResultadoLogin = await this.ServicoHttp.Request(URLLogin, 'POST', 'Erro no login',\r\n       {\r\n        email: ValoresForm.email, \r\n        password: ValoresForm.password\r\n      })\r\n\r\n    if(ResultadoLogin){\r\n      window.location.reload();\r\n    }\r\n    \r\n    else{\r\n      this.CarregamentoVisivel = false\r\n    }\r\n  }\r\n\r\n  async Logout(){\r\n    this.CarregamentoVisivel = true\r\n\r\n    const URLLogout = new URL('Logout',Definicoes.API_URL)\r\n    const ResultadoLogout = await this.ServicoHttp.Request(URLLogout, 'POST', 'Erro no logout')\r\n\r\n    if(ResultadoLogout){\r\n      await this.Router.navigate(['/inicial']) \r\n      window.location.reload()\r\n    }else{\r\n      this.CarregamentoVisivel = false\r\n    }\r\n  }\r\n\r\n  FormLogin = new FormGroup({\r\n    email: new FormControl('autobus.pap@gmail.com', [Validators.required, Validators.email]),\r\n    password: new FormControl('123', [Validators.required]),\r\n  });\r\n\r\n  // FormLogin = new FormGroup({\r\n  //   email: new FormControl('', [Validators.required, Validators.email]),\r\n  //   password: new FormControl('', [Validators.required]),\r\n  // });\r\n}\r\n","<carregamento [Visivel]=\"CarregamentoVisivel\"></carregamento>\r\n\r\n<div class=\"topo\">\r\n    <div>\r\n        <div class=\"login\">\r\n\r\n            @if (ServicoAutenticacao.Utilizador()){\r\n                <button id=\"butao-compras\" class=\"botaoLogin-a botao-imagem-compras\" routerLink=\"/compras\">\r\n                    <img class=\"icon-butao\" src=\"img/comprasB.png\">\r\n                </button>\r\n                <button id=\"butao-carrinho\" class=\"botaoLogin-a botao-imagem-carrinho\" routerLink=\"/carrinho\">\r\n                    <img class=\"icon-butao\" src=\"img/carrinhoB.png\">\r\n                </button>\r\n            }\r\n\r\n            <div id=\"dropdown-container\" class=\"dropdown\" \r\n                (mouseenter)=\"DropdownVisivel = true\"\r\n                (mouseleave)=\"DropdownVisivel = false\" \r\n                (click)=\"ModalLoginVisivel = true\">\r\n\r\n                <!-- BUTAO PERFIL -->\r\n                <button class=\"botaoLogin botao-imagem dropbtn\" id=\"butao-perfil\" alt=\"Utilizador\">\r\n                    <img class=\"imagem-butao-perfil\" [src]=\"URL_Imagens\" onerror=\"this.src='img/default-profile.png'\">\r\n                    <span id=\"nome-utilizador\" style=\"color: white; font-size: 14px; margin-left:10px;\">\r\n                        {{ServicoAutenticacao.Utilizador()?.nome}}\r\n                    </span>\r\n                </button>\r\n\r\n\r\n                <br><br>\r\n\r\n                <!-- DROPDOWN -->\r\n                @if (DropdownVisivel && ServicoAutenticacao.Utilizador()){\r\n                    <div id=\"dropdown\" class=\"dropdown-content\">\r\n                        <a routerLink=\"/definicoes\" style=\"padding-top: 30px;\">Definições</a>\r\n                        <a (click)=\"Logout()\" style=\"padding-bottom: 17px; cursor: pointer;\">Sair</a>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <a routerLink=\"/inicial\"><img  class=\"marca\" style=\"width: 70px; height: 55px; padding-left: 20px; margin-top: -20px;\" src=\"img/logo.png\"></a>\r\n\r\n        <!-- <a class=\"marca\" style=\"padding-left:50px; padding-right: 50px;\" routerLink=\"/inicial\">AutoBus</a> -->\r\n\r\n        <a class=\"marca\" style=\"padding-left:40px; padding-right: 40px;\" routerLink=\"/localidades\">Mapa e Localidades</a>\r\n\r\n        <a class=\"marca\" style=\"padding-right: 20px;\" routerLink=\"/viagens\">Viagens</a>\r\n\r\n\r\n        \r\n        <!-- <img  class=\"marca\" style=\"width: 70px; height: 55px; padding-left: 340px; margin-top: -20px;\" src=\"img/logo.png\"> -->\r\n\r\n        <br>\r\n    </div>\r\n</div>\r\n\r\n\r\n@if (ModalLoginVisivel && !ServicoAutenticacao.Utilizador()){\r\n    <div class=\"modal\">\r\n\r\n        <form [formGroup]=\"FormLogin\" class=\"modal-content animate\">\r\n            <div class=\"container\">\r\n                <label class=\"entrar\"><strong>Entrar</strong></label>\r\n\r\n                <br><br>\r\n                <label style=\"margin-left:3%\"><b>Email</b></label>\r\n                <input class=\"inserir\" type=\"email\" placeholder=\"Insira o email\" formControlName=\"email\"\r\n                    style=\"margin-left:3%\"><br>\r\n\r\n                <label style=\"margin-left:3%\"><b>Palavra-Passe</b></label>\r\n                <input class=\"inserir\" type=\"password\" placeholder=\"Insira a palavra-passe\" formControlName=\"password\"\r\n                    style=\"margin-left:3%\">\r\n\r\n                <div style=\"display: flex; justify-content: space-between; width: 90%;\">\r\n                    <button type=\"submit\" class=\"ButaoLogin\" (click)=\"Login()\"\r\n                        [disabled]=\"FormLogin.invalid\">Entrar</button>\r\n\r\n                    <button type=\"button\" (click)=\"ModalLoginVisivel = false\" class=\"cancelbtn\">Cancelar</button>\r\n                </div><br>\r\n\r\n\r\n                <p class=\"conta\">Não tenho conta. <a routerLink=\"/criarConta\" class=\"letra\"><u>Criar uma.</u></a></p><br>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}","import { Component, HostBinding, inject } from '@angular/core';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport { ServicoAutenticacao } from '../../Services/Autenticacao.service';\r\nimport { Definicoes } from '../../Definicoes';\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { NgTemplateOutlet } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'pesquisa-viagens',\r\n  imports: [RouterModule, FormsModule, ReactiveFormsModule, NgTemplateOutlet],\r\n  templateUrl: './pesquisa-viagens.html',\r\n  styleUrl: './pesquisa-viagens.less'\r\n})\r\n\r\nexport class FormPesquisaViagens {\r\n  Definicoes = Definicoes\r\n  router = inject(Router)\r\n  ActiveRoute = inject(ActivatedRoute)\r\n\r\n  PaginaAtiva = this.router.url\r\n  PaginaViagens = this.router.url.includes('viagens')\r\n  @HostBinding(\"class.pagina-viagens\") pag_vig = this.PaginaViagens\r\n\r\n  Ida = true\r\n  Volta = false\r\n\r\n  FormPesquisa: FormGroup = new FormGroup({\r\n    local_partida: new FormControl('', [Validators.required]),\r\n    local_chegada: new FormControl('', [Validators.required]),\r\n    hora_ida: new FormControl('', []),\r\n    hora_volta: new FormControl('', []),\r\n    data_ida: new FormControl('', []),\r\n    data_volta: new FormControl('', []),\r\n    passageiros: new FormControl('1', []),\r\n    tipo_viagem: new FormControl('Ida', []), // Valor default e ida\r\n  });\r\n\r\n  RedirecionarPesquisa() {\r\n\r\n    this.router.navigate(['/viagens'], {\r\n      queryParams: this.FormPesquisa.value\r\n    }).then(() => {\r\n      window.location.reload()\r\n    })\r\n  }\r\n\r\n  // Os estilos para definir a largura dos campos de pesquisa são definidos de acordo com a página ativa, para podermos usar este componente em ambas páginas\r\n  ngOnInit() {\r\n    const Pagina = this.router.url\r\n    if (Pagina == '/inicial') {\r\n      document.documentElement.style.setProperty('--width-campos', '30%');\r\n    } else {\r\n      // Tamanho automático para o tamanho dos campos de pesquisa\r\n      document.documentElement.style.setProperty('--width-campos', '');\r\n    }\r\n\r\n    this.ActiveRoute.queryParams.subscribe(params => {\r\n      this.FormPesquisa.setValue({\r\n        local_partida: params['local_partida'] || '',\r\n        local_chegada: params['local_chegada'] || '',\r\n        hora_ida: params['hora_ida'] || '',\r\n        hora_volta: params['hora_volta'] || '',\r\n        data_ida: params['data_ida'] || '',\r\n        data_volta: params['data_volta'] || '',\r\n        passageiros: params['passageiros'] || '1',\r\n        tipo_viagem: params['tipo_viagem'] || 'Ida',\r\n      });\r\n    });\r\n  }\r\n}\r\n","\r\n\r\n<form [formGroup]=\"FormPesquisa\" (submit)=\"RedirecionarPesquisa()\">\r\n    <!-- Seletor de ida e ida e volta -->\r\n\r\n    <div class=\"row\" style=\"justify-content: space-between;\">\r\n        <div class=\"trip-type\">\r\n            <label class=\"radioestilo\"><strong>Ida</strong>\r\n                <input type=\"radio\" formControlName=\"tipo_viagem\" value=\"Ida\" />\r\n                <span class=\"checkmark\"></span>\r\n            </label>\r\n            <label class=\"radioestilo\"><strong>Ida e volta</strong>\r\n                <input type=\"radio\" formControlName=\"tipo_viagem\" value=\"IdaVolta\" />\r\n                <span class=\"checkmark\"></span>\r\n            </label>\r\n        </div>\r\n\r\n\r\n        @if (PaginaViagens){\r\n            <ng-container *ngTemplateOutlet=\"ButaoProcurar\"></ng-container>\r\n        }\r\n    </div><br><br>\r\n\r\n    <div class=\"row\" style=\"gap:20px; padding-left: 40px;\" [class.pagina-viagens]=\"PaginaViagens\">\r\n        <div class=\"campo\">\r\n            <label class=\"titulo-campo\"><strong>Partida</strong></label>\r\n            <div class=\"input-icon\">\r\n                <i>📍</i>\r\n                <input type=\"text\" placeholder=\"De: Braga\" formControlName=\"local_partida\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"campo\">\r\n            <label class=\"titulo-campo\"><strong>Chegada</strong></label>\r\n            <div class=\"input-icon\">\r\n                <i>📍</i>\r\n                <input type=\"text\" placeholder=\"Para: Porto\" formControlName=\"local_chegada\"/>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"campo\">\r\n            <label class=\"titulo-campo\"><strong>Passageiros</strong></label>\r\n\r\n            @if (!PaginaViagens) {\r\n                <select style=\"width: 230px; cursor: pointer; padding-right: -20px;\" formControlName=\"passageiros\" >\r\n                    <option value=\"1\">1 Adulto</option>\r\n                    <option value=\"2\">2 Adultos</option>\r\n                    <option value=\"3\">3 Adultos</option>\r\n                    <option value=\"1-1\">1 Adulto e uma criança</option>\r\n                    <option value=\"1-2\">1 Adulto e duas crianças</option>\r\n                    <option value=\"2-1\">2 Adultos e uma criança</option>\r\n                    <option value=\"2-2\">2 Adultos e duas crianças</option>\r\n                </select>\r\n            }\r\n            @else {\r\n                <select style=\"width: 220px; cursor: pointer; padding-right: -20px;\" formControlName=\"passageiros\" >\r\n                    <option value=\"1\">1 Adulto</option>\r\n                    <option value=\"2\">2 Adultos</option>\r\n                    <option value=\"3\">3 Adultos</option>\r\n                    <option value=\"1-1\">1 Adulto e uma criança</option>\r\n                    <option value=\"1-2\">1 Adulto e duas crianças</option>\r\n                    <option value=\"2-1\">2 Adultos e uma criança</option>\r\n                    <option value=\"2-2\">2 Adultos e duas crianças</option>\r\n                </select>\r\n            }\r\n        </div>\r\n\r\n\r\n        \r\n        <div class=\"campo data-ida\" >\r\n            <div style=\"display: flex;\">\r\n                <label class=\"titulo-campo\"><strong>Data de ida</strong></label> \r\n\r\n                @if(FormPesquisa.value.tipo_viagem == \"IdaVolta\") {\r\n                  <label class=\"titulo-campo\" style=\"margin-left: 55px;\"><strong>Data de volta</strong></label>\r\n                }\r\n            </div>\r\n            \r\n            <div style=\"display: flex;\">\r\n            @if (FormPesquisa.value.tipo_viagem == \"IdaVolta\"){\r\n                <input type=\"date\"  formControlName=\"data_ida\" style=\"padding-left: 15px; padding-right: 20px; min-width: 150px; cursor: text;\"/>\r\n                <input type='date'  formControlName=\"data_volta\" style='padding-left: 15px; padding-right: 10px; width: 130px; cursor: text;'>\r\n                <!-- margin-left: -75px;  -->\r\n            }\r\n            @else { <!--ida-->\r\n                <input type=\"date\" formControlName=\"data_ida\" style=\"padding-left: 15px; padding-right: 20px; cursor: text;\"/>\r\n            }\r\n            </div>  \r\n        </div>\r\n\r\n        <div class=\"campo hora-ida\" style=\"display: flex;\">\r\n            <div style=\"display: flex;\">\r\n                <label class=\"titulo-campo\" ><strong>Hora de ida</strong></label>\r\n                @if (FormPesquisa.value.tipo_viagem == \"IdaVolta\") {\r\n                    <label class=\"titulo-campo\" style=\"margin-left: 25px;\"><strong>Hora de volta</strong></label>\r\n                }\r\n            </div>\r\n\r\n            <div style=\"display: flex;\">\r\n                @if (FormPesquisa.value.tipo_viagem == \"IdaVolta\"){\r\n                    <input type=\"time\" formControlName=\"hora_ida\" style=\"padding-left: 15px; padding-right: 25px; cursor: text;\"/>\r\n                    <input type=\"time\" formControlName=\"hora_volta\" style=\"width: 130px; padding-left: 15px; padding-right: 25px; cursor: text;\"/>\r\n                     <!-- margin-left: -90px; -->\r\n                }\r\n                @else {\r\n                    <input type=\"time\" formControlName=\"hora_ida\" style=\"padding-left: 15px; padding-right: 25px; cursor: text;\"/>\r\n                }   \r\n            </div>\r\n        </div>\r\n\r\n        @if (!PaginaViagens){\r\n            <ng-container *ngTemplateOutlet=\"ButaoProcurar\"></ng-container>\r\n        }\r\n    </div>\r\n</form>\r\n\r\n<ng-template #ButaoProcurar>\r\n    <input type=\"submit\" id=\"btProcurar\" value=\"Procurar\" class=\"botaoTransicao botaoProcurar\"\r\n    [style]=\"PaginaViagens ? 'height:30px' : '' \" [disabled]=\"FormPesquisa.invalid\" />\r\n</ng-template>","import { Component, HostListener, inject } from '@angular/core';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { ServicoAutenticacao } from '../../Services/Autenticacao.service';\r\n\r\n@Component({\r\n  selector: 'butao-voltar',\r\n  imports: [RouterModule],\r\n  templateUrl: './butao-voltar.html',\r\n  styleUrl: './butao-voltar.less',\r\n  \r\n})\r\n\r\nexport class ButaoVoltar {\r\n\r\n  Visible = false\r\n\r\n\r\n  @HostListener('window:scroll')\r\n  onWindowScroll() {\r\n    const TamanhoJanela = window.innerHeight;\r\n    const TamanhoTotalPagina = document.documentElement.scrollHeight\r\n    const PixeisParaMostrar = TamanhoTotalPagina - 100 // Tamanho total menos 100 pixeis, 100 pixeis antes da pagina estar no fim\r\n\r\n    const PosicaoScroll = TamanhoJanela + (window.scrollY || document.documentElement.scrollTop)\r\n    this.Visible = PosicaoScroll > PixeisParaMostrar; \r\n    //console.log(PixeisParaMostrar, PosicaoScroll)\r\n  }\r\n\r\n  VoltarAoTopo() {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  }\r\n}\r\n","\r\n<div\r\n    class=\"botaoVoltar\" \r\n    [class]=\"{'visivel':Visible}\" \r\n    id=\"botaoVoltar\">\r\n    <button class=\"botaoVolt\" (click)=\"VoltarAoTopo()\">\r\n        <a style=\"text-decoration: none; color: white;\">\r\n            Voltar ao topo\r\n        </a>\r\n    </button>\r\n</div>\r\n<!-- Como estava a dar problemas com angular, e o butao ficava visivel sempre que a pagina mudava, butaoVoltar e uma classe estatica\r\nEnquanto visivel e uma classe dinamica -->","import { Component, inject } from '@angular/core';\r\nimport { Footer } from '../../Componentes/Footer/footer';\r\nimport { Topbar } from '../../Componentes/Topbar/topbar';\r\nimport { Definicoes } from '../../Definicoes';\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { FormPesquisaViagens } from \"../../Componentes/FormPesquisaViagens/pesquisa-viagens\";\r\nimport { ButaoVoltar } from \"../../Componentes/ButaoVoltar/butao-voltar\";\r\n\r\n@Component({\r\n  selector: 'pagina-inicial',\r\n  imports: [Footer, Topbar, FormsModule, ReactiveFormsModule, FormPesquisaViagens, ButaoVoltar],\r\n  templateUrl: './inicial.html',\r\n  styleUrl: './inicial.css'\r\n})\r\nexport class PaginaInicial {\r\n  \r\n}\r\n","<topbar></topbar>\r\n\r\n<div class=\"header\">\r\n  <img src=\"img/autocarroFundo4.png\" class=\"imagemFundo\" alt=\"Imagem de fundo\" />\r\n</div>\r\n\r\n<div class=\"caixaViagens\" style=\"height: 330px;\">\r\n  <h1 class=\"titulo\" style=\"color: rgb(3, 3, 59)\">Descobre Portugal!</h1>\r\n  <br>\r\n\r\n  <pesquisa-viagens></pesquisa-viagens>\r\n</div>\r\n\r\n<br /><br /><br /><br />\r\n<h2 class=\"textoAzul\" style=\"text-align: center\">\r\n  Vantagens de ser um membro AutoBus!\r\n</h2>\r\n<br /><br />\r\n<!--<p style=\"text-align:center\">As vantagens em ter uma conta conosco são imensas!</p><br><br>-->\r\n\r\n<div class=\"caixaVantagens\">\r\n  <div class=\"vantagens_separada\" style=\"padding-top: 7px\">\r\n    <img src=\"img/mapaA.png\" class=\"vantagens\" />\r\n    <label class=\"texto\">\r\n      <h3>Mapa e localidades</h3>\r\n      <p>\r\n        Fica a conhecer todas as localidades para onde podes viajar e descobrir\r\n        Portugal com a AutoBus.\r\n      </p>\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"vantagens_separada\">\r\n    <img src=\"img/confortoA.png\" style=\"width: 70px; height: 55px\" />\r\n    <label class=\"texto\">\r\n      <h3>Conforto</h3>\r\n      <p>\r\n        Os nossos autocarros estão equipados com assentos grandes e\r\n        confortáveis, WC, Wi-Fi, tomadas e ar-condicionado.\r\n      </p>\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"vantagens_separada\">\r\n    <img src=\"img/contactoA.png\" class=\"vantagens\" style=\"width: 60px; height: 55px\" />\r\n    <label class=\"texto\">\r\n      <h3>Entre em contacto!</h3>\r\n      <p>\r\n        Precisas de ajuda? Fale conosco por linha telefónica, email ou através\r\n        do nosso site!\r\n      </p>\r\n    </label>\r\n  </div>\r\n</div>\r\n<br /><br /><br />\r\n\r\n<!--botao para voltar para a página anterior-->\r\n<div class=\"botaoTopo\" id=\"botaoTopo\">\r\n  <button class=\"btTopo\" onclick=\"topFunction()\">Voltar ao topo</button>\r\n</div>\r\n<br>\r\n\r\n<butao-voltar></butao-voltar>\r\n<footer-componente></footer-componente>","import { Component, inject } from '@angular/core';\r\nimport { Footer } from \"../../Componentes/Footer/footer\";\r\nimport { Topbar } from '../../Componentes/Topbar/topbar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormPesquisaViagens } from \"../../Componentes/FormPesquisaViagens/pesquisa-viagens\";\r\nimport { ButaoVoltar } from \"../../Componentes/ButaoVoltar/butao-voltar\";\r\nimport { HttpService } from '../../Services/Http.service';\r\nimport { Definicoes } from '../../Definicoes';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { Carregamento } from \"../../Componentes/Carregamento/carregamento\";\r\n\r\n@Component({\r\n  selector: 'pagina-viagens',\r\n  imports: [Topbar, FormPesquisaViagens, ButaoVoltar, CurrencyPipe, Carregamento],\r\n  templateUrl: './viagens.html',\r\n  styleUrl: './viagens.less'\r\n})\r\nexport class PaginaViagens {\r\n  route = inject(ActivatedRoute) //informacoes da pagina atual\r\n  ServicoHttp = inject(HttpService)\r\n\r\n  ModalAdicionarBilhete: boolean = false;\r\n  ModalVerDetalhes: boolean = false;\r\n  ViagemSelecionada: any = null;\r\n\r\n  abrirDetalhes(viagem: any) {\r\n    this.ViagemSelecionada = viagem;\r\n    this.ModalVerDetalhes = true;\r\n  }\r\n\r\n  IdaSelecionada = true // true significa que volta esta selecionado\r\n  ViagensIda: any[] = []\r\n  ViagensVolta?: any[]\r\n\r\n  async ngOnInit() { //funcao q é executada quando a pagina inicia \r\n    const queryParams = this.route.snapshot.queryParams // informacoes no link da pagina\r\n\r\n    const URL_Pedido = new URL(Definicoes.API_URL + \"viagens\")\r\n    URL_Pedido.searchParams.append(\"local_partida\", queryParams[\"local_partida\"]) // Append adiciona informacoes ao URL do endpoint que vai ser chamado\r\n    URL_Pedido.searchParams.append(\"local_chegada\", queryParams[\"local_chegada\"])\r\n    URL_Pedido.searchParams.append(\"hora_ida\", queryParams[\"hora_ida\"])\r\n    URL_Pedido.searchParams.append(\"hora_volta\", queryParams[\"hora_volta\"])\r\n    URL_Pedido.searchParams.append(\"tipo_viagem\", queryParams[\"tipo_viagem\"])\r\n\r\n    const Resultado = await this.ServicoHttp.Request(URL_Pedido, \"GET\")\r\n    this.ViagensIda = Resultado.ViagensIda\r\n    this.ViagensVolta = Resultado.ViagensVolta\r\n\r\n    for (const viagem of [...this.ViagensIda, ...this.ViagensVolta || []]) {\r\n      viagem.data = viagem.tipo == \"Ida\" && queryParams[\"data_ida\"]\r\n        || viagem.tipo == \"Volta\" && queryParams[\"data_volta\"]\r\n        || new Date().toISOString().split('T')[0]\r\n    }\r\n  }\r\n\r\n\r\n\r\n  async adicionarCarrinho(viagem: any) {\r\n    const URL_Pedido = new URL(Definicoes.API_URL + \"carrinho\")\r\n\r\n    const queryParams = this.route.snapshot.queryParams;\r\n\r\n    try {\r\n      const Resposta = await this.ServicoHttp.Request(URL_Pedido, \"POST\", \"Erro ao adicionar ao carrinho\", {\r\n        \"id_ponto_partida\": viagem.id_ponto_partida,\r\n        \"id_ponto_chegada\": viagem.id_ponto_chegada,\r\n        data: viagem.data,\r\n        \"tipo\": viagem.tipo,\r\n      });\r\n\r\n      if (Resposta?.success || Resposta?.status === 200) {\r\n        this.ModalAdicionarBilhete = true;\r\n      }\r\n\r\n      else {\r\n        console.error(\"Erro na resposta:\", Resposta);\r\n      }\r\n    }\r\n\r\n    catch (erro) {\r\n      console.error(\"Erro no pedido:\", erro);\r\n    }\r\n  }\r\n}\r\n","<topbar></topbar>\r\n<div class='caixaViagens'>\r\n  <pesquisa-viagens></pesquisa-viagens>\r\n</div>\r\n\r\n<br><br><br>\r\n\r\n@if (ViagensVolta){\r\n    <div class=\"row\">\r\n        <button (click)=\"IdaSelecionada=true\">Ida ({{ViagensIda.length}})</button>\r\n        <button (click)=\"IdaSelecionada=false\">Volta ({{ViagensVolta.length}})</button>\r\n    </div>\r\n}\r\n\r\n@let Viagens = IdaSelecionada ? ViagensIda : ViagensVolta;\r\n@for (Viagem of Viagens; track $index){\r\n    <div class=\"alinhamento\">\r\n        <div class='caixaBilhete'>\r\n            <div>\r\n                <a><strong>{{Viagem.local_partida}} ⮕ {{Viagem.local_chegada}}</strong></a>\r\n                <h2 style=>{{Viagem.preco | currency:'EUR'}}</h2>\r\n            </div>\r\n\r\n            <label style=\"margin-bottom: 30px;\">Hora de partida: {{Viagem.hora_partida}}</label><br><br>\r\n            <!-- <label>Data da viagem: {{Viagem.data_ida}}</label> -->\r\n\r\n            <!--<button class='botaoTransicao botaoComprar'>Adicionar ao carrinho</button>-->\r\n            <!--<form action='' method='POST'>-->\r\n            <div style=\"margin-top: 20px; display: flex;\">\r\n                <button class='botaoTransicao verMais' (click)=\"abrirDetalhes(Viagem)\">Ver mais detalhes</button><br>\r\n\r\n                <button class='btCarrinho' (click)=\"adicionarCarrinho(Viagem)\" >\r\n                    <img src=\"img/carrinhoAdicionarA.png\" style=\"height: 30px; width: 30;\">\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}<br><br>\r\n\r\n\r\n@if (ModalAdicionarBilhete){\r\n    <carregamento></carregamento>\r\n    <div class='modal'>\r\n        <div class='modal-content animate'>\r\n            <div>\r\n                <span (click)=\"ModalAdicionarBilhete=false\" class='close'>&times;</span>\r\n                <br><br>\r\n    \r\n                <h3>Bilhete adicionado ao carrinho!</h3><br>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n@if (ModalVerDetalhes) {\r\n    <carregamento></carregamento>\r\n    <div class=\"detalhes\">\r\n        <div class=\"detalhes-conteudo\">\r\n            <div>\r\n                <h3>Detalhes da Viagem</h3><br>\r\n\r\n                <span (click)=\"ModalVerDetalhes=false\" class='close' style=\"margin-right: -50px;\">&times;</span>\r\n                <br><br>\r\n            </div>\r\n\r\n            <div >\r\n                <p><a>📍</a><strong>Origem:</strong> {{ViagemSelecionada.local_partida}}</p>\r\n                <p><a>📍</a><strong>Destino:</strong> {{ViagemSelecionada.local_chegada}}</p>\r\n            </div>\r\n            <p><strong>Data:</strong> {{ViagemSelecionada.data}}</p>\r\n            <p><strong>Hora de partida:</strong> {{ViagemSelecionada.hora_partida}}</p>\r\n            <p><strong>Duração estimada:</strong></p>\r\n            <p><strong>Distância:</strong> 200 km</p>\r\n            <p><strong>Preço:</strong> {{ViagemSelecionada.preco | currency:'EUR'}}</p>\r\n            <p><strong>Tipo de autocarro:</strong> Executivo</p>\r\n            <p><strong>Autocarro Nº:</strong></p>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\n<butao-voltar></butao-voltar>\r\n<!-- <footer-componente></footer-componente> -->","import { AbstractControl, ValidationErrors } from \"@angular/forms\";\r\n\r\n\r\nexport class Validadores {\r\n    static SenhaForte(Input: AbstractControl): ValidationErrors | null {\r\n        const valor: string = Input.value || '';\r\n        const erros: any = {};\r\n    \r\n        if (!/[a-z]/.test(valor)) {\r\n          erros['minuscula'] = true;\r\n        }\r\n    \r\n        if (!/[A-Z]/.test(valor)) {\r\n          erros['maiuscula'] = true;\r\n        }\r\n    \r\n        if (!/[0-9]/.test(valor)) {\r\n          erros['numero'] = true;\r\n        }\r\n    \r\n        if (valor.length < 8) {\r\n          erros['caracteres'] = true;\r\n        }\r\n    \r\n        return Object.keys(erros).length > 0 ? erros : null;\r\n    }\r\n\r\n    static ConfirmacaoPassword (Input: AbstractControl): ValidationErrors | null {\r\n      const Form = Input.parent\r\n\r\n      if (Form){\r\n        const InputPassword = Form.get('password');\r\n        const InputConfirmacaoPassword = Form.get('confirm_password');\r\n    \r\n        if (InputPassword && InputConfirmacaoPassword) {\r\n          const error = InputPassword.value != InputConfirmacaoPassword.value ? { PasswordNaoIgual: true } : null;\r\n          \r\n          InputConfirmacaoPassword.setErrors(error);\r\n\r\n          const InputSelecionadoEConfirmacao = Input == InputConfirmacaoPassword;\r\n\r\n          return InputSelecionadoEConfirmacao ? error : null; // Se o input nao for o de confirmacao, retorna null\r\n        }else{\r\n          console.warn('Um dos campos não existe no formulário. Verifica se os nomes estão corretos (formControlname).');\r\n        }\r\n      }\r\n  \r\n      return null;\r\n    };\r\n}","import { Component, EventEmitter, Output, Input } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'seletor-imagens',\r\n  imports: [RouterModule],\r\n  standalone: true,\r\n  templateUrl: './seletor-imagens.html',\r\n  styleUrl: './seletor-imagens.css'\r\n})\r\n\r\nexport class SeletorImagens {\r\n  // @Input() Visivel: boolean = false;\r\n  @Output() close = new EventEmitter<void>();\r\n  @Output() imagemSelecionada = new EventEmitter<File>();\r\n\r\n\r\n  SelecionarImagem(Event: MouseEvent) {\r\n    const ElementoImagem = Event.target as HTMLImageElement;\r\n    const url = ElementoImagem.src;\r\n\r\n\r\n    this.URLParaFicheiro(url, 'imagemSelecionada.png').then(file => {\r\n      this.imagemSelecionada.emit(file);\r\n      this.close.emit()\r\n    })\r\n  }\r\n\r\n  URLParaFicheiro(url: string, filename: string): Promise<File> {\r\n  return fetch(url)\r\n    .then(res => res.blob())\r\n    .then(blob => new File([blob], filename, { type: blob.type }));\r\n}\r\n\r\n  imagensPerfil: string[] = [\r\n    'img/perfil/utilizador2.png',\r\n    'img/perfil/utilizador7.png',\r\n    'img/perfil/utilizador3.png',\r\n    'img/perfil/utilizador10.png',\r\n    'img/perfil/utilizador15.png',\r\n    'img/perfil/utilizador14.png',\r\n    'img/perfil/utilizador4.png',\r\n    'img/perfil/utilizador8.png',\r\n    'img/perfil/utilizador9.png',\r\n    'img/perfil/utilizador5.png',\r\n    'img/perfil/utilizador12.png',\r\n    'img/perfil/utilizador11.png',\r\n    'img/perfil/utilizador13.png',\r\n    'img/perfil/utilizador6.png',\r\n    'img/perfil/utilizador.png'\r\n  ];\r\n\r\n  onFechar() {\r\n    this.close.emit();\r\n  }\r\n}","<!-- @if (SelecionarImagens) { -->\r\n<!--<div *ngIf=\"SelecionarImagens\">-->\r\n<div class=\"modalFundo\">\r\n    <div id=\"modalSelecionar\" class=\"modal-selecionar\">\r\n        <div class='imgcontainer' id='sair'>\r\n            <span (click)=\"onFechar()\" class='close' title='Fechar'>&times;</span>\r\n\r\n        </div><br>\r\n\r\n        <h2 style=\"color: rgb(0, 0, 150); margin-bottom: 30px; margin-left: 30px;\">Selecione uma imagem de perfil</h2>\r\n\r\n        <div class=\"imagens\">\r\n            @for (Imagem of imagensPerfil; track $index){\r\n            <img class=\"imagem\" [src]=\"Imagem\" (click)=\"SelecionarImagem($event)\">\r\n            }\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--</div>-->\r\n<!-- } -->","import { Component, Input, Output, EventEmitter, inject, HostBinding } from '@angular/core';\r\nimport { RouterModule, } from '@angular/router';\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { ServicoAutenticacao } from '../../Services/Autenticacao.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpService } from '../../Services/Http.service';\r\nimport { Definicoes } from '../../Definicoes';\r\n\r\n@Component({\r\n  selector: 'modal-verificacao',\r\n  imports: [RouterModule, FormsModule, ReactiveFormsModule],\r\n  templateUrl: './modal-verificacao.html',\r\n  styleUrl: './modal-verificacao.css'\r\n})\r\n\r\nexport class ModalVerificacao {\r\n\r\n  @Input() Aberto!:Boolean\r\n  @Output() AbertoChange = new EventEmitter<boolean>();\r\n\r\n  MudarAberto(Estado:boolean) {\r\n    this.Aberto = Estado\r\n    this.AbertoChange.emit(Estado)\r\n  }\r\n\r\n  @HostBinding('style.display')\r\n  get display(): string {\r\n    return this.Aberto ? '' : 'none';\r\n  }\r\n\r\n  @Output() submetido = new EventEmitter<number>();\r\n\r\n  router = inject(Router);\r\n  ServicoAutenticacao = inject(ServicoAutenticacao);\r\n  ServicoHttp = inject(HttpService);\r\n\r\n  Caminho = this.router.url\r\n\r\n\r\n  async ReenviarCodigo() {\r\n  }\r\n\r\n\r\n\r\n  // Formulário de verificação\r\n  FormVerificacao: FormGroup = new FormGroup({\r\n    codigo: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(6)]),\r\n  });\r\n\r\n  //funcao para permitir apenas a insercao de numeros\r\n  permitirApenasNumeros(event: KeyboardEvent): void {\r\n    const tecla = event.key;\r\n    if (!/^\\d$/.test(tecla)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  SubmeterModal() {\r\n    if (this.FormVerificacao.invalid) return;\r\n    this.submetido.emit(this.FormVerificacao.value.codigo);\r\n  }\r\n}\r\n","<!-- @if (ModalCodigo) { -->\r\n \r\n<form  [formGroup]=\"FormVerificacao\" (ngSubmit)=\"SubmeterModal()\">\r\n    <div class='modal'>\r\n        <div class='modal-content animate'>\r\n            <!--BOTAO SAIR X-->\r\n            <div class='imgcontainer'>\r\n                <span (click)=\"MudarAberto(false)\" class='close' title='Fechar'>&times;</span>\r\n            </div><br>\r\n\r\n            <h2>Insira o código de 6 dígitos</h2><br>\r\n\r\n\r\n            <p>Insira o código de verificação que foi enviado para <strong>{{ServicoAutenticacao.Utilizador()?.email}}</strong></p><br>\r\n\r\n            <div class='container'>\r\n                    <input type='tel' formControlName=\"codigo\" class='codigoVerificacao codigo' maxlength='6' (keypress)=\"permitirApenasNumeros($event)\" required><br><br>\r\n\r\n                    <p>Se não recebeu o código, <a style=\"cursor: pointer; color:blue;\" (click)=\"ReenviarCodigo()\"><u>clique aqui</u></a> para reenviar.</p><br>\r\n\r\n                    <div class='container' style='margin-bottom: 15px;'>\r\n                        <button type='submit' class='botaoVerificar'><strong>Verificar</strong></button>\r\n                    </div>\r\n            </div><br>\r\n        </div>\r\n    </div>\r\n</form>\r\n<!-- } -->","import { Component, inject } from '@angular/core';\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { HttpService } from '../../Services/Http.service';\r\nimport { Validadores } from '../../Services/Validadores';\r\nimport { Definicoes } from '../../Definicoes';\r\nimport { SeletorImagens } from '../../Componentes/SeletorImagens/seletor-imagens';\r\nimport { ModalVerificacao } from \"../../Componentes/ModalVerificacao/modal-verificacao\";\r\nimport { Carregamento } from \"../../Componentes/Carregamento/carregamento\";\r\nimport { ServicoMensagens } from '../../Componentes/ServicoMensagens/Mensagens.service';\r\n\r\n@Component({\r\n  selector: 'criar-conta',\r\n  imports: [RouterModule, FormsModule, ReactiveFormsModule, SeletorImagens, ModalVerificacao, Carregamento],\r\n  templateUrl: './criar_conta.html',\r\n  styleUrl: './criar_conta.less'\r\n})\r\nexport class PaginaCriarConta {\r\n  ServicoHttp = inject(HttpService)\r\n  ServicoMensagens = inject(ServicoMensagens)\r\n  router = inject(Router)\r\n\r\n  MostarPassword = false\r\n  MostarConfirmacaoPassword = false\r\n  MostrarFotoCriarConta = false\r\n  SelecionarImagens = false\r\n  ModalCodigo = false\r\n  ACriarConta = false\r\n  \r\n  ngOnInit() {\r\n    if (this.SelecionarImagens === true) {\r\n      console.log('Está a aparecer!');\r\n    }\r\n  }\r\n\r\n  URL_Imagens = Definicoes.API_URL + 'imagens/utilizador'\r\n\r\n  \r\n  AMandarEmail: boolean = false;\r\n  async EnviarCodigo() {\r\n    this.AMandarEmail = true\r\n\r\n    const EmailMandado = await this.ServicoHttp.Request(Definicoes.API_URL + 'email-confirmacao', 'POST', \r\n      'Falha ao enviar o email de confirmação', {\r\n      email: this.FormCriar.value.email,\r\n    })\r\n\r\n    if (EmailMandado) {\r\n        this.ModalCodigo = true\r\n    }\r\n    this.AMandarEmail = false\r\n  }\r\n\r\n\r\n  \r\n  async CriarConta(Codigo:number){\r\n    /*this.FormCriar.disable()*/\r\n    this.ACriarConta = true\r\n\r\n    const SucessoConta = await this.ServicoHttp.Request(Definicoes.API_URL+'criar_conta', 'POST', 'Nao foi possivel criar a conta', \r\n      {\r\n        ...this.FormCriar.value,\r\n        codigo_confirmacao: Codigo\r\n      }\r\n    )\r\n\r\n    if (SucessoConta){\r\n      if (this.FicheiroSelecionado){\r\n        const Data = new FormData()\r\n        Data.append('foto', this.FicheiroSelecionado)\r\n\r\n        const SucessoImagem = await this.ServicoHttp.Request(this.URL_Imagens, 'POST', 'Nao foi possivel criar a foto da conta', Data)\r\n\r\n      }\r\n\r\n      this.ServicoMensagens.sucesso(\"Conta criada com sucesso!\")\r\n      this.router.navigate([\"/inicial\"])\r\n    }\r\n\r\n    \r\n    this.ACriarConta = false\r\n    this.FormCriar.enable()\r\n  }\r\n\r\n  Avancando = false\r\n  async Avancar(){\r\n    this.Avancando = true\r\n    \r\n    const ValoresForm = this.FormCriar.value\r\n    const Resposta = await this.ServicoHttp.Request(Definicoes.API_URL+'verificar_existe', 'GET', 'Erro ao avancar', {\r\n      nif:ValoresForm.nif,\r\n      email:ValoresForm.email\r\n    }) \r\n    \r\n    const ContaExiste = Resposta?.existe\r\n    if (!ContaExiste){\r\n      this.MostrarFotoCriarConta = true\r\n    }else{\r\n      this.ServicoMensagens.erro('Uma conta com este nif ou email ja existe!')\r\n    }\r\n    this.Avancando = false\r\n  }\r\n\r\n  FicheiroSelecionado?:File\r\n  ImagemSelecionada?:string|ArrayBuffer|null\r\n\r\n  async PreverImagem(Ficheiro: File) {\r\n    if (Ficheiro){\r\n    const reader = new FileReader();\r\n\r\n    this.FicheiroSelecionado = Ficheiro\r\n\r\n    reader.onload = () => {\r\n      this.ImagemSelecionada = reader.result\r\n    };\r\n\r\n    reader.readAsDataURL(Ficheiro);\r\n    }\r\n  }\r\n\r\n  async ImagemMudada(Event:Event){\r\n    const Input = Event.target as HTMLInputElement\r\n    this.PreverImagem(Input.files![0])\r\n  }\r\n\r\n\r\n  FormFoto: FormGroup = new FormGroup({\r\n    foto: new FormControl('', [Validators.required])\r\n  })\r\n\r\n\r\n  // definir o form com estrutura, campos e validacoes\r\n  FormCriar:FormGroup = new FormGroup({\r\n    nome: new FormControl('', [Validators.required]),\r\n    nif: new FormControl('', [Validators.required, Validators.pattern(/^\\d{9}$/)]),  // ^\\d{9}$ -> 9 digitos\r\n    password: new FormControl('', [Validators.required, Validadores.SenhaForte, Validadores.ConfirmacaoPassword]), \r\n    // o de confirmacao de password é utilizador apenas para atualizar o campo de confirmacao sempre que o da password muda.\r\n    // ^ fiz um validador com varios erros no ficheiro Services/Validadores.ts\r\n\r\n    nascimento: new FormControl('', [Validators.required]),\r\n    telefone: new FormControl('', [Validators.required, Validators.pattern(/^\\d{9}$/)]),  // ^\\d{9}$ -> 9 digitos\r\n    localidade: new FormControl('', [Validators.required]),\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    confirm_password: new FormControl('', [Validators.required, Validadores.ConfirmacaoPassword]),\r\n  });\r\n\r\n  // usei um wrapper para o form, para facilitar o acesso aos campos\r\n  // defini estas variaveis para poderem ser acedidas no html\r\n  get nome() {\r\n    return this.FormCriar.get('nome');\r\n  }\r\n  get nif() {\r\n    return this.FormCriar.get('nif');\r\n  }\r\n  get password() {\r\n    return this.FormCriar.get('password');\r\n  }\r\n  get nascimento() {\r\n    return this.FormCriar.get('nascimento');\r\n  }\r\n  get telefone() {\r\n    return this.FormCriar.get('telefone');\r\n  }\r\n  get localidade() {\r\n    return this.FormCriar.get('localidade');\r\n  }\r\n  get email() {\r\n    return this.FormCriar.get('email');\r\n  }\r\n  get confirm_password() {\r\n    return this.FormCriar.get('confirm_password');\r\n  }\r\n\r\n\r\n\r\n\r\n  //funcao para permitir apenas a insercao de letras\r\n  permitirApenasLetras(event: any) {\r\n    const input = event.target as HTMLInputElement;\r\n    input.value = input.value.replace(/[^a-zA-ZÀ-ÿ\\s]/g, '');\r\n  }\r\n\r\n  //funcao para permitir apenas a insercao de numeros\r\n  permitirApenasNumeros(event: KeyboardEvent): void {\r\n    const tecla = event.key;\r\n    if (!/^\\d$/.test(tecla)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  preencherFormComValoresAleatorios() {\r\n    const randomNif = () => {\r\n      const prefixos = [1, 2, 5, 6, 7, 9];\r\n      const prefix = prefixos[Math.floor(Math.random() * prefixos.length)];\r\n      let nif = prefix.toString();\r\n      for (let i = 0; i < 8; i++) {\r\n        nif += Math.floor(Math.random() * 10);\r\n      }\r\n      return nif;\r\n    };\r\n    const randomTelemovel = () => {\r\n      let tel = '9';\r\n      for (let i = 0; i < 8; i++) {\r\n        tel += Math.floor(Math.random() * 10);\r\n      }\r\n      return tel;\r\n    };\r\n    const randomEmail = () => {\r\n      const dominios = ['gmail.com', 'yahoo.com', 'hotmail.com'];\r\n      const dominio = dominios[Math.floor(Math.random() * dominios.length)];\r\n      const user = Math.random().toString(36).substring(2, 10);\r\n      return `teste_${user}@${dominio}`;\r\n    };\r\n    this.FormCriar.setValue({\r\n      nome: 'Teste',\r\n      nif: randomNif(),\r\n      password: 'Teste1234',\r\n      nascimento: '1990-01-01',\r\n      telefone: randomTelemovel(),\r\n      localidade: 'Lisboa',\r\n      email: randomEmail(),\r\n      confirm_password: 'Teste1234',\r\n    });\r\n  }\r\n}\r\n\r\n\r\n// DA PRINT AOS VALORES INVALIDOS DO FORM A CADA 2 SEGUDOS\r\n // setInterval(() => {\r\n\r\n    //   const invalidFields = [];\r\n    //   const controls = this.FormCriar.controls;\r\n    //   for (const name in controls) {\r\n    //     if (controls[name].invalid) {\r\n    //       invalidFields.push({\r\n    //         field: name,\r\n    //         errors: controls[name].errors\r\n    //       });\r\n    //     }\r\n    //   }\r\n    //   console.log('Invalid fields:', invalidFields);\r\n    //   return invalidFields;\r\n    \r\n    // }, 1\r\n    //2000)","\r\n<img class=\"logo\" src=\"img/logo.png\" alt=\"Logo AutoBus\">\r\n\r\n\r\n@if (!MostrarFotoCriarConta){\r\n  <div class=\"box\">\r\n\r\n    <!--<header>AutoBus</header>-->\r\n    <!-- <h1 class=\"logoTexto\">AutoBus</h1> -->\r\n    <!--<p class=\"logo\"><h1 style=\"text-align: center;\">AutoBus</h1></p>-->\r\n\r\n    <h2>Novo Registo</h2>\r\n\r\n    <form [formGroup]=\"FormCriar\">\r\n\r\n      <div class=\"row\">\r\n        <div class=\"column left\">\r\n          <!-- NOME -->\r\n          <label><strong>Nome*</strong></label><br>\r\n          <input type=\"text\" formControlName=\"nome\" style=\"padding-left:10px;\" (input)=\"permitirApenasLetras($event)\"\r\n            required>\r\n          <br><br>\r\n\r\n          <!-- NIF -->\r\n          <label><strong>NIF*</strong></label><br>\r\n          <input type=\"tel\" formControlName=\"nif\" style=\"padding-left:10px;\"\r\n            title=\"O NIF deve conter 9 números e começar com 1, 2, 5, 6, 7 ou 9.\" inputmode=\"numeric\" maxlength=\"9\"\r\n            placeholder=\"XXXXXXXXX\" (keypress)=\"permitirApenasNumeros($event)\" required>\r\n          <br>\r\n          @if (nif?.invalid && nif?.value){\r\n            <label class=\"erro-campo\">NIF Invalido</label>\r\n          }\r\n          <br>\r\n\r\n          <!-- EMAIL -->\r\n          <label><strong>E-mail*</strong></label><br>\r\n          <input type=\"email\" formControlName=\"email\" style=\"padding-left:10px;\"\r\n            title=\"O email deve ser @gmail.com, @yahoo.com ou @hotmail.com\" placeholder=\"exemplo@gmail.com\" required>\r\n          <br><br>\r\n\r\n          <!-- PALAVRA-PASSE -->\r\n          <label for=password><strong>Palavra-Passe*</strong></label><br>\r\n          <input formControlName=\"password\" class=\"campoTexto\" style=\"padding-left:10px;\"\r\n            [type]=\"MostarPassword ? 'text' : 'password'\"\r\n            title=\"Deve conter pelo menos um número, uma letra maiúscula e pelo menos 8 ou mais caracteres\" required>\r\n\r\n\r\n          <button type=\"button\" class=\"ver\" (click)=\"MostarPassword = !MostarPassword\">\r\n            <img [src]=\"MostarPassword ? 'img/aberto.png' : 'img/fechado.png'\" width=\"20px\" height=\"20px\">\r\n          </button><br>\r\n          <p>\r\n            <strong>* Campo obrigatório.</strong>\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"column right\">\r\n\r\n          <!-- DATA DE NASCIMENTO -->\r\n          <label><strong>Data de Nascimento*</strong></label><br>\r\n          <input type=\"date\" formControlName=\"nascimento\" style=\"padding-right:10px; padding-left:10px;\"\r\n            title=\"Tem de ser maior de 18 anos.\" (keypress)=\"permitirApenasNumeros($event)\">\r\n          <br><br>\r\n\r\n          <!-- TELEMOVEL -->\r\n          <label><strong>Telemóvel*</strong></label><br>\r\n          <input type=\"tel\" formControlName=\"telefone\" style=\"padding-left:10px;\"\r\n            title=\"O número de telemóvel deve conter 9 números e deve iniciar com 9.\" maxlength=\"9\"\r\n            placeholder=\"9XXXXXXXX\" (keypress)=\"permitirApenasNumeros($event)\" required>\r\n          <br>\r\n          @if (telefone?.invalid && telefone?.value){\r\n            <label class=\"erro-campo\">O número de telemóvel deve conter 9 números e deve iniciar com 9.</label>\r\n          }\r\n          <br>\r\n\r\n          <!-- LOCALIDADE -->\r\n          <label><strong>Localidade*</strong></label><br>\r\n          <input type=\"text\" formControlName=\"localidade\" style=\"padding-left:10px;\" placeholder=\"Ex: Coimbra\"\r\n            (input)=\"permitirApenasLetras($event)\" required>\r\n          <br><br>\r\n\r\n          <!-- CONFIRMAR PALAVRA-PASSE -->\r\n          <label for=pass><strong>Confirmar palavra-passe*</strong></label><br>\r\n          <input formControlName=\"confirm_password\" style=\"padding-left:10px;\"\r\n            [type]=\"MostarConfirmacaoPassword ? 'text' : 'password'\" required>\r\n          <button type=\"button\" class=\"ver\" (click)=\"MostarConfirmacaoPassword = !MostarConfirmacaoPassword\">\r\n            <img [src]=\"MostarConfirmacaoPassword ? 'img/aberto.png' : 'img/fechado.png'\" width=\"20px\" height=\"20px\">\r\n          </button>\r\n\r\n\r\n          @if (confirm_password?.hasError('PasswordNaoIgual') && confirm_password?.value){\r\n            <br>\r\n            <label class=\"erro-campo\">As passwords nao condizem</label>\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div style=\"display:flex; justify-content: space-between; margin-right: 30px;\">\r\n        <a routerLink=\"/inicial\">\r\n          <button type=\"button\" value=\"Voltar\" class=\"botaoVoltar\">Voltar</button>\r\n        </a>\r\n\r\n        <button type=\"button\" class=\"botaoCriar\" (click)=\"Avancar()\"\r\n          [disabled]=\"FormCriar.invalid || Avancando\">Avançar</button><!--[disabled]=\"FormCriar.invalid\"-->\r\n      </div>\r\n\r\n      <div id=\"popup\" class=\"modal\">\r\n        <div class=\"modal-content\">\r\n          <!--<span class=\"close\">&times;</span>-->\r\n          <p>As palavras-passe não coincidem.</p>\r\n          <p class=\"letra2\">Clique em qualquer parte do ecrã para sair.</p>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <!-- Mostar sempre que o valor nao e vazio -->\r\n  @if (password?.value != ''){\r\n    <div id=\"anchor\">\r\n      <div class=\"box2\" id=\"messageBox\">\r\n        <h3>A palavra-passe deve conter pelo menos: </h3>\r\n        <p id=\"letter\" [className]=\"password?.hasError('minuscula') ? 'invalid' : 'valid'\">\r\n          Uma letra <b>minúscula</b>\r\n        </p>\r\n        <p id=\"capital\" [className]=\"password?.hasError('maiuscula') ? 'invalid' : 'valid'\">\r\n          Uma letra <b>maiúscula</b>\r\n        </p>\r\n        <p id=\"number\" [className]=\"password?.hasError('numero') ? 'invalid' : 'valid'\">\r\n          Um <b>número</b>\r\n        </p>\r\n        <p id=\"length\" [className]=\"password?.hasError('caracteres') ? 'invalid' : 'valid'\">\r\n          Mínimo <b>8 caracteres</b>\r\n        </p>\r\n      </div>\r\n      <br><br>\r\n    </div>\r\n  }\r\n}\r\n\r\n@if (MostrarFotoCriarConta){\r\n  <div class=\"caixa\">\r\n    <div style=\"display: flex; justify-content: center; align-items: center;\">\r\n      <form [formGroup]=\"FormFoto\" (ngSubmit)=\"EnviarCodigo()\">\r\n        <div style=\"display:flex; align-items: center; justify-content: space-between;\">\r\n          <!-- <a href=\"criarConta.php\" style=\"text-decoration: none; color: white; padding-right: 20px;\">\r\n            <img class=\"imagemVolt\" src=\"img/voltarr.png\">\r\n          </a> -->\r\n\r\n          <h2 style=\"margin-left: 10px;\">Foto de perfil</h2>\r\n\r\n          <button class=\"btVoltar\" (click)=\"MostrarFotoCriarConta = false\">\r\n            <img src=\"img/voltar.png\" class=\"imagemVolt\">\r\n          </button>\r\n        </div>             \r\n\r\n        <br>\r\n\r\n        <label style=\"margin-left: 70px;\">Insira uma imagem para o teu perfil de utilizador!</label><br><br>\r\n\r\n        <a>\r\n          <img class='imagemUti' id='preview' [src]=\"ImagemSelecionada\" onerror='this.src=\"img/default.png\"'>\r\n        </a><br>\r\n\r\n        <div style=\"display:flex; justify-content: center; align-items: center;\">\r\n          <label for=\"file\" class=\"file-label\">Carregar imagem</label>\r\n          <input type=\"file\" accept=\"image/*\" id=\"file\" class=\"file-input\" name=\"foto\"\r\n            (change)=\"ImagemMudada($event)\"><br>\r\n\r\n          <label class=\"file-label\" style=\"margin-left: 10px;\">Selecionar imagem\r\n            <input type=\"button\" class=\"file-input\" (click)=\"SelecionarImagens = true\"><br>\r\n          </label>\r\n        </div>\r\n\r\n\r\n        <!-- <button type='submit' class=\"botaoCriarConta\" style='margin-right: 250px; margin-left:5px'\r\n          (click)=\"ModalCodigo = true\">Alterar depois</button> -->\r\n\r\n\r\n        <input type=\"submit\" class=\"botaoCriarConta\" (click)=\"ModalCodigo = true\" value=\"Criar conta\">\r\n\r\n        <carregamento [Visivel]=\"ACriarConta\"></carregamento>\r\n      </form>\r\n    </div>\r\n  </div>\r\n}\r\n\r\n \r\n<modal-verificacao [(Aberto)]=\"ModalCodigo\" (submetido)=\"CriarConta($event) \"></modal-verificacao>\r\n\r\n\r\n<button style=\"background-color: transparent;\" (click)=\"preencherFormComValoresAleatorios()\">Preencher</button>\r\n\r\n@if (SelecionarImagens) {\r\n  <seletor-imagens (close)=\"SelecionarImagens = false\" (imagemSelecionada)=\"PreverImagem($event)\"></seletor-imagens>\r\n}","import { Component, inject } from '@angular/core';\r\nimport { Topbar } from '../../Componentes/Topbar/topbar';\r\nimport { Footer } from '../../Componentes/Footer/footer';\r\nimport { ServicoAutenticacao } from '../../Services/Autenticacao.service';\r\nimport { HttpService } from '../../Services/Http.service';\r\nimport { Definicoes } from '../../Definicoes';\r\nimport { saveAs } from 'file-saver'; // caso ainda não tenhas\r\n\r\n@Component({\r\n    selector: 'compras',\r\n    imports: [Topbar],\r\n    templateUrl: './compras.html',\r\n    styleUrl: './compras.css'\r\n  })\r\n\r\nexport class PaginaCompras {\r\n    ServicoAutenticacao = inject(ServicoAutenticacao)\r\n    Utilizador = this.ServicoAutenticacao.Utilizador\r\n    Compras : any[] = []\r\n\r\n    ServicoHTTP = inject(HttpService)\r\n\r\n    async ngOnInit() {\r\n        const Pedido_URL = new URL(Definicoes.API_URL+\"compras\")\r\n        this.Compras = await this.ServicoHTTP.Request(Pedido_URL, \"GET\")\r\n    }\r\n\r\n\r\n    async transferirRecibo(idCompra: number) { //LocalPartida: string\r\n        const Pedido_URL = new URL(Definicoes.API_URL + `recibo/${idCompra}`);\r\n        const blob = await this.ServicoHTTP.Request(Pedido_URL, \"GET\", undefined, true)\r\n        const ficheiro = new Blob([blob], { type: 'application/pdf' });\r\n        saveAs(ficheiro, `recibo_${idCompra}.pdf`); //LocalPartida\r\n    }\r\n\r\n\r\n    //ordenar tabela por ondem mais antiga ou mais recente\r\n    ordenarCompras(criterio: 'maisAntiga' | 'maisRecente' | 'a-z' | 'z-a' | 'menorPreco' | 'maiorPreco') {\r\n        if (criterio === 'maisAntiga' || criterio === 'maisRecente') {\r\n            this.Compras.sort((a, b) => {\r\n                const dataA = new Date(a.data_compra.split('/').reverse().join('-'));\r\n                const dataB = new Date(b.data_compra.split('/').reverse().join('-'));\r\n\r\n                return criterio === 'maisAntiga'\r\n                    ? dataA.getTime() - dataB.getTime()\r\n                    : dataB.getTime() - dataA.getTime();\r\n            });\r\n        } \r\n        \r\n        else if (criterio === 'a-z' || criterio === 'z-a') {\r\n            this.Compras.sort((a, b) => {                \r\n                const descA = (a.local_partida + ' para ' + a.local_chegada).toLowerCase();\r\n                const descB = (b.local_partida + ' para ' + b.local_chegada).toLowerCase();\r\n\r\n                return criterio === 'a-z'\r\n                    ? descA.localeCompare(descB)\r\n                    : descB.localeCompare(descA);\r\n            });\r\n        }\r\n\r\n        else if (criterio === 'menorPreco' || criterio === 'maiorPreco') {\r\n            this.Compras.sort((a, b) => {\r\n                return criterio === 'menorPreco'\r\n                    ? a.preco - b.preco\r\n                    : b.preco - a.preco;\r\n            });\r\n        }\r\n    }\r\n\r\n    onFiltroAlterado(event: Event) {\r\n        \r\n        const valor = (event.target as HTMLSelectElement).value;\r\n\r\n        switch (valor) {\r\n            case 'Mais antiga': this.ordenarCompras('maisAntiga'); break;\r\n            case 'Mais recente': this.ordenarCompras('maisRecente'); break;\r\n            case 'A-Z': this.ordenarCompras('a-z'); break;\r\n            case 'Z-A': this.ordenarCompras('z-a'); break;\r\n            case 'Menor preço': this.ordenarCompras('menorPreco'); break;\r\n            case 'Maior preço': this.ordenarCompras('maiorPreco'); break;\r\n        }\r\n    }\r\n}\r\n\r\n","<topbar></topbar>\r\n\r\n\r\n<div class=\"pagina\">\r\n\r\n    <h1 class=\"titulo\">Compras realizadas</h1>\r\n\r\n\r\n    @if (Compras.length === 0) {\r\n    <h3 style=\"text-align: center; margin-top: 100px; color: rgb(5, 5, 96);\">Não existem compras registadas!</h3>\r\n    }\r\n\r\n    @else {\r\n    <h4 style=\"text-align: center;\">Caso deseje fazer o download do recibo, basta clicar no botão de download!</h4><br>\r\n    }\r\n    <!-- <h2 style=\"text-align: center; margin-bottom:70px; color: rgb(5, 5, 96);\">Bilhetes</h2> -->\r\n\r\n\r\n\r\n\r\n    <div class=\"tabela-container\" >\r\n        <h4 style=\"padding-left: 10%;\">Filtrar por:\r\n            <select class=\"select-filtro\" (change)=\"onFiltroAlterado($event)\"> <!-- [(ngModel)]=\"filtro\"-->\r\n                <option>A-Z</option>\r\n                <option>Z-A</option>\r\n                <option>Mais recente</option>\r\n                <option>Mais antiga</option>\r\n                <option>Menor preço</option>\r\n                <option>Maior preço</option>\r\n            </select>\r\n        </h4><br>\r\n\r\n        <table class=\"tabela\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Data</th>\r\n                    <th>Descrição</th>\r\n                    <th>Total pago</th>\r\n                    <th>Recibo</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                @for (Recibo of Compras ; track $index){\r\n                <tr>\r\n                    <td>{{Recibo.data_compra}}</td>\r\n                    <td><a><strong>{{Recibo.local_partida}} para {{Recibo.local_chegada}}</strong></a></td>\r\n                    <td>{{Recibo.preco}}€</td>\r\n                    <td>\r\n                        <button class=\"botao-transferir\" style=\"display: flex;\"\r\n                            (click)=\"transferirRecibo(Recibo.id_compraRealizada)\"> <!--\" -->\r\n                            <img src=\"img/transferir.png\">\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n                }\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import { Component, inject, Output, EventEmitter } from '@angular/core';\r\nimport { Topbar } from '../../Componentes/Topbar/topbar';\r\nimport { ServicoAutenticacao } from '../../Services/Autenticacao.service';\r\nimport { HttpService } from '../../Services/Http.service';\r\nimport { Definicoes } from '../../Definicoes';\r\nimport { FormsModule, FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { Carregamento } from '../../Componentes/Carregamento/carregamento';\r\n\r\n@Component({\r\n  selector: 'pagina-carrinho',\r\n  imports: [Topbar, FormsModule, ReactiveFormsModule, CurrencyPipe, Carregamento],\r\n  templateUrl: './carrinho.html',\r\n  styleUrl: './carrinho.css'\r\n})\r\n\r\n\r\nexport class PaginaCarrinho {\r\n  ServicoAutenticacao = inject(ServicoAutenticacao)\r\n  Utilizador = this.ServicoAutenticacao.Utilizador\r\n\r\n\r\n  ModalMetodo = false\r\n  TipoPagamentoCartao = false\r\n  TipoPagamentoMB = false\r\n  ModalCodigo = false\r\n  \r\n  AMandarEmail: boolean = false;\r\n\r\n  ServicoHttp = inject(HttpService)\r\n  Carrinho : any[] = []\r\n  Total: number = 0;\r\n\r\n  @Output() submetido = new EventEmitter<number>();\r\n\r\n  async ngOnInit() {\r\n    this.Total = 0\r\n\r\n    const Pedido_URL = new URL(Definicoes.API_URL+\"carrinho\") //api = http://localhost:3000/api/\r\n\r\n    this.Carrinho = await this.ServicoHttp.Request(Pedido_URL, \"GET\") \r\n\r\n    this.Carrinho.forEach((produto: any) => {\r\n      this.Total += produto.preco\r\n    })\r\n  }\r\n\r\n\r\n  //funcao para submeter o formulario do cartao\r\n  async realizarCompra() {\r\n    const Pedido_URL = new URL(Definicoes.API_URL+\"comprar\") \r\n\r\n    const resultadoCompra = await this.ServicoHttp.Request(Pedido_URL, \"POST\", \"\", {\r\n      nome_cartao: this.FormCartao.value.nome_cartao,\r\n      numero_cartao: this.FormCartao.value.numero_cartao,\r\n      validade: this.FormCartao.value.validade,\r\n      guardarCartao: this.FormCartao.value.guardarCartao,\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  //funcao para remover um produto do carrinho\r\n  async removerBilhete(idProduto: number) {\r\n\r\n    const Pedido_URL = new URL(Definicoes.API_URL+\"carrinho\") //api = http://localhost:3000/api/\r\n\r\n    await this.ServicoHttp.Request(Pedido_URL, \"DELETE\", \"\", {id_produto: idProduto}) \r\n\r\n    this.ngOnInit()\r\n  }\r\n\r\n  async SubmeterModal() {\r\n    this.AMandarEmail = true\r\n\r\n    const EmailMandado = await this.ServicoHttp.Request(Definicoes.API_URL + 'email-confirmacao', 'POST', \r\n      'Falha ao enviar o email de confirmação')\r\n\r\n    \r\n    this.ModalMetodo = false\r\n    this.TipoPagamentoCartao = false\r\n    this.TipoPagamentoMB = false\r\n    this.ModalCodigo = false\r\n      \r\n    this.AMandarEmail = false\r\n  }\r\n\r\n\r\n\r\n  FormCartao:FormGroup = new FormGroup({\r\n    nome_cartao: new FormControl('', []),\r\n    numero_cartao: new FormControl('', []),\r\n    validade: new FormControl('', []),\r\n    guardarCartao: new FormControl(false, []),\r\n  });\r\n\r\n\r\n  FormCodigo: FormGroup = new FormGroup({\r\n    codigo: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(6)]),\r\n  });\r\n\r\n\r\n  // SubmeterModal() {\r\n  //   this.submetido.emit(this.FormCodigo.value.codigo);\r\n  // }\r\n\r\n\r\n  //funcao para permitir apenas a insercao de letras\r\n  permitirApenasLetras(event: any) {\r\n    const input = event.target as HTMLInputElement;\r\n    input.value = input.value.replace(/[^a-zA-ZÀ-ÿ\\s]/g, '');\r\n  }\r\n\r\n  //funcao para permitir apenas a insercao de numeros\r\n  permitirApenasNumeros(event: KeyboardEvent): void {\r\n    const tecla = event.key;\r\n    if (!/^\\d$/.test(tecla)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n\r\n  //funcao para fazer a mascara do input do cartao, com limite de digitos e os espacos\r\n  formatarCartao(event: Event): void {\r\n    let input = (event.target as HTMLInputElement).value;\r\n    input = input.replace(/\\D/g, ''); // remove não números\r\n    //input = input.substring(0, 16);   // limita a 16 dígitos\r\n    input = input.replace(/(\\d{4})(?=\\d)/g, '$1 '); // insere espaços a cada 4 dígitos\r\n    (event.target as HTMLInputElement).value = input;\r\n  }\r\n\r\n\r\n  //funcao para a validade do cartao\r\n  formatarValidade(event: Event): void {\r\n    let input = (event.target as HTMLInputElement).value;\r\n    input = input.replace(/\\D/g, '');\r\n    input = input.substring(0, 4); // MMYY\r\n  \r\n    //verificacao do mes\r\n    if (input.length >= 2) {\r\n      const mes = parseInt(input.substring(0, 2), 10);\r\n      if (mes < 1 || mes > 12) {\r\n        (event.target as HTMLInputElement).value = '';\r\n        return;\r\n      }\r\n    }\r\n  \r\n    if (input.length > 2) {\r\n      input = input.replace(/(\\d{2})(\\d{1,2})/, '$1/$2'); //adicionar a barra entre o mes e o ano\r\n    }\r\n  \r\n    (event.target as HTMLInputElement).value = input;\r\n  \r\n    // Validação completa da data\r\n\r\n    //esta funcao vai separar o input em mes e ano e adicionar o \"20\" antes do parametro do utilizador\r\n    //vai buscar o ano e mes atual e verificar se o cartao é valido ou nao, caso nao um alert aparece\r\n    if (input.length === 5) {\r\n      const [mesStr, anoStr] = input.split('/');\r\n      const mes = parseInt(mesStr, 10);\r\n      const ano = parseInt('20' + anoStr, 10);\r\n  \r\n      const hoje = new Date();\r\n      const anoAtual = hoje.getFullYear();\r\n      const mesAtual = hoje.getMonth() + 1;\r\n  \r\n      if (ano < anoAtual || (ano === anoAtual && mes < mesAtual)) {\r\n        alert('Data de validade inválida');\r\n        (event.target as HTMLInputElement).value = '';\r\n      }\r\n    }\r\n  }  \r\n}\r\n\r\n","\r\n<topbar></topbar>\r\n\r\n<div class=\"row\">\r\n    <div class=\"column left\">\r\n    \r\n        <h1 class=\"titulo\">Meu carrinho</h1>\r\n\r\n        <h2 style=\"text-align: center; margin-bottom:50px; color: rgb(5, 5, 96);\">Bilhetes</h2>\r\n\r\n        @if (Carrinho.length == 0) {\r\n            <h3 style=\"text-align: center; margin-top: 100px; color: rgb(5, 5, 96);\">O seu carrinho está vazio!</h3>\r\n        } \r\n        \r\n        @else {\r\n            <h4 style=\"text-align: center; margin-top: 20px;\">Caso deseje remover algum bilhete, basta clicar no botão de excluir!</h4><br>\r\n        }\r\n\r\n       \r\n        @for (Bilhete of Carrinho ; track $index){\r\n            <div class='caixaBilhete'>\r\n                <div>\r\n                    <a><strong>{{Bilhete.local_partida}} ⮕ {{Bilhete.local_chegada}}</strong></a>\r\n                    <h2>{{Bilhete.preco | currency:'EUR'}}</h2>\r\n                </div>\r\n    \r\n                <div>\r\n                    <a>Hora de partida: {{Bilhete.hora_partida}}</a>\r\n                    <button class='btCarrinho' (click)=\"removerBilhete(Bilhete.id_produto)\">\r\n                        <img src=\"img/carrinhoExcluirA.png\" style=\"height: 25px; width: 25;\">\r\n                    </button>\r\n                </div>\r\n                <!--<button class='botaoTransicao verMais'></button>-->\r\n            </div>\r\n        }        \r\n    </div>\r\n\r\n    <!--CAIXA DE RESUMO DA COMPRA-->\r\n    <div class=\"column right\">\r\n        <h2 style=\"text-align: center; margin-top: 120px; margin-bottom:50px; color: rgb(5, 5, 96);\">Resumo da compra:</h2>\r\n\r\n        <div class=\"caixaTotal\">\r\n            <div style=\"display: flex; margin-top: 10px; padding-bottom: 5%; justify-content: space-between;\">\r\n                <strong>Total a pagar: </strong>\r\n                <strong formControlName=\"preco\">{{Total | currency:\"EUR\"}}</strong>\r\n            </div>\r\n\r\n            <hr><br>\r\n            \r\n            @if (Carrinho.length == 0) {\r\n                <button formControlName=\"openModal\" class=\"botaoFinalizarDisable botaoTransicao\" (click)=\"ModalMetodo = false\" [disabled]=\"Carrinho.length == 0\">\r\n                    Finalizar compra\r\n                </button> \r\n            }\r\n\r\n            @else {\r\n                <button formControlName=\"openModal\" class=\"botaoFinalizar botaoTransicao\" (click)=\"ModalMetodo = true\">\r\n                    Finalizar compra\r\n                </button> \r\n            }\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n@if (ModalMetodo == true || TipoPagamentoCartao == true || TipoPagamentoMB == true || ModalCodigo == true){\r\n    <div class=\"modalFUNDO\"> \r\n\r\n        @if (ModalMetodo) {\r\n            <!-- CAIXA DE PAGAMENTO ---------------------------------------------------------------> \r\n            <div  id=\"modalMetodo\" class=\"modal-payment\">\r\n                <button class=\"fechar\" id=\"fecharModal\" (click)=\"ModalMetodo = false\">✖</button>\r\n                <h2 style=\"color: rgb(0, 0, 150); margin-bottom: 50px; margin-left: 20px;\">Método de pagamento</h2>\r\n\r\n                <div class=\"caixaEscolha\" style=\"display: flex;\">\r\n                    <button id=\"btnCartao\" class=\"btnEscolha\" style=\"display:flex; padding-top: 10px;\" (click)=\"TipoPagamentoCartao = true\">\r\n                        <label style=\"margin-right:120px; margin-top:6px; cursor:pointer;\">Cartão de crédito</label>\r\n                        <img src=\"img/cartoes.png\" style=\"height: 25px; width: 25;\">\r\n                    </button>\r\n                </div>\r\n                <div class=\"caixaEscolha\" style=\"margin-bottom:30px;\">\r\n                    <button id=\"btnMbway\" class=\"btnEscolha\"  style=\"display:flex; padding-top: 10px;\" (click)=\"TipoPagamentoMB = true\">\r\n                        <label style=\"margin-right:180px; margin-top:6px; cursor:pointer;\">MB WAY</label>\r\n                        <img src=\"img/mbway.png\" style=\"height: 25px; width: 25;\">\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n        @if (TipoPagamentoCartao) {\r\n             <!-- OPCAO DO CARTAO DE CREDITO -->\r\n            <div id=\"modalCartao\" class=\"modalTipoPagamentoCartao\">\r\n                <!--<?php //var_dump($_SESSION[\"metodoPagamento\"])?>-->\r\n                <button class=\"fechar\" id=\"fecharModal2\" (click)=\"TipoPagamentoCartao = false\">✖</button><br>\r\n    \r\n                <h2 style=\"color: rgb(0, 0, 150); margin-bottom: 50px; margin-left: 20px;\">Pagamento com cartão de crédito</h2>\r\n    \r\n                <form [formGroup]=\"FormCartao\" (ngSubmit)=\"SubmeterModal()\">\r\n                    <div style=\"margin-left:20px;\">\r\n                        <div class=\"form-group\">\r\n                            <input type=\"text\" formControlName=\"nome_cartao\"  placeholder=\" \" required class=\"input-grande\" (input)=\"permitirApenasLetras($event)\"/>\r\n                            <label>Nome do titular do cartão</label>\r\n                        </div>\r\n    \r\n                        <div class=\"form-group\">\r\n                            <input type=\"tel\" formControlName=\"numero_cartao\"  placeholder=\" \" maxlength=\"19\" required class=\"input-grande\" \r\n                            (input)=\"formatarCartao($event)\"/>\r\n                            <label>Número do cartão</label>\r\n                        </div>\r\n    \r\n                        <div style=\"display: flex;\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"text\" formControlName=\"validade\"  placeholder=\" \" required class=\"input-pequeno\"\r\n                                       (input)=\"formatarValidade($event)\"/>\r\n                                <label>Validade</label>\r\n                            </div> \r\n    \r\n                            <div class=\"form-group\" style=\"margin-left:-70px; margin-right:0px;\">\r\n                                <input type=\"password\" formControlName=\"cvv\"  placeholder=\" \"minlength=\"3\" maxlength=\"3\" class=\"input-pequeno\" required\r\n                                       (keypress)=\"permitirApenasNumeros($event)\"/>\r\n                                <label>CVV</label>\r\n                            </div>\r\n    \r\n                            <img src=\"img/visamastercard.png\" style=\"height:40px; width: 45px; margin-right:20px; margin-left:-70px;\">\r\n                        </div>\r\n    \r\n                        <div style=\"display: flex; margin-bottom: 30px;\">\r\n                            <input type=\"checkbox\" style=\"margin-right: 10px; cursor:pointer;\" formControlName=\"guardarCartao\">\r\n                            <label>Guardar os dados do cartão.</label>\r\n                        </div>\r\n    \r\n                        <button type=\"submit\" id=\"openCode\" class=\"btnContinuarPay botaoTransicao\" (click)=\"ModalCodigo = true\">Continuar</button>\r\n                    </div>               \r\n                </form>\r\n            </div>\r\n        }\r\n\r\n        @else if (TipoPagamentoMB) {\r\n            <!-- OPCAO DO MBWAY -->\r\n            <div id=\"modalMbway\" class=\"modalTipoPagamentoMB\">\r\n                <button class=\"fechar\" id=\"fecharModal3\" (click)=\"TipoPagamentoMB = false\">✖</button>\r\n\r\n                <h2 style=\"color: rgb(0, 0, 150); margin-bottom: 50px; margin-left: 20px;\">Pagamento com MB WAY</h2>\r\n\r\n                <div style=\"margin-left:20px;\">\r\n                    <div class=\"form-group\">\r\n                        <input type=\"tel\" id=\"telefone\" name=\"telefone\" maxlength=\"9\" placeholder=\" \" style=\"padding-left:20px;\" required class=\"input-grande\" \r\n                            (keypress)=\"permitirApenasNumeros($event)\" [value]=\"ServicoAutenticacao.Utilizador()?.telefone\"/>\r\n                        <label>Número de telemóvel</label>\r\n                    </div>\r\n\r\n                    <label>Caso este não seja o teu número associado ao MBWAY, altere-o.</label><br><br><br>\r\n\r\n                    <button id=\"openCode\" class=\"btnContinuarPay botaoTransicao\" (click)=\"ModalCodigo = true\">Continuar</button>\r\n                </div>\r\n            </div>\r\n        }\r\n\r\n\r\n        @if (ModalCodigo) {\r\n            \r\n            <carregamento [Visivel]=\"AMandarEmail\"></carregamento>\r\n\r\n            <!--MODAL DE CODIGO DE CONFIRMACAO-->\r\n            \r\n            <div class='modalCodigo' style=\"align-items: center; justify-content: center;\">\r\n                <button class=\"fechar\" (click)=\"ModalCodigo = false\">✖</button><br><br>\r\n    \r\n                <h2 style=\"color: rgb(0, 0, 150); margin-bottom: 30px; margin-left: 20px; text-align: center;\">Insira o código de 6 dígitos</h2>\r\n    \r\n                <p style=\"margin-left:20px; text-align:center; margin-bottom: 70 px;\">Insira o código de verificação que foi enviado para \r\n                    <strong>{{ServicoAutenticacao.Utilizador()?.email}}</strong>\r\n                </p><br>\r\n    \r\n                <div class='container'>\r\n                    <form [formGroup]=\"FormCodigo\"> \r\n                        <input type='tel' formControlName=\"codigo\" class='codigo' maxlength='6' (keypress)=\"permitirApenasNumeros($event)\" required>\r\n\r\n                        <div class='container' style='margin-bottom: 15px; justify-content: center;'>\r\n                            <button type='submit' class='btnContinuarPay botaoTransicao'><strong>Verificar</strong></button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- <div style=\"animation: slideFromRight 0.5s forwards; z-index: 3;\">\r\n                <modal-verificacao [Aberto]=\"ModalCodigo\"></modal-verificacao>\r\n            </div> -->\r\n        }\r\n\r\n    </div>\r\n}\r\n<!-- <footer-componente></footer-componente> -->","import * as i0 from '@angular/core';\nimport { inject, ElementRef, NgZone, EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, Directive, InjectionToken, ContentChildren, NgModule, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Observable, Subject, combineLatest, Subscription } from 'rxjs';\nimport { switchMap, take, map, takeUntil } from 'rxjs/operators';\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nconst _c0 = [\"*\"];\nclass MapEventManager {\n  _ngZone;\n  /** Pending listeners that were added before the target was set. */\n  _pending = [];\n  _listeners = [];\n  _targetStream = /*#__PURE__*/new BehaviorSubject(undefined);\n  /** Clears all currently-registered event listeners. */\n  _clearListeners() {\n    for (const listener of this._listeners) {\n      listener.remove();\n    }\n    this._listeners = [];\n  }\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n  }\n  /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n  getLazyEmitter(name) {\n    return this._targetStream.pipe(switchMap(target => {\n      const observable = new Observable(observer => {\n        // If the target hasn't been initialized yet, cache the observer so it can be added later.\n        if (!target) {\n          this._pending.push({\n            observable,\n            observer\n          });\n          return undefined;\n        }\n        const listener = target.addListener(name, event => {\n          this._ngZone.run(() => observer.next(event));\n        });\n        // If there's an error when initializing the Maps API (e.g. a wrong API key), it will\n        // return a dummy object that returns `undefined` from `addListener` (see #26514).\n        if (!listener) {\n          observer.complete();\n          return undefined;\n        }\n        this._listeners.push(listener);\n        return () => listener.remove();\n      });\n      return observable;\n    }));\n  }\n  /** Sets the current target that the manager should bind events to. */\n  setTarget(target) {\n    const currentTarget = this._targetStream.value;\n    if (target === currentTarget) {\n      return;\n    }\n    // Clear the listeners from the pre-existing target.\n    if (currentTarget) {\n      this._clearListeners();\n      this._pending = [];\n    }\n    this._targetStream.next(target);\n    // Add the listeners that were bound before the map was initialized.\n    this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n    this._pending = [];\n  }\n  /** Destroys the manager and clears the event listeners. */\n  destroy() {\n    this._clearListeners();\n    this._pending = [];\n    this._targetStream.complete();\n  }\n}\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/** default options set to the Googleplex */\nconst DEFAULT_OPTIONS = {\n  center: {\n    lat: 37.421995,\n    lng: -122.084092\n  },\n  zoom: 17,\n  // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n  mapTypeId: 'roadmap'\n};\n/** Arbitrary default height for the map element */\nconst DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nconst DEFAULT_WIDTH = '500px';\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\nlet GoogleMap = /*#__PURE__*/(() => {\n  class GoogleMap {\n    _elementRef = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    _eventManager = new MapEventManager(inject(NgZone));\n    _mapEl;\n    _existingAuthFailureCallback;\n    /**\n     * The underlying google.maps.Map object\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/map#Map\n     */\n    googleMap;\n    /** Whether we're currently rendering inside a browser. */\n    _isBrowser;\n    /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n    height = DEFAULT_HEIGHT;\n    /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n    width = DEFAULT_WIDTH;\n    /**\n     * The Map ID of the map. This parameter cannot be set or changed after a map is instantiated.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/map#MapOptions.mapId\n     */\n    mapId;\n    /**\n     * Type of map that should be rendered. E.g. hybrid map, terrain map etc.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/map#MapTypeId\n     */\n    mapTypeId;\n    set center(center) {\n      this._center = center;\n    }\n    _center;\n    set zoom(zoom) {\n      this._zoom = zoom;\n    }\n    _zoom;\n    set options(options) {\n      this._options = options || DEFAULT_OPTIONS;\n    }\n    _options = DEFAULT_OPTIONS;\n    /** Event emitted when the map is initialized. */\n    mapInitialized = new EventEmitter();\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/events#auth-errors\n     */\n    authFailure = new EventEmitter();\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n     */\n    boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n     */\n    centerChanged = this._eventManager.getLazyEmitter('center_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n     */\n    mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n     */\n    mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n     */\n    mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n     */\n    mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n     */\n    mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n     */\n    headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n     */\n    idle = this._eventManager.getLazyEmitter('idle');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n     */\n    maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n     */\n    mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n     */\n    mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n     */\n    mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n     */\n    projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n     */\n    mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n     */\n    tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n     */\n    tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n     */\n    zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n    constructor() {\n      const platformId = inject(PLATFORM_ID);\n      this._isBrowser = isPlatformBrowser(platformId);\n      if (this._isBrowser) {\n        const googleMapsWindow = window;\n        if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw Error('Namespace google not found, cannot construct embedded google ' + 'map. Please install the Google Maps JavaScript API: ' + 'https://developers.google.com/maps/documentation/javascript/' + 'tutorial#Loading_the_Maps_API');\n        }\n        this._existingAuthFailureCallback = googleMapsWindow.gm_authFailure;\n        googleMapsWindow.gm_authFailure = () => {\n          if (this._existingAuthFailureCallback) {\n            this._existingAuthFailureCallback();\n          }\n          this.authFailure.emit();\n        };\n      }\n    }\n    ngOnChanges(changes) {\n      if (changes['height'] || changes['width']) {\n        this._setSize();\n      }\n      const googleMap = this.googleMap;\n      if (googleMap) {\n        if (changes['options']) {\n          googleMap.setOptions(this._combineOptions());\n        }\n        if (changes['center'] && this._center) {\n          googleMap.setCenter(this._center);\n        }\n        // Note that the zoom can be zero.\n        if (changes['zoom'] && this._zoom != null) {\n          googleMap.setZoom(this._zoom);\n        }\n        if (changes['mapTypeId'] && this.mapTypeId) {\n          googleMap.setMapTypeId(this.mapTypeId);\n        }\n      }\n    }\n    ngOnInit() {\n      // It should be a noop during server-side rendering.\n      if (this._isBrowser) {\n        this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n        this._setSize();\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        if (google.maps.Map) {\n          this._initialize(google.maps.Map);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            google.maps.importLibrary('maps').then(lib => this._initialize(lib.Map));\n          });\n        }\n      }\n    }\n    _initialize(mapConstructor) {\n      this._ngZone.runOutsideAngular(() => {\n        this.googleMap = new mapConstructor(this._mapEl, this._combineOptions());\n        this._eventManager.setTarget(this.googleMap);\n        this.mapInitialized.emit(this.googleMap);\n      });\n    }\n    ngOnDestroy() {\n      this.mapInitialized.complete();\n      this._eventManager.destroy();\n      if (this._isBrowser) {\n        const googleMapsWindow = window;\n        googleMapsWindow.gm_authFailure = this._existingAuthFailureCallback;\n      }\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n     */\n    fitBounds(bounds, padding) {\n      this._assertInitialized();\n      this.googleMap.fitBounds(bounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n     */\n    panBy(x, y) {\n      this._assertInitialized();\n      this.googleMap.panBy(x, y);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n     */\n    panTo(latLng) {\n      this._assertInitialized();\n      this.googleMap.panTo(latLng);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n     */\n    panToBounds(latLngBounds, padding) {\n      this._assertInitialized();\n      this.googleMap.panToBounds(latLngBounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n     */\n    getBounds() {\n      this._assertInitialized();\n      return this.googleMap.getBounds() || null;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n     */\n    getCenter() {\n      this._assertInitialized();\n      return this.googleMap.getCenter();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n     */\n    getClickableIcons() {\n      this._assertInitialized();\n      return this.googleMap.getClickableIcons();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n     */\n    getHeading() {\n      this._assertInitialized();\n      return this.googleMap.getHeading();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n     */\n    getMapTypeId() {\n      this._assertInitialized();\n      return this.googleMap.getMapTypeId();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n     */\n    getProjection() {\n      this._assertInitialized();\n      return this.googleMap.getProjection() || null;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n     */\n    getStreetView() {\n      this._assertInitialized();\n      return this.googleMap.getStreetView();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n     */\n    getTilt() {\n      this._assertInitialized();\n      return this.googleMap.getTilt();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n     */\n    getZoom() {\n      this._assertInitialized();\n      return this.googleMap.getZoom();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n     */\n    get controls() {\n      this._assertInitialized();\n      return this.googleMap.controls;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n     */\n    get data() {\n      this._assertInitialized();\n      return this.googleMap.data;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n     */\n    get mapTypes() {\n      this._assertInitialized();\n      return this.googleMap.mapTypes;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n     */\n    get overlayMapTypes() {\n      this._assertInitialized();\n      return this.googleMap.overlayMapTypes;\n    }\n    /** Returns a promise that resolves when the map has been initialized. */\n    _resolveMap() {\n      return this.googleMap ? Promise.resolve(this.googleMap) : this.mapInitialized.pipe(take(1)).toPromise();\n    }\n    _setSize() {\n      if (this._mapEl) {\n        const styles = this._mapEl.style;\n        styles.height = this.height === null ? '' : coerceCssPixelValue(this.height) || DEFAULT_HEIGHT;\n        styles.width = this.width === null ? '' : coerceCssPixelValue(this.width) || DEFAULT_WIDTH;\n      }\n    }\n    /** Combines the center and zoom and the other map options into a single object */\n    _combineOptions() {\n      const options = this._options || {};\n      return {\n        ...options,\n        // It's important that we set **some** kind of `center` and `zoom`, otherwise\n        // Google Maps will render a blank rectangle which looks broken.\n        center: this._center || options.center || DEFAULT_OPTIONS.center,\n        zoom: this._zoom ?? options.zoom ?? DEFAULT_OPTIONS.zoom,\n        // Passing in an undefined `mapTypeId` seems to break tile loading\n        // so make sure that we have some kind of default (see #22082).\n        mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId,\n        mapId: this.mapId || options.mapId\n      };\n    }\n    /** Asserts that the map has been initialized. */\n    _assertInitialized() {\n      if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n    }\n    static ɵfac = function GoogleMap_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || GoogleMap)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: GoogleMap,\n      selectors: [[\"google-map\"]],\n      inputs: {\n        height: \"height\",\n        width: \"width\",\n        mapId: \"mapId\",\n        mapTypeId: \"mapTypeId\",\n        center: \"center\",\n        zoom: \"zoom\",\n        options: \"options\"\n      },\n      outputs: {\n        mapInitialized: \"mapInitialized\",\n        authFailure: \"authFailure\",\n        boundsChanged: \"boundsChanged\",\n        centerChanged: \"centerChanged\",\n        mapClick: \"mapClick\",\n        mapDblclick: \"mapDblclick\",\n        mapDrag: \"mapDrag\",\n        mapDragend: \"mapDragend\",\n        mapDragstart: \"mapDragstart\",\n        headingChanged: \"headingChanged\",\n        idle: \"idle\",\n        maptypeidChanged: \"maptypeidChanged\",\n        mapMousemove: \"mapMousemove\",\n        mapMouseout: \"mapMouseout\",\n        mapMouseover: \"mapMouseover\",\n        projectionChanged: \"projectionChanged\",\n        mapRightclick: \"mapRightclick\",\n        tilesloaded: \"tilesloaded\",\n        tiltChanged: \"tiltChanged\",\n        zoomChanged: \"zoomChanged\"\n      },\n      exportAs: [\"googleMap\"],\n      features: [i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c0,\n      decls: 2,\n      vars: 0,\n      consts: [[1, \"map-container\"]],\n      template: function GoogleMap_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelement(0, \"div\", 0);\n          i0.ɵɵprojection(1);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return GoogleMap;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n  if (value == null) {\n    return '';\n  }\n  return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\nlet MapBaseLayer = /*#__PURE__*/(() => {\n  class MapBaseLayer {\n    _map = inject(GoogleMap);\n    _ngZone = inject(NgZone);\n    constructor() {}\n    ngOnInit() {\n      if (this._map._isBrowser) {\n        this._ngZone.runOutsideAngular(() => {\n          this._initializeObject();\n        });\n        this._assertInitialized();\n        this._setMap();\n      }\n    }\n    ngOnDestroy() {\n      this._unsetMap();\n    }\n    _assertInitialized() {\n      if (!this._map.googleMap) {\n        throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n      }\n    }\n    _initializeObject() {}\n    _setMap() {}\n    _unsetMap() {}\n    static ɵfac = function MapBaseLayer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapBaseLayer)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapBaseLayer,\n      selectors: [[\"map-base-layer\"]],\n      exportAs: [\"mapBaseLayer\"]\n    });\n  }\n  return MapBaseLayer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\nlet MapBicyclingLayer = /*#__PURE__*/(() => {\n  class MapBicyclingLayer {\n    _map = inject(GoogleMap);\n    _zone = inject(NgZone);\n    /**\n     * The underlying google.maps.BicyclingLayer object.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n     */\n    bicyclingLayer;\n    /** Event emitted when the bicycling layer is initialized. */\n    bicyclingLayerInitialized = new EventEmitter();\n    ngOnInit() {\n      if (this._map._isBrowser) {\n        if (google.maps.BicyclingLayer && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.BicyclingLayer);\n        } else {\n          this._zone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n              this._initialize(map, lib.BicyclingLayer);\n            });\n          });\n        }\n      }\n    }\n    _initialize(map, layerConstructor) {\n      this._zone.runOutsideAngular(() => {\n        this.bicyclingLayer = new layerConstructor();\n        this.bicyclingLayerInitialized.emit(this.bicyclingLayer);\n        this._assertLayerInitialized();\n        this.bicyclingLayer.setMap(map);\n      });\n    }\n    ngOnDestroy() {\n      this.bicyclingLayer?.setMap(null);\n    }\n    _assertLayerInitialized() {\n      if (!this.bicyclingLayer) {\n        throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' + 'Please wait for the Transit Layer to load before trying to interact with it.');\n      }\n    }\n    static ɵfac = function MapBicyclingLayer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapBicyclingLayer)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapBicyclingLayer,\n      selectors: [[\"map-bicycling-layer\"]],\n      outputs: {\n        bicyclingLayerInitialized: \"bicyclingLayerInitialized\"\n      },\n      exportAs: [\"mapBicyclingLayer\"]\n    });\n  }\n  return MapBicyclingLayer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\nlet MapCircle = /*#__PURE__*/(() => {\n  class MapCircle {\n    _map = inject(GoogleMap);\n    _ngZone = inject(NgZone);\n    _eventManager = new MapEventManager(inject(NgZone));\n    _options = new BehaviorSubject({});\n    _center = new BehaviorSubject(undefined);\n    _radius = new BehaviorSubject(undefined);\n    _destroyed = new Subject();\n    /**\n     * Underlying google.maps.Circle object.\n     *\n     * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n     */\n    circle; // initialized in ngOnInit\n    set options(options) {\n      this._options.next(options || {});\n    }\n    set center(center) {\n      this._center.next(center);\n    }\n    set radius(radius) {\n      this._radius.next(radius);\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n     */\n    centerChanged = this._eventManager.getLazyEmitter('center_changed');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n     */\n    circleClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n     */\n    circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n     */\n    circleDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n     */\n    circleDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n     */\n    circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n     */\n    circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n     */\n    circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n     */\n    circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n     */\n    circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n     */\n    circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n     */\n    radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n     */\n    circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /** Event emitted when the circle is initialized. */\n    circleInitialized = new EventEmitter();\n    constructor() {}\n    ngOnInit() {\n      if (!this._map._isBrowser) {\n        return;\n      }\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        if (google.maps.Circle && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.Circle, options);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n              this._initialize(map, lib.Circle, options);\n            });\n          });\n        }\n      });\n    }\n    _initialize(map, circleConstructor, options) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.circle = new circleConstructor(options);\n        this._assertInitialized();\n        this.circle.setMap(map);\n        this._eventManager.setTarget(this.circle);\n        this.circleInitialized.emit(this.circle);\n        this._watchForOptionsChanges();\n        this._watchForCenterChanges();\n        this._watchForRadiusChanges();\n      });\n    }\n    ngOnDestroy() {\n      this._eventManager.destroy();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this.circle?.setMap(null);\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n     */\n    getBounds() {\n      this._assertInitialized();\n      return this.circle.getBounds();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n     */\n    getCenter() {\n      this._assertInitialized();\n      return this.circle.getCenter();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n     */\n    getDraggable() {\n      this._assertInitialized();\n      return this.circle.getDraggable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n     */\n    getEditable() {\n      this._assertInitialized();\n      return this.circle.getEditable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n     */\n    getRadius() {\n      this._assertInitialized();\n      return this.circle.getRadius();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n     */\n    getVisible() {\n      this._assertInitialized();\n      return this.circle.getVisible();\n    }\n    _combineOptions() {\n      return combineLatest([this._options, this._center, this._radius]).pipe(map(([options, center, radius]) => {\n        const combinedOptions = {\n          ...options,\n          center: center || options.center,\n          radius: radius !== undefined ? radius : options.radius\n        };\n        return combinedOptions;\n      }));\n    }\n    _watchForOptionsChanges() {\n      this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n        this._assertInitialized();\n        this.circle.setOptions(options);\n      });\n    }\n    _watchForCenterChanges() {\n      this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n        if (center) {\n          this._assertInitialized();\n          this.circle.setCenter(center);\n        }\n      });\n    }\n    _watchForRadiusChanges() {\n      this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n        if (radius !== undefined) {\n          this._assertInitialized();\n          this.circle.setRadius(radius);\n        }\n      });\n    }\n    _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this.circle) {\n          throw Error('Cannot interact with a Google Map Circle before it has been ' + 'initialized. Please wait for the Circle to load before trying to interact with it.');\n        }\n      }\n    }\n    static ɵfac = function MapCircle_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapCircle)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapCircle,\n      selectors: [[\"map-circle\"]],\n      inputs: {\n        options: \"options\",\n        center: \"center\",\n        radius: \"radius\"\n      },\n      outputs: {\n        centerChanged: \"centerChanged\",\n        circleClick: \"circleClick\",\n        circleDblclick: \"circleDblclick\",\n        circleDrag: \"circleDrag\",\n        circleDragend: \"circleDragend\",\n        circleDragstart: \"circleDragstart\",\n        circleMousedown: \"circleMousedown\",\n        circleMousemove: \"circleMousemove\",\n        circleMouseout: \"circleMouseout\",\n        circleMouseover: \"circleMouseover\",\n        circleMouseup: \"circleMouseup\",\n        radiusChanged: \"radiusChanged\",\n        circleRightclick: \"circleRightclick\",\n        circleInitialized: \"circleInitialized\"\n      },\n      exportAs: [\"mapCircle\"]\n    });\n  }\n  return MapCircle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\nlet MapDirectionsRenderer = /*#__PURE__*/(() => {\n  class MapDirectionsRenderer {\n    _googleMap = inject(GoogleMap);\n    _ngZone = inject(NgZone);\n    _eventManager = new MapEventManager(inject(NgZone));\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions.directions\n     */\n    set directions(directions) {\n      this._directions = directions;\n    }\n    _directions;\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions\n     */\n    set options(options) {\n      this._options = options;\n    }\n    _options;\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.directions_changed\n     */\n    directionsChanged = this._eventManager.getLazyEmitter('directions_changed');\n    /** Event emitted when the directions renderer is initialized. */\n    directionsRendererInitialized = new EventEmitter();\n    /** The underlying google.maps.DirectionsRenderer object. */\n    directionsRenderer;\n    constructor() {}\n    ngOnInit() {\n      if (this._googleMap._isBrowser) {\n        if (google.maps.DirectionsRenderer && this._googleMap.googleMap) {\n          this._initialize(this._googleMap.googleMap, google.maps.DirectionsRenderer);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._googleMap._resolveMap(), google.maps.importLibrary('routes')]).then(([map, lib]) => {\n              this._initialize(map, lib.DirectionsRenderer);\n            });\n          });\n        }\n      }\n    }\n    _initialize(map, rendererConstructor) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.directionsRenderer = new rendererConstructor(this._combineOptions());\n        this._assertInitialized();\n        this.directionsRenderer.setMap(map);\n        this._eventManager.setTarget(this.directionsRenderer);\n        this.directionsRendererInitialized.emit(this.directionsRenderer);\n      });\n    }\n    ngOnChanges(changes) {\n      if (this.directionsRenderer) {\n        if (changes['options']) {\n          this.directionsRenderer.setOptions(this._combineOptions());\n        }\n        if (changes['directions'] && this._directions !== undefined) {\n          this.directionsRenderer.setDirections(this._directions);\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._eventManager.destroy();\n      this.directionsRenderer?.setMap(null);\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getDirections\n     */\n    getDirections() {\n      this._assertInitialized();\n      return this.directionsRenderer.getDirections();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getPanel\n     */\n    getPanel() {\n      this._assertInitialized();\n      return this.directionsRenderer.getPanel();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getRouteIndex\n     */\n    getRouteIndex() {\n      this._assertInitialized();\n      return this.directionsRenderer.getRouteIndex();\n    }\n    _combineOptions() {\n      const options = this._options || {};\n      return {\n        ...options,\n        directions: this._directions || options.directions,\n        map: this._googleMap.googleMap\n      };\n    }\n    _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this.directionsRenderer) {\n          throw Error('Cannot interact with a Google Map Directions Renderer before it has been ' + 'initialized. Please wait for the Directions Renderer to load before trying ' + 'to interact with it.');\n        }\n      }\n    }\n    static ɵfac = function MapDirectionsRenderer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapDirectionsRenderer)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapDirectionsRenderer,\n      selectors: [[\"map-directions-renderer\"]],\n      inputs: {\n        directions: \"directions\",\n        options: \"options\"\n      },\n      outputs: {\n        directionsChanged: \"directionsChanged\",\n        directionsRendererInitialized: \"directionsRendererInitialized\"\n      },\n      exportAs: [\"mapDirectionsRenderer\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return MapDirectionsRenderer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\nlet MapGroundOverlay = /*#__PURE__*/(() => {\n  class MapGroundOverlay {\n    _map = inject(GoogleMap);\n    _ngZone = inject(NgZone);\n    _eventManager = new MapEventManager(inject(NgZone));\n    _opacity = new BehaviorSubject(1);\n    _url = new BehaviorSubject('');\n    _bounds = new BehaviorSubject(undefined);\n    _destroyed = new Subject();\n    _hasWatchers;\n    /**\n     * The underlying google.maps.GroundOverlay object.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n     */\n    groundOverlay;\n    /** URL of the image that will be shown in the overlay. */\n    set url(url) {\n      this._url.next(url);\n    }\n    /** Bounds for the overlay. */\n    get bounds() {\n      return this._bounds.value;\n    }\n    set bounds(bounds) {\n      this._bounds.next(bounds);\n    }\n    /** Whether the overlay is clickable */\n    clickable = false;\n    /** Opacity of the overlay. */\n    set opacity(opacity) {\n      this._opacity.next(opacity);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n     */\n    mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.dblclick\n     */\n    mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /** Event emitted when the ground overlay is initialized. */\n    groundOverlayInitialized = new EventEmitter();\n    constructor() {}\n    ngOnInit() {\n      if (this._map._isBrowser) {\n        // The ground overlay setup is slightly different from the other Google Maps objects in that\n        // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n        // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n        this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n          if (this.groundOverlay) {\n            this.groundOverlay.setMap(null);\n            this.groundOverlay = undefined;\n          }\n          if (!bounds) {\n            return;\n          }\n          if (google.maps.GroundOverlay && this._map.googleMap) {\n            this._initialize(this._map.googleMap, google.maps.GroundOverlay, bounds);\n          } else {\n            this._ngZone.runOutsideAngular(() => {\n              Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                this._initialize(map, lib.GroundOverlay, bounds);\n              });\n            });\n          }\n        });\n      }\n    }\n    _initialize(map, overlayConstructor, bounds) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.groundOverlay = new overlayConstructor(this._url.getValue(), bounds, {\n          clickable: this.clickable,\n          opacity: this._opacity.value\n        });\n        this._assertInitialized();\n        this.groundOverlay.setMap(map);\n        this._eventManager.setTarget(this.groundOverlay);\n        this.groundOverlayInitialized.emit(this.groundOverlay);\n        // We only need to set up the watchers once.\n        if (!this._hasWatchers) {\n          this._hasWatchers = true;\n          this._watchForOpacityChanges();\n          this._watchForUrlChanges();\n        }\n      });\n    }\n    ngOnDestroy() {\n      this._eventManager.destroy();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this.groundOverlay?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getBounds\n     */\n    getBounds() {\n      this._assertInitialized();\n      return this.groundOverlay.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getOpacity\n     */\n    getOpacity() {\n      this._assertInitialized();\n      return this.groundOverlay.getOpacity();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getUrl\n     */\n    getUrl() {\n      this._assertInitialized();\n      return this.groundOverlay.getUrl();\n    }\n    _watchForOpacityChanges() {\n      this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n        if (opacity != null) {\n          this.groundOverlay?.setOpacity(opacity);\n        }\n      });\n    }\n    _watchForUrlChanges() {\n      this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n        const overlay = this.groundOverlay;\n        if (overlay) {\n          overlay.set('url', url);\n          // Google Maps only redraws the overlay if we re-set the map.\n          overlay.setMap(null);\n          overlay.setMap(this._map.googleMap);\n        }\n      });\n    }\n    _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this.groundOverlay) {\n          throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' + 'Please wait for the GroundOverlay to load before trying to interact with it.');\n        }\n      }\n    }\n    static ɵfac = function MapGroundOverlay_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapGroundOverlay)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapGroundOverlay,\n      selectors: [[\"map-ground-overlay\"]],\n      inputs: {\n        url: \"url\",\n        bounds: \"bounds\",\n        clickable: \"clickable\",\n        opacity: \"opacity\"\n      },\n      outputs: {\n        mapClick: \"mapClick\",\n        mapDblclick: \"mapDblclick\",\n        groundOverlayInitialized: \"groundOverlayInitialized\"\n      },\n      exportAs: [\"mapGroundOverlay\"]\n    });\n  }\n  return MapGroundOverlay;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\nlet MapInfoWindow = /*#__PURE__*/(() => {\n  class MapInfoWindow {\n    _googleMap = inject(GoogleMap);\n    _elementRef = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    _eventManager = new MapEventManager(inject(NgZone));\n    _options = new BehaviorSubject({});\n    _position = new BehaviorSubject(undefined);\n    _destroy = new Subject();\n    /**\n     * Underlying google.maps.InfoWindow\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow\n     */\n    infoWindow;\n    set options(options) {\n      this._options.next(options || {});\n    }\n    set position(position) {\n      this._position.next(position);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n     */\n    closeclick = this._eventManager.getLazyEmitter('closeclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.content_changed\n     */\n    contentChanged = this._eventManager.getLazyEmitter('content_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n     */\n    domready = this._eventManager.getLazyEmitter('domready');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.position_changed\n     */\n    positionChanged = this._eventManager.getLazyEmitter('position_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.zindex_changed\n     */\n    zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n    /** Event emitted when the info window is initialized. */\n    infoWindowInitialized = new EventEmitter();\n    constructor() {}\n    ngOnInit() {\n      if (this._googleMap._isBrowser) {\n        this._combineOptions().pipe(take(1)).subscribe(options => {\n          if (google.maps.InfoWindow) {\n            this._initialize(google.maps.InfoWindow, options);\n          } else {\n            this._ngZone.runOutsideAngular(() => {\n              google.maps.importLibrary('maps').then(lib => {\n                this._initialize(lib.InfoWindow, options);\n              });\n            });\n          }\n        });\n      }\n    }\n    _initialize(infoWindowConstructor, options) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.infoWindow = new infoWindowConstructor(options);\n        this._eventManager.setTarget(this.infoWindow);\n        this.infoWindowInitialized.emit(this.infoWindow);\n        this._watchForOptionsChanges();\n        this._watchForPositionChanges();\n      });\n    }\n    ngOnDestroy() {\n      this._eventManager.destroy();\n      this._destroy.next();\n      this._destroy.complete();\n      // If no info window has been created on the server, we do not try closing it.\n      // On the server, an info window cannot be created and this would cause errors.\n      if (this.infoWindow) {\n        this.close();\n      }\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n     */\n    close() {\n      this._assertInitialized();\n      this.infoWindow.close();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n     */\n    getContent() {\n      this._assertInitialized();\n      return this.infoWindow.getContent() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.getPosition\n     */\n    getPosition() {\n      this._assertInitialized();\n      return this.infoWindow.getPosition() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n     */\n    getZIndex() {\n      this._assertInitialized();\n      return this.infoWindow.getZIndex();\n    }\n    /**\n     * Opens the MapInfoWindow using the provided AdvancedMarkerElement.\n     * @deprecated Use the `open` method instead.\n     * @breaking-change 20.0.0\n     */\n    openAdvancedMarkerElement(advancedMarkerElement, content) {\n      this.open({\n        getAnchor: () => advancedMarkerElement\n      }, undefined, content);\n    }\n    /**\n     * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n     * then the position property of the options input is used instead.\n     */\n    open(anchor, shouldFocus, content) {\n      this._assertInitialized();\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && anchor && !anchor.getAnchor) {\n        throw new Error('Specified anchor does not implement the `getAnchor` method. ' + 'It cannot be used to open an info window.');\n      }\n      const anchorObject = anchor ? anchor.getAnchor() : undefined;\n      // Prevent the info window from initializing when trying to reopen on the same anchor.\n      // Note that when the window is opened for the first time, the anchor will always be\n      // undefined. If that's the case, we have to allow it to open in order to handle the\n      // case where the window doesn't have an anchor, but is placed at a particular position.\n      if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n        // If no explicit content is provided, it is taken from the DOM node.\n        // If it is, we need to hide it so it doesn't take up space on the page.\n        this._elementRef.nativeElement.style.display = content ? 'none' : '';\n        if (content) {\n          this.infoWindow.setContent(content);\n        }\n        this.infoWindow.open({\n          map: this._googleMap.googleMap,\n          anchor: anchorObject,\n          shouldFocus\n        });\n      }\n    }\n    _combineOptions() {\n      return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n        const combinedOptions = {\n          ...options,\n          position: position || options.position,\n          content: this._elementRef.nativeElement\n        };\n        return combinedOptions;\n      }));\n    }\n    _watchForOptionsChanges() {\n      this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n        this._assertInitialized();\n        this.infoWindow.setOptions(options);\n      });\n    }\n    _watchForPositionChanges() {\n      this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n        if (position) {\n          this._assertInitialized();\n          this.infoWindow.setPosition(position);\n        }\n      });\n    }\n    _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this.infoWindow) {\n          throw Error('Cannot interact with a Google Map Info Window before it has been ' + 'initialized. Please wait for the Info Window to load before trying to interact with ' + 'it.');\n        }\n      }\n    }\n    static ɵfac = function MapInfoWindow_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapInfoWindow)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapInfoWindow,\n      selectors: [[\"map-info-window\"]],\n      hostAttrs: [2, \"display\", \"none\"],\n      inputs: {\n        options: \"options\",\n        position: \"position\"\n      },\n      outputs: {\n        closeclick: \"closeclick\",\n        contentChanged: \"contentChanged\",\n        domready: \"domready\",\n        positionChanged: \"positionChanged\",\n        zindexChanged: \"zindexChanged\",\n        infoWindowInitialized: \"infoWindowInitialized\"\n      },\n      exportAs: [\"mapInfoWindow\"]\n    });\n  }\n  return MapInfoWindow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\nlet MapKmlLayer = /*#__PURE__*/(() => {\n  class MapKmlLayer {\n    _map = inject(GoogleMap);\n    _ngZone = inject(NgZone);\n    _eventManager = new MapEventManager(inject(NgZone));\n    _options = new BehaviorSubject({});\n    _url = new BehaviorSubject('');\n    _destroyed = new Subject();\n    /**\n     * The underlying google.maps.KmlLayer object.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n     */\n    kmlLayer;\n    set options(options) {\n      this._options.next(options || {});\n    }\n    set url(url) {\n      this._url.next(url);\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n     */\n    kmlClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml\n     * #KmlLayer.defaultviewport_changed\n     */\n    defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n     */\n    statusChanged = this._eventManager.getLazyEmitter('status_changed');\n    /** Event emitted when the KML layer is initialized. */\n    kmlLayerInitialized = new EventEmitter();\n    constructor() {}\n    ngOnInit() {\n      if (this._map._isBrowser) {\n        this._combineOptions().pipe(take(1)).subscribe(options => {\n          if (google.maps.KmlLayer && this._map.googleMap) {\n            this._initialize(this._map.googleMap, google.maps.KmlLayer, options);\n          } else {\n            this._ngZone.runOutsideAngular(() => {\n              Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                this._initialize(map, lib.KmlLayer, options);\n              });\n            });\n          }\n        });\n      }\n    }\n    _initialize(map, layerConstructor, options) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.kmlLayer = new layerConstructor(options);\n        this._assertInitialized();\n        this.kmlLayer.setMap(map);\n        this._eventManager.setTarget(this.kmlLayer);\n        this.kmlLayerInitialized.emit(this.kmlLayer);\n        this._watchForOptionsChanges();\n        this._watchForUrlChanges();\n      });\n    }\n    ngOnDestroy() {\n      this._eventManager.destroy();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this.kmlLayer?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n     */\n    getDefaultViewport() {\n      this._assertInitialized();\n      return this.kmlLayer.getDefaultViewport();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n     */\n    getMetadata() {\n      this._assertInitialized();\n      return this.kmlLayer.getMetadata();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n     */\n    getStatus() {\n      this._assertInitialized();\n      return this.kmlLayer.getStatus();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n     */\n    getUrl() {\n      this._assertInitialized();\n      return this.kmlLayer.getUrl();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n     */\n    getZIndex() {\n      this._assertInitialized();\n      return this.kmlLayer.getZIndex();\n    }\n    _combineOptions() {\n      return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n        const combinedOptions = {\n          ...options,\n          url: url || options.url\n        };\n        return combinedOptions;\n      }));\n    }\n    _watchForOptionsChanges() {\n      this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n        if (this.kmlLayer) {\n          this._assertInitialized();\n          this.kmlLayer.setOptions(options);\n        }\n      });\n    }\n    _watchForUrlChanges() {\n      this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n        if (url && this.kmlLayer) {\n          this._assertInitialized();\n          this.kmlLayer.setUrl(url);\n        }\n      });\n    }\n    _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this.kmlLayer) {\n          throw Error('Cannot interact with a Google Map KmlLayer before it has been ' + 'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n        }\n      }\n    }\n    static ɵfac = function MapKmlLayer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapKmlLayer)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapKmlLayer,\n      selectors: [[\"map-kml-layer\"]],\n      inputs: {\n        options: \"options\",\n        url: \"url\"\n      },\n      outputs: {\n        kmlClick: \"kmlClick\",\n        defaultviewportChanged: \"defaultviewportChanged\",\n        statusChanged: \"statusChanged\",\n        kmlLayerInitialized: \"kmlLayerInitialized\"\n      },\n      exportAs: [\"mapKmlLayer\"]\n    });\n  }\n  return MapKmlLayer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Token that marker directives can use to expose themselves to the clusterer. */\nconst MAP_MARKER = /*#__PURE__*/new InjectionToken('MAP_MARKER');\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nconst DEFAULT_MARKER_OPTIONS$1 = {\n  position: {\n    lat: 37.421995,\n    lng: -122.084092\n  }\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\nlet MapMarker = /*#__PURE__*/(() => {\n  class MapMarker {\n    _googleMap = inject(GoogleMap);\n    _ngZone = inject(NgZone);\n    _eventManager = new MapEventManager(inject(NgZone));\n    /**\n     * Title of the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n     */\n    set title(title) {\n      this._title = title;\n    }\n    _title;\n    /**\n     * Position of the marker. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n     */\n    set position(position) {\n      this._position = position;\n    }\n    _position;\n    /**\n     * Label for the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n     */\n    set label(label) {\n      this._label = label;\n    }\n    _label;\n    /**\n     * Whether the marker is clickable. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n     */\n    set clickable(clickable) {\n      this._clickable = clickable;\n    }\n    _clickable;\n    /**\n     * Options used to configure the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n     */\n    set options(options) {\n      this._options = options;\n    }\n    _options;\n    /**\n     * Icon to be used for the marker.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n     */\n    set icon(icon) {\n      this._icon = icon;\n    }\n    _icon;\n    /**\n     * Whether the marker is visible.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.visible\n     */\n    set visible(value) {\n      this._visible = value;\n    }\n    _visible;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n     */\n    animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n     */\n    mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n     */\n    clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n     */\n    cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n     */\n    mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n     */\n    mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n     */\n    mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n     */\n    draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n     */\n    mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n     */\n    flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n     */\n    iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n     */\n    mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n     */\n    mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n     */\n    mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n     */\n    mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n     */\n    positionChanged = this._eventManager.getLazyEmitter('position_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n     */\n    mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n     */\n    shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n     */\n    titleChanged = this._eventManager.getLazyEmitter('title_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n     */\n    visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n     */\n    zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n    /** Event emitted when the marker is initialized. */\n    markerInitialized = new EventEmitter();\n    /**\n     * The underlying google.maps.Marker object.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/marker#Marker\n     */\n    marker;\n    constructor() {}\n    ngOnInit() {\n      if (!this._googleMap._isBrowser) {\n        return;\n      }\n      if (google.maps.Marker && this._googleMap.googleMap) {\n        this._initialize(this._googleMap.googleMap, google.maps.Marker);\n      } else {\n        this._ngZone.runOutsideAngular(() => {\n          Promise.all([this._googleMap._resolveMap(), google.maps.importLibrary('marker')]).then(([map, lib]) => {\n            this._initialize(map, lib.Marker);\n          });\n        });\n      }\n    }\n    _initialize(map, markerConstructor) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.marker = new markerConstructor(this._combineOptions());\n        this._assertInitialized();\n        this.marker.setMap(map);\n        this._eventManager.setTarget(this.marker);\n        this.markerInitialized.next(this.marker);\n      });\n    }\n    ngOnChanges(changes) {\n      const {\n        marker,\n        _title,\n        _position,\n        _label,\n        _clickable,\n        _icon,\n        _visible\n      } = this;\n      if (marker) {\n        if (changes['options']) {\n          marker.setOptions(this._combineOptions());\n        }\n        if (changes['title'] && _title !== undefined) {\n          marker.setTitle(_title);\n        }\n        if (changes['position'] && _position) {\n          marker.setPosition(_position);\n        }\n        if (changes['label'] && _label !== undefined) {\n          marker.setLabel(_label);\n        }\n        if (changes['clickable'] && _clickable !== undefined) {\n          marker.setClickable(_clickable);\n        }\n        if (changes['icon'] && _icon) {\n          marker.setIcon(_icon);\n        }\n        if (changes['visible'] && _visible !== undefined) {\n          marker.setVisible(_visible);\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.markerInitialized.complete();\n      this._eventManager.destroy();\n      this.marker?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n     */\n    getAnimation() {\n      this._assertInitialized();\n      return this.marker.getAnimation() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n     */\n    getClickable() {\n      this._assertInitialized();\n      return this.marker.getClickable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n     */\n    getCursor() {\n      this._assertInitialized();\n      return this.marker.getCursor() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n     */\n    getDraggable() {\n      this._assertInitialized();\n      return !!this.marker.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n     */\n    getIcon() {\n      this._assertInitialized();\n      return this.marker.getIcon() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n     */\n    getLabel() {\n      this._assertInitialized();\n      return this.marker.getLabel() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n     */\n    getOpacity() {\n      this._assertInitialized();\n      return this.marker.getOpacity() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n     */\n    getPosition() {\n      this._assertInitialized();\n      return this.marker.getPosition() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n     */\n    getShape() {\n      this._assertInitialized();\n      return this.marker.getShape() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n     */\n    getTitle() {\n      this._assertInitialized();\n      return this.marker.getTitle() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n     */\n    getVisible() {\n      this._assertInitialized();\n      return this.marker.getVisible();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n     */\n    getZIndex() {\n      this._assertInitialized();\n      return this.marker.getZIndex() || null;\n    }\n    /** Gets the anchor point that can be used to attach other Google Maps objects. */\n    getAnchor() {\n      this._assertInitialized();\n      return this.marker;\n    }\n    /** Returns a promise that resolves when the marker has been initialized. */\n    _resolveMarker() {\n      return this.marker ? Promise.resolve(this.marker) : this.markerInitialized.pipe(take(1)).toPromise();\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n      const options = this._options || DEFAULT_MARKER_OPTIONS$1;\n      return {\n        ...options,\n        title: this._title || options.title,\n        position: this._position || options.position,\n        label: this._label || options.label,\n        clickable: this._clickable ?? options.clickable,\n        map: this._googleMap.googleMap,\n        icon: this._icon || options.icon,\n        visible: this._visible ?? options.visible\n      };\n    }\n    _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this.marker) {\n          throw Error('Cannot interact with a Google Map Marker before it has been ' + 'initialized. Please wait for the Marker to load before trying to interact with it.');\n        }\n      }\n    }\n    static ɵfac = function MapMarker_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapMarker)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapMarker,\n      selectors: [[\"map-marker\"]],\n      inputs: {\n        title: \"title\",\n        position: \"position\",\n        label: \"label\",\n        clickable: \"clickable\",\n        options: \"options\",\n        icon: \"icon\",\n        visible: \"visible\"\n      },\n      outputs: {\n        animationChanged: \"animationChanged\",\n        mapClick: \"mapClick\",\n        clickableChanged: \"clickableChanged\",\n        cursorChanged: \"cursorChanged\",\n        mapDblclick: \"mapDblclick\",\n        mapDrag: \"mapDrag\",\n        mapDragend: \"mapDragend\",\n        draggableChanged: \"draggableChanged\",\n        mapDragstart: \"mapDragstart\",\n        flatChanged: \"flatChanged\",\n        iconChanged: \"iconChanged\",\n        mapMousedown: \"mapMousedown\",\n        mapMouseout: \"mapMouseout\",\n        mapMouseover: \"mapMouseover\",\n        mapMouseup: \"mapMouseup\",\n        positionChanged: \"positionChanged\",\n        mapRightclick: \"mapRightclick\",\n        shapeChanged: \"shapeChanged\",\n        titleChanged: \"titleChanged\",\n        visibleChanged: \"visibleChanged\",\n        zindexChanged: \"zindexChanged\",\n        markerInitialized: \"markerInitialized\"\n      },\n      exportAs: [\"mapMarker\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAP_MARKER,\n        useExisting: MapMarker\n      }]), i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return MapMarker;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/** Default options for a clusterer. */\nconst DEFAULT_CLUSTERER_OPTIONS = {};\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n *\n * @deprecated This component is using a deprecated clustering implementation. Use the\n *   `map-marker-clusterer` component instead.\n * @breaking-change 21.0.0\n *\n */\nlet DeprecatedMapMarkerClusterer = /*#__PURE__*/(() => {\n  class DeprecatedMapMarkerClusterer {\n    _googleMap = inject(GoogleMap);\n    _ngZone = inject(NgZone);\n    _currentMarkers = new Set();\n    _eventManager = new MapEventManager(inject(NgZone));\n    _destroy = new Subject();\n    /** Whether the clusterer is allowed to be initialized. */\n    _canInitialize = this._googleMap._isBrowser;\n    ariaLabelFn = () => '';\n    set averageCenter(averageCenter) {\n      this._averageCenter = averageCenter;\n    }\n    _averageCenter;\n    batchSize;\n    set batchSizeIE(batchSizeIE) {\n      this._batchSizeIE = batchSizeIE;\n    }\n    _batchSizeIE;\n    set calculator(calculator) {\n      this._calculator = calculator;\n    }\n    _calculator;\n    set clusterClass(clusterClass) {\n      this._clusterClass = clusterClass;\n    }\n    _clusterClass;\n    set enableRetinaIcons(enableRetinaIcons) {\n      this._enableRetinaIcons = enableRetinaIcons;\n    }\n    _enableRetinaIcons;\n    set gridSize(gridSize) {\n      this._gridSize = gridSize;\n    }\n    _gridSize;\n    set ignoreHidden(ignoreHidden) {\n      this._ignoreHidden = ignoreHidden;\n    }\n    _ignoreHidden;\n    set imageExtension(imageExtension) {\n      this._imageExtension = imageExtension;\n    }\n    _imageExtension;\n    set imagePath(imagePath) {\n      this._imagePath = imagePath;\n    }\n    _imagePath;\n    set imageSizes(imageSizes) {\n      this._imageSizes = imageSizes;\n    }\n    _imageSizes;\n    set maxZoom(maxZoom) {\n      this._maxZoom = maxZoom;\n    }\n    _maxZoom;\n    set minimumClusterSize(minimumClusterSize) {\n      this._minimumClusterSize = minimumClusterSize;\n    }\n    _minimumClusterSize;\n    set styles(styles) {\n      this._styles = styles;\n    }\n    _styles;\n    set title(title) {\n      this._title = title;\n    }\n    _title;\n    set zIndex(zIndex) {\n      this._zIndex = zIndex;\n    }\n    _zIndex;\n    set zoomOnClick(zoomOnClick) {\n      this._zoomOnClick = zoomOnClick;\n    }\n    _zoomOnClick;\n    set options(options) {\n      this._options = options;\n    }\n    _options;\n    /**\n     * See\n     * googlemaps.github.io/v3-utility-library/modules/\n     * _google_markerclustererplus.html#clusteringbegin\n     */\n    clusteringbegin = this._eventManager.getLazyEmitter('clusteringbegin');\n    /**\n     * See\n     * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n     */\n    clusteringend = this._eventManager.getLazyEmitter('clusteringend');\n    /** Emits when a cluster has been clicked. */\n    clusterClick = this._eventManager.getLazyEmitter('click');\n    _markers;\n    /**\n     * The underlying MarkerClusterer object.\n     *\n     * See\n     * googlemaps.github.io/v3-utility-library/classes/\n     * _google_markerclustererplus.markerclusterer.html\n     */\n    markerClusterer;\n    /** Event emitted when the clusterer is initialized. */\n    markerClustererInitialized = new EventEmitter();\n    constructor() {}\n    ngOnInit() {\n      if (this._canInitialize) {\n        this._ngZone.runOutsideAngular(() => {\n          this._googleMap._resolveMap().then(map => {\n            if (typeof MarkerClusterer !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n              throw Error('MarkerClusterer class not found, cannot construct a marker cluster. ' + 'Please install the MarkerClustererPlus library: ' + 'https://github.com/googlemaps/js-markerclustererplus');\n            }\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            this.markerClusterer = this._ngZone.runOutsideAngular(() => {\n              return new MarkerClusterer(map, [], this._combineOptions());\n            });\n            this._assertInitialized();\n            this._eventManager.setTarget(this.markerClusterer);\n            this.markerClustererInitialized.emit(this.markerClusterer);\n          });\n        });\n      }\n    }\n    ngAfterContentInit() {\n      if (this._canInitialize) {\n        if (this.markerClusterer) {\n          this._watchForMarkerChanges();\n        } else {\n          this.markerClustererInitialized.pipe(take(1), takeUntil(this._destroy)).subscribe(() => this._watchForMarkerChanges());\n        }\n      }\n    }\n    ngOnChanges(changes) {\n      const {\n        markerClusterer: clusterer,\n        ariaLabelFn,\n        _averageCenter,\n        _batchSizeIE,\n        _calculator,\n        _styles,\n        _clusterClass,\n        _enableRetinaIcons,\n        _gridSize,\n        _ignoreHidden,\n        _imageExtension,\n        _imagePath,\n        _imageSizes,\n        _maxZoom,\n        _minimumClusterSize,\n        _title,\n        _zIndex,\n        _zoomOnClick\n      } = this;\n      if (clusterer) {\n        if (changes['options']) {\n          clusterer.setOptions(this._combineOptions());\n        }\n        if (changes['ariaLabelFn']) {\n          clusterer.ariaLabelFn = ariaLabelFn;\n        }\n        if (changes['averageCenter'] && _averageCenter !== undefined) {\n          clusterer.setAverageCenter(_averageCenter);\n        }\n        if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n          clusterer.setBatchSizeIE(_batchSizeIE);\n        }\n        if (changes['calculator'] && !!_calculator) {\n          clusterer.setCalculator(_calculator);\n        }\n        if (changes['clusterClass'] && _clusterClass !== undefined) {\n          clusterer.setClusterClass(_clusterClass);\n        }\n        if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n          clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n        }\n        if (changes['gridSize'] && _gridSize !== undefined) {\n          clusterer.setGridSize(_gridSize);\n        }\n        if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n          clusterer.setIgnoreHidden(_ignoreHidden);\n        }\n        if (changes['imageExtension'] && _imageExtension !== undefined) {\n          clusterer.setImageExtension(_imageExtension);\n        }\n        if (changes['imagePath'] && _imagePath !== undefined) {\n          clusterer.setImagePath(_imagePath);\n        }\n        if (changes['imageSizes'] && _imageSizes) {\n          clusterer.setImageSizes(_imageSizes);\n        }\n        if (changes['maxZoom'] && _maxZoom !== undefined) {\n          clusterer.setMaxZoom(_maxZoom);\n        }\n        if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n          clusterer.setMinimumClusterSize(_minimumClusterSize);\n        }\n        if (changes['styles'] && _styles) {\n          clusterer.setStyles(_styles);\n        }\n        if (changes['title'] && _title !== undefined) {\n          clusterer.setTitle(_title);\n        }\n        if (changes['zIndex'] && _zIndex !== undefined) {\n          clusterer.setZIndex(_zIndex);\n        }\n        if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n          clusterer.setZoomOnClick(_zoomOnClick);\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._destroy.next();\n      this._destroy.complete();\n      this._eventManager.destroy();\n      this.markerClusterer?.setMap(null);\n    }\n    fitMapToMarkers(padding) {\n      this._assertInitialized();\n      this.markerClusterer.fitMapToMarkers(padding);\n    }\n    getAverageCenter() {\n      this._assertInitialized();\n      return this.markerClusterer.getAverageCenter();\n    }\n    getBatchSizeIE() {\n      this._assertInitialized();\n      return this.markerClusterer.getBatchSizeIE();\n    }\n    getCalculator() {\n      this._assertInitialized();\n      return this.markerClusterer.getCalculator();\n    }\n    getClusterClass() {\n      this._assertInitialized();\n      return this.markerClusterer.getClusterClass();\n    }\n    getClusters() {\n      this._assertInitialized();\n      return this.markerClusterer.getClusters();\n    }\n    getEnableRetinaIcons() {\n      this._assertInitialized();\n      return this.markerClusterer.getEnableRetinaIcons();\n    }\n    getGridSize() {\n      this._assertInitialized();\n      return this.markerClusterer.getGridSize();\n    }\n    getIgnoreHidden() {\n      this._assertInitialized();\n      return this.markerClusterer.getIgnoreHidden();\n    }\n    getImageExtension() {\n      this._assertInitialized();\n      return this.markerClusterer.getImageExtension();\n    }\n    getImagePath() {\n      this._assertInitialized();\n      return this.markerClusterer.getImagePath();\n    }\n    getImageSizes() {\n      this._assertInitialized();\n      return this.markerClusterer.getImageSizes();\n    }\n    getMaxZoom() {\n      this._assertInitialized();\n      return this.markerClusterer.getMaxZoom();\n    }\n    getMinimumClusterSize() {\n      this._assertInitialized();\n      return this.markerClusterer.getMinimumClusterSize();\n    }\n    getStyles() {\n      this._assertInitialized();\n      return this.markerClusterer.getStyles();\n    }\n    getTitle() {\n      this._assertInitialized();\n      return this.markerClusterer.getTitle();\n    }\n    getTotalClusters() {\n      this._assertInitialized();\n      return this.markerClusterer.getTotalClusters();\n    }\n    getTotalMarkers() {\n      this._assertInitialized();\n      return this.markerClusterer.getTotalMarkers();\n    }\n    getZIndex() {\n      this._assertInitialized();\n      return this.markerClusterer.getZIndex();\n    }\n    getZoomOnClick() {\n      this._assertInitialized();\n      return this.markerClusterer.getZoomOnClick();\n    }\n    _combineOptions() {\n      const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n      return {\n        ...options,\n        ariaLabelFn: this.ariaLabelFn ?? options.ariaLabelFn,\n        averageCenter: this._averageCenter ?? options.averageCenter,\n        batchSize: this.batchSize ?? options.batchSize,\n        batchSizeIE: this._batchSizeIE ?? options.batchSizeIE,\n        calculator: this._calculator ?? options.calculator,\n        clusterClass: this._clusterClass ?? options.clusterClass,\n        enableRetinaIcons: this._enableRetinaIcons ?? options.enableRetinaIcons,\n        gridSize: this._gridSize ?? options.gridSize,\n        ignoreHidden: this._ignoreHidden ?? options.ignoreHidden,\n        imageExtension: this._imageExtension ?? options.imageExtension,\n        imagePath: this._imagePath ?? options.imagePath,\n        imageSizes: this._imageSizes ?? options.imageSizes,\n        maxZoom: this._maxZoom ?? options.maxZoom,\n        minimumClusterSize: this._minimumClusterSize ?? options.minimumClusterSize,\n        styles: this._styles ?? options.styles,\n        title: this._title ?? options.title,\n        zIndex: this._zIndex ?? options.zIndex,\n        zoomOnClick: this._zoomOnClick ?? options.zoomOnClick\n      };\n    }\n    _watchForMarkerChanges() {\n      this._assertInitialized();\n      this._ngZone.runOutsideAngular(() => {\n        this._getInternalMarkers(this._markers).then(markers => {\n          const initialMarkers = [];\n          for (const marker of markers) {\n            this._currentMarkers.add(marker);\n            initialMarkers.push(marker);\n          }\n          this.markerClusterer.addMarkers(initialMarkers);\n        });\n      });\n      this._markers.changes.pipe(takeUntil(this._destroy)).subscribe(markerComponents => {\n        this._assertInitialized();\n        this._ngZone.runOutsideAngular(() => {\n          this._getInternalMarkers(markerComponents).then(markers => {\n            const newMarkers = new Set(markers);\n            const markersToAdd = [];\n            const markersToRemove = [];\n            for (const marker of Array.from(newMarkers)) {\n              if (!this._currentMarkers.has(marker)) {\n                this._currentMarkers.add(marker);\n                markersToAdd.push(marker);\n              }\n            }\n            for (const marker of Array.from(this._currentMarkers)) {\n              if (!newMarkers.has(marker)) {\n                markersToRemove.push(marker);\n              }\n            }\n            this.markerClusterer.addMarkers(markersToAdd, true);\n            this.markerClusterer.removeMarkers(markersToRemove, true);\n            this.markerClusterer.repaint();\n            for (const marker of markersToRemove) {\n              this._currentMarkers.delete(marker);\n            }\n          });\n        });\n      });\n    }\n    _getInternalMarkers(markers) {\n      return Promise.all(markers.map(markerComponent => markerComponent._resolveMarker()));\n    }\n    _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this.markerClusterer) {\n          throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' + 'Please wait for the MarkerClusterer to load before trying to interact with it.');\n        }\n      }\n    }\n    static ɵfac = function DeprecatedMapMarkerClusterer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || DeprecatedMapMarkerClusterer)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: DeprecatedMapMarkerClusterer,\n      selectors: [[\"deprecated-map-marker-clusterer\"]],\n      contentQueries: function DeprecatedMapMarkerClusterer_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MapMarker, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._markers = _t);\n        }\n      },\n      inputs: {\n        ariaLabelFn: \"ariaLabelFn\",\n        averageCenter: \"averageCenter\",\n        batchSize: \"batchSize\",\n        batchSizeIE: \"batchSizeIE\",\n        calculator: \"calculator\",\n        clusterClass: \"clusterClass\",\n        enableRetinaIcons: \"enableRetinaIcons\",\n        gridSize: \"gridSize\",\n        ignoreHidden: \"ignoreHidden\",\n        imageExtension: \"imageExtension\",\n        imagePath: \"imagePath\",\n        imageSizes: \"imageSizes\",\n        maxZoom: \"maxZoom\",\n        minimumClusterSize: \"minimumClusterSize\",\n        styles: \"styles\",\n        title: \"title\",\n        zIndex: \"zIndex\",\n        zoomOnClick: \"zoomOnClick\",\n        options: \"options\"\n      },\n      outputs: {\n        clusteringbegin: \"clusteringbegin\",\n        clusteringend: \"clusteringend\",\n        clusterClick: \"clusterClick\",\n        markerClustererInitialized: \"markerClustererInitialized\"\n      },\n      exportAs: [\"mapMarkerClusterer\"],\n      features: [i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function DeprecatedMapMarkerClusterer_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return DeprecatedMapMarkerClusterer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\nlet MapPolygon = /*#__PURE__*/(() => {\n  class MapPolygon {\n    _map = inject(GoogleMap);\n    _ngZone = inject(NgZone);\n    _eventManager = new MapEventManager(inject(NgZone));\n    _options = new BehaviorSubject({});\n    _paths = new BehaviorSubject(undefined);\n    _destroyed = new Subject();\n    /**\n     * The underlying google.maps.Polygon object.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n     */\n    polygon;\n    set options(options) {\n      this._options.next(options || {});\n    }\n    set paths(paths) {\n      this._paths.next(paths);\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n     */\n    polygonClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n     */\n    polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n     */\n    polygonDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n     */\n    polygonDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n     */\n    polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n     */\n    polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n     */\n    polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n     */\n    polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n     */\n    polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n     */\n    polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n     */\n    polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /** Event emitted when the polygon is initialized. */\n    polygonInitialized = new EventEmitter();\n    constructor() {}\n    ngOnInit() {\n      if (this._map._isBrowser) {\n        this._combineOptions().pipe(take(1)).subscribe(options => {\n          if (google.maps.Polygon && this._map.googleMap) {\n            this._initialize(this._map.googleMap, google.maps.Polygon, options);\n          } else {\n            this._ngZone.runOutsideAngular(() => {\n              Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                this._initialize(map, lib.Polygon, options);\n              });\n            });\n          }\n        });\n      }\n    }\n    _initialize(map, polygonConstructor, options) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.polygon = new polygonConstructor(options);\n        this._assertInitialized();\n        this.polygon.setMap(map);\n        this._eventManager.setTarget(this.polygon);\n        this.polygonInitialized.emit(this.polygon);\n        this._watchForOptionsChanges();\n        this._watchForPathChanges();\n      });\n    }\n    ngOnDestroy() {\n      this._eventManager.destroy();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this.polygon?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n     */\n    getDraggable() {\n      this._assertInitialized();\n      return this.polygon.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n     */\n    getEditable() {\n      this._assertInitialized();\n      return this.polygon.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n     */\n    getPath() {\n      this._assertInitialized();\n      return this.polygon.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n     */\n    getPaths() {\n      this._assertInitialized();\n      return this.polygon.getPaths();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n     */\n    getVisible() {\n      this._assertInitialized();\n      return this.polygon.getVisible();\n    }\n    _combineOptions() {\n      return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n        const combinedOptions = {\n          ...options,\n          paths: paths || options.paths\n        };\n        return combinedOptions;\n      }));\n    }\n    _watchForOptionsChanges() {\n      this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n        this._assertInitialized();\n        this.polygon.setOptions(options);\n      });\n    }\n    _watchForPathChanges() {\n      this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n        if (paths) {\n          this._assertInitialized();\n          this.polygon.setPaths(paths);\n        }\n      });\n    }\n    _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this.polygon) {\n          throw Error('Cannot interact with a Google Map Polygon before it has been ' + 'initialized. Please wait for the Polygon to load before trying to interact with it.');\n        }\n      }\n    }\n    static ɵfac = function MapPolygon_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapPolygon)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapPolygon,\n      selectors: [[\"map-polygon\"]],\n      inputs: {\n        options: \"options\",\n        paths: \"paths\"\n      },\n      outputs: {\n        polygonClick: \"polygonClick\",\n        polygonDblclick: \"polygonDblclick\",\n        polygonDrag: \"polygonDrag\",\n        polygonDragend: \"polygonDragend\",\n        polygonDragstart: \"polygonDragstart\",\n        polygonMousedown: \"polygonMousedown\",\n        polygonMousemove: \"polygonMousemove\",\n        polygonMouseout: \"polygonMouseout\",\n        polygonMouseover: \"polygonMouseover\",\n        polygonMouseup: \"polygonMouseup\",\n        polygonRightclick: \"polygonRightclick\",\n        polygonInitialized: \"polygonInitialized\"\n      },\n      exportAs: [\"mapPolygon\"]\n    });\n  }\n  return MapPolygon;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\nlet MapPolyline = /*#__PURE__*/(() => {\n  class MapPolyline {\n    _map = inject(GoogleMap);\n    _ngZone = inject(NgZone);\n    _eventManager = new MapEventManager(inject(NgZone));\n    _options = new BehaviorSubject({});\n    _path = new BehaviorSubject(undefined);\n    _destroyed = new Subject();\n    /**\n     * The underlying google.maps.Polyline object.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n     */\n    polyline;\n    set options(options) {\n      this._options.next(options || {});\n    }\n    set path(path) {\n      this._path.next(path);\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n     */\n    polylineClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n     */\n    polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n     */\n    polylineDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n     */\n    polylineDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n     */\n    polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n     */\n    polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n     */\n    polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n     */\n    polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n     */\n    polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n     */\n    polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n     */\n    polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /** Event emitted when the polyline is initialized. */\n    polylineInitialized = new EventEmitter();\n    constructor() {}\n    ngOnInit() {\n      if (this._map._isBrowser) {\n        this._combineOptions().pipe(take(1)).subscribe(options => {\n          if (google.maps.Polyline && this._map.googleMap) {\n            this._initialize(this._map.googleMap, google.maps.Polyline, options);\n          } else {\n            this._ngZone.runOutsideAngular(() => {\n              Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                this._initialize(map, lib.Polyline, options);\n              });\n            });\n          }\n        });\n      }\n    }\n    _initialize(map, polylineConstructor, options) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.polyline = new polylineConstructor(options);\n        this._assertInitialized();\n        this.polyline.setMap(map);\n        this._eventManager.setTarget(this.polyline);\n        this.polylineInitialized.emit(this.polyline);\n        this._watchForOptionsChanges();\n        this._watchForPathChanges();\n      });\n    }\n    ngOnDestroy() {\n      this._eventManager.destroy();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this.polyline?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n     */\n    getDraggable() {\n      this._assertInitialized();\n      return this.polyline.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n     */\n    getEditable() {\n      this._assertInitialized();\n      return this.polyline.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n     */\n    getPath() {\n      this._assertInitialized();\n      return this.polyline.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n     */\n    getVisible() {\n      this._assertInitialized();\n      return this.polyline.getVisible();\n    }\n    _combineOptions() {\n      return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n        const combinedOptions = {\n          ...options,\n          path: path || options.path\n        };\n        return combinedOptions;\n      }));\n    }\n    _watchForOptionsChanges() {\n      this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n        this._assertInitialized();\n        this.polyline.setOptions(options);\n      });\n    }\n    _watchForPathChanges() {\n      this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n        if (path) {\n          this._assertInitialized();\n          this.polyline.setPath(path);\n        }\n      });\n    }\n    _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this.polyline) {\n          throw Error('Cannot interact with a Google Map Polyline before it has been ' + 'initialized. Please wait for the Polyline to load before trying to interact with it.');\n        }\n      }\n    }\n    static ɵfac = function MapPolyline_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapPolyline)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapPolyline,\n      selectors: [[\"map-polyline\"]],\n      inputs: {\n        options: \"options\",\n        path: \"path\"\n      },\n      outputs: {\n        polylineClick: \"polylineClick\",\n        polylineDblclick: \"polylineDblclick\",\n        polylineDrag: \"polylineDrag\",\n        polylineDragend: \"polylineDragend\",\n        polylineDragstart: \"polylineDragstart\",\n        polylineMousedown: \"polylineMousedown\",\n        polylineMousemove: \"polylineMousemove\",\n        polylineMouseout: \"polylineMouseout\",\n        polylineMouseover: \"polylineMouseover\",\n        polylineMouseup: \"polylineMouseup\",\n        polylineRightclick: \"polylineRightclick\",\n        polylineInitialized: \"polylineInitialized\"\n      },\n      exportAs: [\"mapPolyline\"]\n    });\n  }\n  return MapPolyline;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\nlet MapRectangle = /*#__PURE__*/(() => {\n  class MapRectangle {\n    _map = inject(GoogleMap);\n    _ngZone = inject(NgZone);\n    _eventManager = new MapEventManager(inject(NgZone));\n    _options = new BehaviorSubject({});\n    _bounds = new BehaviorSubject(undefined);\n    _destroyed = new Subject();\n    /**\n     * The underlying google.maps.Rectangle object.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n     */\n    rectangle;\n    set options(options) {\n      this._options.next(options || {});\n    }\n    set bounds(bounds) {\n      this._bounds.next(bounds);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n     */\n    boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n     */\n    rectangleClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n     */\n    rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n     */\n    rectangleDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n     */\n    rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n     */\n    rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n     */\n    rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n     */\n    rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n     */\n    rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n     */\n    rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n     */\n    rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n     */\n    rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /** Event emitted when the rectangle is initialized. */\n    rectangleInitialized = new EventEmitter();\n    constructor() {}\n    ngOnInit() {\n      if (this._map._isBrowser) {\n        this._combineOptions().pipe(take(1)).subscribe(options => {\n          if (google.maps.Rectangle && this._map.googleMap) {\n            this._initialize(this._map.googleMap, google.maps.Rectangle, options);\n          } else {\n            this._ngZone.runOutsideAngular(() => {\n              Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                this._initialize(map, lib.Rectangle, options);\n              });\n            });\n          }\n        });\n      }\n    }\n    _initialize(map, rectangleConstructor, options) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.rectangle = new rectangleConstructor(options);\n        this._assertInitialized();\n        this.rectangle.setMap(map);\n        this._eventManager.setTarget(this.rectangle);\n        this.rectangleInitialized.emit(this.rectangle);\n        this._watchForOptionsChanges();\n        this._watchForBoundsChanges();\n      });\n    }\n    ngOnDestroy() {\n      this._eventManager.destroy();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this.rectangle?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n     */\n    getBounds() {\n      this._assertInitialized();\n      return this.rectangle.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n     */\n    getDraggable() {\n      this._assertInitialized();\n      return this.rectangle.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n     */\n    getEditable() {\n      this._assertInitialized();\n      return this.rectangle.getEditable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n     */\n    getVisible() {\n      this._assertInitialized();\n      return this.rectangle.getVisible();\n    }\n    _combineOptions() {\n      return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n        const combinedOptions = {\n          ...options,\n          bounds: bounds || options.bounds\n        };\n        return combinedOptions;\n      }));\n    }\n    _watchForOptionsChanges() {\n      this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n        this._assertInitialized();\n        this.rectangle.setOptions(options);\n      });\n    }\n    _watchForBoundsChanges() {\n      this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n        if (bounds) {\n          this._assertInitialized();\n          this.rectangle.setBounds(bounds);\n        }\n      });\n    }\n    _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this.rectangle) {\n          throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' + 'Please wait for the Rectangle to load before trying to interact with it.');\n        }\n      }\n    }\n    static ɵfac = function MapRectangle_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapRectangle)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapRectangle,\n      selectors: [[\"map-rectangle\"]],\n      inputs: {\n        options: \"options\",\n        bounds: \"bounds\"\n      },\n      outputs: {\n        boundsChanged: \"boundsChanged\",\n        rectangleClick: \"rectangleClick\",\n        rectangleDblclick: \"rectangleDblclick\",\n        rectangleDrag: \"rectangleDrag\",\n        rectangleDragend: \"rectangleDragend\",\n        rectangleDragstart: \"rectangleDragstart\",\n        rectangleMousedown: \"rectangleMousedown\",\n        rectangleMousemove: \"rectangleMousemove\",\n        rectangleMouseout: \"rectangleMouseout\",\n        rectangleMouseover: \"rectangleMouseover\",\n        rectangleMouseup: \"rectangleMouseup\",\n        rectangleRightclick: \"rectangleRightclick\",\n        rectangleInitialized: \"rectangleInitialized\"\n      },\n      exportAs: [\"mapRectangle\"]\n    });\n  }\n  return MapRectangle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\nlet MapTrafficLayer = /*#__PURE__*/(() => {\n  class MapTrafficLayer {\n    _map = inject(GoogleMap);\n    _ngZone = inject(NgZone);\n    _autoRefresh = new BehaviorSubject(true);\n    _destroyed = new Subject();\n    /**\n     * The underlying google.maps.TrafficLayer object.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n     */\n    trafficLayer;\n    /**\n     * Whether the traffic layer refreshes with updated information automatically.\n     */\n    set autoRefresh(autoRefresh) {\n      this._autoRefresh.next(autoRefresh);\n    }\n    /** Event emitted when the traffic layer is initialized. */\n    trafficLayerInitialized = new EventEmitter();\n    constructor() {}\n    ngOnInit() {\n      if (this._map._isBrowser) {\n        this._combineOptions().pipe(take(1)).subscribe(options => {\n          if (google.maps.TrafficLayer && this._map.googleMap) {\n            this._initialize(this._map.googleMap, google.maps.TrafficLayer, options);\n          } else {\n            this._ngZone.runOutsideAngular(() => {\n              Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n                this._initialize(map, lib.TrafficLayer, options);\n              });\n            });\n          }\n        });\n      }\n    }\n    _initialize(map, layerConstructor, options) {\n      this._ngZone.runOutsideAngular(() => {\n        this.trafficLayer = new layerConstructor(options);\n        this._assertInitialized();\n        this.trafficLayer.setMap(map);\n        this.trafficLayerInitialized.emit(this.trafficLayer);\n        this._watchForAutoRefreshChanges();\n      });\n    }\n    ngOnDestroy() {\n      this._destroyed.next();\n      this._destroyed.complete();\n      this.trafficLayer?.setMap(null);\n    }\n    _combineOptions() {\n      return this._autoRefresh.pipe(map(autoRefresh => {\n        const combinedOptions = {\n          autoRefresh\n        };\n        return combinedOptions;\n      }));\n    }\n    _watchForAutoRefreshChanges() {\n      this._combineOptions().pipe(takeUntil(this._destroyed)).subscribe(options => {\n        this._assertInitialized();\n        this.trafficLayer.setOptions(options);\n      });\n    }\n    _assertInitialized() {\n      if (!this.trafficLayer) {\n        throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' + 'Please wait for the Traffic Layer to load before trying to interact with it.');\n      }\n    }\n    static ɵfac = function MapTrafficLayer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapTrafficLayer)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapTrafficLayer,\n      selectors: [[\"map-traffic-layer\"]],\n      inputs: {\n        autoRefresh: \"autoRefresh\"\n      },\n      outputs: {\n        trafficLayerInitialized: \"trafficLayerInitialized\"\n      },\n      exportAs: [\"mapTrafficLayer\"]\n    });\n  }\n  return MapTrafficLayer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\nlet MapTransitLayer = /*#__PURE__*/(() => {\n  class MapTransitLayer {\n    _map = inject(GoogleMap);\n    _zone = inject(NgZone);\n    /**\n     * The underlying google.maps.TransitLayer object.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n     */\n    transitLayer;\n    /** Event emitted when the transit layer is initialized. */\n    transitLayerInitialized = new EventEmitter();\n    ngOnInit() {\n      if (this._map._isBrowser) {\n        if (google.maps.TransitLayer && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.TransitLayer);\n        } else {\n          this._zone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), google.maps.importLibrary('maps')]).then(([map, lib]) => {\n              this._initialize(map, lib.TransitLayer);\n            });\n          });\n        }\n      }\n    }\n    _initialize(map, layerConstructor) {\n      this._zone.runOutsideAngular(() => {\n        this.transitLayer = new layerConstructor();\n        this.transitLayerInitialized.emit(this.transitLayer);\n        this._assertLayerInitialized();\n        this.transitLayer.setMap(map);\n      });\n    }\n    ngOnDestroy() {\n      this.transitLayer?.setMap(null);\n    }\n    _assertLayerInitialized() {\n      if (!this.transitLayer) {\n        throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' + 'Please wait for the Transit Layer to load before trying to interact with it.');\n      }\n    }\n    static ɵfac = function MapTransitLayer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapTransitLayer)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapTransitLayer,\n      selectors: [[\"map-transit-layer\"]],\n      outputs: {\n        transitLayerInitialized: \"transitLayerInitialized\"\n      },\n      exportAs: [\"mapTransitLayer\"]\n    });\n  }\n  return MapTransitLayer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\nlet MapHeatmapLayer = /*#__PURE__*/(() => {\n  class MapHeatmapLayer {\n    _googleMap = inject(GoogleMap);\n    _ngZone = inject(NgZone);\n    /**\n     * Data shown on the heatmap.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n     */\n    set data(data) {\n      this._data = data;\n    }\n    _data;\n    /**\n     * Options used to configure the heatmap. See:\n     * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n     */\n    set options(options) {\n      this._options = options;\n    }\n    _options;\n    /**\n     * The underlying google.maps.visualization.HeatmapLayer object.\n     *\n     * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n     */\n    heatmap;\n    /** Event emitted when the heatmap is initialized. */\n    heatmapInitialized = new EventEmitter();\n    constructor() {}\n    ngOnInit() {\n      if (this._googleMap._isBrowser) {\n        if (!window.google?.maps?.visualization && !window.google?.maps.importLibrary && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw Error('Namespace `google.maps.visualization` not found, cannot construct heatmap. ' + 'Please install the Google Maps JavaScript API with the \"visualization\" library: ' + 'https://developers.google.com/maps/documentation/javascript/visualization');\n        }\n        if (google.maps.visualization?.HeatmapLayer && this._googleMap.googleMap) {\n          this._initialize(this._googleMap.googleMap, google.maps.visualization.HeatmapLayer);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._googleMap._resolveMap(), google.maps.importLibrary('visualization')]).then(([map, lib]) => {\n              this._initialize(map, lib.HeatmapLayer);\n            });\n          });\n        }\n      }\n    }\n    _initialize(map, heatmapConstructor) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.heatmap = new heatmapConstructor(this._combineOptions());\n        this._assertInitialized();\n        this.heatmap.setMap(map);\n        this.heatmapInitialized.emit(this.heatmap);\n      });\n    }\n    ngOnChanges(changes) {\n      const {\n        _data,\n        heatmap\n      } = this;\n      if (heatmap) {\n        if (changes['options']) {\n          heatmap.setOptions(this._combineOptions());\n        }\n        if (changes['data'] && _data !== undefined) {\n          heatmap.setData(this._normalizeData(_data));\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.heatmap?.setMap(null);\n    }\n    /**\n     * Gets the data that is currently shown on the heatmap.\n     * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n     */\n    getData() {\n      this._assertInitialized();\n      return this.heatmap.getData();\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n      const options = this._options || {};\n      return {\n        ...options,\n        data: this._normalizeData(this._data || options.data || []),\n        map: this._googleMap.googleMap\n      };\n    }\n    /**\n     * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n     * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n     * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n     * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n     * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n     * convert it to a `LatLng` object before passing it off to Google Maps.\n     */\n    _normalizeData(data) {\n      const result = [];\n      data.forEach(item => {\n        result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n      });\n      return result;\n    }\n    /** Asserts that the heatmap object has been initialized. */\n    _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this.heatmap) {\n          throw Error('Cannot interact with a Google Map HeatmapLayer before it has been ' + 'initialized. Please wait for the heatmap to load before trying to interact with it.');\n        }\n      }\n    }\n    static ɵfac = function MapHeatmapLayer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapHeatmapLayer)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapHeatmapLayer,\n      selectors: [[\"map-heatmap-layer\"]],\n      inputs: {\n        data: \"data\",\n        options: \"options\"\n      },\n      outputs: {\n        heatmapInitialized: \"heatmapInitialized\"\n      },\n      exportAs: [\"mapHeatmapLayer\"],\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return MapHeatmapLayer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Asserts that an object is a `LatLngLiteral`. */\nfunction isLatLngLiteral(value) {\n  return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nconst DEFAULT_MARKER_OPTIONS = {\n  position: {\n    lat: 37.221995,\n    lng: -122.184092\n  }\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\nlet MapAdvancedMarker = /*#__PURE__*/(() => {\n  class MapAdvancedMarker {\n    _googleMap = inject(GoogleMap);\n    _ngZone = inject(NgZone);\n    _eventManager = new MapEventManager(inject(NgZone));\n    /**\n     * Rollover text. If provided, an accessibility text (e.g. for use with screen readers) will be added to the AdvancedMarkerElement with the provided value.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.title\n     */\n    set title(title) {\n      this._title = title;\n    }\n    _title;\n    /**\n     * Sets the AdvancedMarkerElement's position. An AdvancedMarkerElement may be constructed without a position, but will not be displayed until its position is provided - for example, by a user's actions or choices. An AdvancedMarkerElement's position can be provided by setting AdvancedMarkerElement.position if not provided at the construction.\n     * Note: AdvancedMarkerElement with altitude is only supported on vector maps.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.position\n     */\n    set position(position) {\n      this._position = position;\n    }\n    _position;\n    /**\n     * The DOM Element backing the visual of an AdvancedMarkerElement.\n     * Note: AdvancedMarkerElement does not clone the passed-in DOM element. Once the DOM element is passed to an AdvancedMarkerElement, passing the same DOM element to another AdvancedMarkerElement will move the DOM element and cause the previous AdvancedMarkerElement to look empty.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.content\n     */\n    set content(content) {\n      this._content = content;\n    }\n    _content;\n    /**\n     * If true, the AdvancedMarkerElement can be dragged.\n     * Note: AdvancedMarkerElement with altitude is not draggable.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.gmpDraggable\n     */\n    set gmpDraggable(draggable) {\n      this._draggable = draggable;\n    }\n    _draggable;\n    /**\n     * Options for constructing an AdvancedMarkerElement.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions\n     */\n    set options(options) {\n      this._options = options;\n    }\n    _options;\n    /**\n     * AdvancedMarkerElements on the map are prioritized by zIndex, with higher values indicating higher display.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElementOptions.zIndex\n     */\n    set zIndex(zIndex) {\n      this._zIndex = zIndex;\n    }\n    _zIndex;\n    /**\n     * This event is fired when the AdvancedMarkerElement element is clicked.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElement.click\n     */\n    mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * This event is fired when the AdvancedMarkerElement is double-clicked.\n     */\n    mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * This event is fired when the mouse moves out of the AdvancedMarkerElement.\n     */\n    mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * This event is fired when the mouse moves over the AdvancedMarkerElement.\n     */\n    mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * This event is fired when the mouse button is released over the AdvancedMarkerElement.\n     */\n    mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * This event is fired when the AdvancedMarkerElement is right-clicked.\n     */\n    mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * This event is repeatedly fired while the user drags the AdvancedMarkerElement.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElement.drag\n     */\n    mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * This event is fired when the user stops dragging the AdvancedMarkerElement.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElement.dragend\n     */\n    mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * This event is fired when the user starts dragging the AdvancedMarkerElement.\n     * https://developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElement.dragstart\n     */\n    mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /** Event emitted when the marker is initialized. */\n    markerInitialized = new EventEmitter();\n    /**\n     * The underlying google.maps.marker.AdvancedMarkerElement object.\n     *\n     * See developers.google.com/maps/documentation/javascript/reference/advanced-markers#AdvancedMarkerElement\n     */\n    advancedMarker;\n    constructor() {}\n    ngOnInit() {\n      if (!this._googleMap._isBrowser) {\n        return;\n      }\n      if (google.maps.marker?.AdvancedMarkerElement && this._googleMap.googleMap) {\n        this._initialize(this._googleMap.googleMap, google.maps.marker.AdvancedMarkerElement);\n      } else {\n        this._ngZone.runOutsideAngular(() => {\n          Promise.all([this._googleMap._resolveMap(), google.maps.importLibrary('marker')]).then(([map, lib]) => {\n            this._initialize(map, lib.AdvancedMarkerElement);\n          });\n        });\n      }\n    }\n    _initialize(map, advancedMarkerConstructor) {\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.advancedMarker = new advancedMarkerConstructor(this._combineOptions());\n        this._assertInitialized();\n        this.advancedMarker.map = map;\n        this._eventManager.setTarget(this.advancedMarker);\n        this.markerInitialized.next(this.advancedMarker);\n      });\n    }\n    ngOnChanges(changes) {\n      const {\n        advancedMarker,\n        _content,\n        _position,\n        _title,\n        _draggable,\n        _zIndex\n      } = this;\n      if (advancedMarker) {\n        if (changes['title']) {\n          advancedMarker.title = _title;\n        }\n        if (changes['gmpDraggable']) {\n          advancedMarker.gmpDraggable = _draggable;\n        }\n        if (changes['content']) {\n          advancedMarker.content = _content;\n        }\n        if (changes['position']) {\n          advancedMarker.position = _position;\n        }\n        if (changes['zIndex']) {\n          advancedMarker.zIndex = _zIndex;\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.markerInitialized.complete();\n      this._eventManager.destroy();\n      if (this.advancedMarker) {\n        this.advancedMarker.map = null;\n      }\n    }\n    getAnchor() {\n      this._assertInitialized();\n      return this.advancedMarker;\n    }\n    /** Returns a promise that resolves when the marker has been initialized. */\n    _resolveMarker() {\n      return this.advancedMarker ? Promise.resolve(this.advancedMarker) : this.markerInitialized.pipe(take(1)).toPromise();\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n      const options = this._options || DEFAULT_MARKER_OPTIONS;\n      return {\n        ...options,\n        title: this._title || options.title,\n        position: this._position || options.position,\n        content: this._content || options.content,\n        zIndex: this._zIndex ?? options.zIndex,\n        gmpDraggable: this._draggable ?? options.gmpDraggable,\n        map: this._googleMap.googleMap\n      };\n    }\n    /** Asserts that the map has been initialized. */\n    _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this.advancedMarker) {\n          throw Error('Cannot interact with a Google Map Marker before it has been ' + 'initialized. Please wait for the Marker to load before trying to interact with it.');\n        }\n      }\n    }\n    static ɵfac = function MapAdvancedMarker_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapAdvancedMarker)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MapAdvancedMarker,\n      selectors: [[\"map-advanced-marker\"]],\n      inputs: {\n        title: \"title\",\n        position: \"position\",\n        content: \"content\",\n        gmpDraggable: \"gmpDraggable\",\n        options: \"options\",\n        zIndex: \"zIndex\"\n      },\n      outputs: {\n        mapClick: \"mapClick\",\n        mapDblclick: \"mapDblclick\",\n        mapMouseout: \"mapMouseout\",\n        mapMouseover: \"mapMouseover\",\n        mapMouseup: \"mapMouseup\",\n        mapRightclick: \"mapRightclick\",\n        mapDrag: \"mapDrag\",\n        mapDragend: \"mapDragend\",\n        mapDragstart: \"mapDragstart\",\n        markerInitialized: \"markerInitialized\"\n      },\n      exportAs: [\"mapAdvancedMarker\"],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MAP_MARKER,\n        useExisting: MapAdvancedMarker\n      }]), i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return MapAdvancedMarker;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\nlet MapMarkerClusterer = /*#__PURE__*/(() => {\n  class MapMarkerClusterer {\n    _googleMap = inject(GoogleMap);\n    _ngZone = inject(NgZone);\n    _currentMarkers = new Set();\n    _closestMapEventManager = new MapEventManager(this._ngZone);\n    _markersSubscription = Subscription.EMPTY;\n    /** Whether the clusterer is allowed to be initialized. */\n    _canInitialize = this._googleMap._isBrowser;\n    /**\n     * Used to customize how the marker cluster is rendered.\n     * See https://googlemaps.github.io/js-markerclusterer/interfaces/Renderer.html.\n     */\n    renderer;\n    /**\n     * Algorithm used to cluster the markers.\n     * See https://googlemaps.github.io/js-markerclusterer/interfaces/Algorithm.html.\n     */\n    algorithm;\n    /** Emits when clustering has started. */\n    clusteringbegin = this._closestMapEventManager.getLazyEmitter('clusteringbegin');\n    /** Emits when clustering is done. */\n    clusteringend = this._closestMapEventManager.getLazyEmitter('clusteringend');\n    /** Emits when a cluster has been clicked. */\n    clusterClick = new EventEmitter();\n    /** Event emitted when the marker clusterer is initialized. */\n    markerClustererInitialized = new EventEmitter();\n    _markers;\n    /** Underlying MarkerClusterer object used to interact with Google Maps. */\n    markerClusterer;\n    async ngOnInit() {\n      if (this._canInitialize) {\n        await this._createCluster();\n        // The `clusteringbegin` and `clusteringend` events are\n        // emitted on the map so that's why set it as the target.\n        this._closestMapEventManager.setTarget(this._googleMap.googleMap);\n      }\n    }\n    async ngOnChanges(changes) {\n      const change = changes['renderer'] || changes['algorithm'];\n      // Since the options are set in the constructor, we have to recreate the cluster if they change.\n      if (this.markerClusterer && change && !change.isFirstChange()) {\n        await this._createCluster();\n      }\n    }\n    ngOnDestroy() {\n      this._markersSubscription.unsubscribe();\n      this._closestMapEventManager.destroy();\n      this._destroyCluster();\n    }\n    async _createCluster() {\n      if (!markerClusterer?.MarkerClusterer && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('MarkerClusterer class not found, cannot construct a marker cluster. ' + 'Please install the MarkerClusterer library: ' + 'https://github.com/googlemaps/js-markerclusterer');\n      }\n      const map = await this._googleMap._resolveMap();\n      this._destroyCluster();\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      this._ngZone.runOutsideAngular(() => {\n        this.markerClusterer = new markerClusterer.MarkerClusterer({\n          map,\n          renderer: this.renderer,\n          algorithm: this.algorithm,\n          onClusterClick: (event, cluster, map) => {\n            if (this.clusterClick.observers.length) {\n              this._ngZone.run(() => this.clusterClick.emit(cluster));\n            } else {\n              markerClusterer.defaultOnClusterClickHandler(event, cluster, map);\n            }\n          }\n        });\n        this.markerClustererInitialized.emit(this.markerClusterer);\n      });\n      await this._watchForMarkerChanges();\n    }\n    async _watchForMarkerChanges() {\n      this._assertInitialized();\n      const initialMarkers = [];\n      const markers = await this._getInternalMarkers(this._markers.toArray());\n      for (const marker of markers) {\n        this._currentMarkers.add(marker);\n        initialMarkers.push(marker);\n      }\n      this.markerClusterer.addMarkers(initialMarkers);\n      this._markersSubscription.unsubscribe();\n      this._markersSubscription = this._markers.changes.subscribe(async markerComponents => {\n        this._assertInitialized();\n        const newMarkers = new Set(await this._getInternalMarkers(markerComponents));\n        const markersToAdd = [];\n        const markersToRemove = [];\n        for (const marker of Array.from(newMarkers)) {\n          if (!this._currentMarkers.has(marker)) {\n            this._currentMarkers.add(marker);\n            markersToAdd.push(marker);\n          }\n        }\n        for (const marker of Array.from(this._currentMarkers)) {\n          if (!newMarkers.has(marker)) {\n            markersToRemove.push(marker);\n          }\n        }\n        this.markerClusterer.addMarkers(markersToAdd, true);\n        this.markerClusterer.removeMarkers(markersToRemove, true);\n        this.markerClusterer.render();\n        for (const marker of markersToRemove) {\n          this._currentMarkers.delete(marker);\n        }\n      });\n    }\n    _destroyCluster() {\n      // TODO(crisbeto): the naming here seems odd, but the `MarkerCluster` method isn't\n      // exposed. All this method seems to do at the time of writing is to call into `reset`.\n      // See: https://github.com/googlemaps/js-markerclusterer/blob/main/src/markerclusterer.ts#L205\n      this.markerClusterer?.onRemove();\n      this.markerClusterer = undefined;\n    }\n    _getInternalMarkers(markers) {\n      return Promise.all(markers.map(marker => marker._resolveMarker()));\n    }\n    _assertInitialized() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!this._googleMap.googleMap) {\n          throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n        }\n        if (!this.markerClusterer) {\n          throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' + 'Please wait for the MarkerClusterer to load before trying to interact with it.');\n        }\n      }\n    }\n    static ɵfac = function MapMarkerClusterer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapMarkerClusterer)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MapMarkerClusterer,\n      selectors: [[\"map-marker-clusterer\"]],\n      contentQueries: function MapMarkerClusterer_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MAP_MARKER, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._markers = _t);\n        }\n      },\n      inputs: {\n        renderer: \"renderer\",\n        algorithm: \"algorithm\"\n      },\n      outputs: {\n        clusteringbegin: \"clusteringbegin\",\n        clusteringend: \"clusteringend\",\n        clusterClick: \"clusterClick\",\n        markerClustererInitialized: \"markerClustererInitialized\"\n      },\n      exportAs: [\"mapMarkerClusterer\"],\n      features: [i0.ɵɵNgOnChangesFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MapMarkerClusterer_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MapMarkerClusterer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst COMPONENTS = [GoogleMap, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapAdvancedMarker, DeprecatedMapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer, MapMarkerClusterer];\nlet GoogleMapsModule = /*#__PURE__*/(() => {\n  class GoogleMapsModule {\n    static ɵfac = function GoogleMapsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || GoogleMapsModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: GoogleMapsModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return GoogleMapsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\nlet MapDirectionsService = /*#__PURE__*/(() => {\n  class MapDirectionsService {\n    _ngZone = inject(NgZone);\n    _directionsService;\n    constructor() {}\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsService.route\n     */\n    route(request) {\n      return new Observable(observer => {\n        this._getService().then(service => {\n          service.route(request, (result, status) => {\n            this._ngZone.run(() => {\n              observer.next({\n                result: result || undefined,\n                status\n              });\n              observer.complete();\n            });\n          });\n        });\n      });\n    }\n    _getService() {\n      if (!this._directionsService) {\n        if (google.maps.DirectionsService) {\n          this._directionsService = new google.maps.DirectionsService();\n        } else {\n          return google.maps.importLibrary('routes').then(lib => {\n            this._directionsService = new lib.DirectionsService();\n            return this._directionsService;\n          });\n        }\n      }\n      return Promise.resolve(this._directionsService);\n    }\n    static ɵfac = function MapDirectionsService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapDirectionsService)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MapDirectionsService,\n      factory: MapDirectionsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return MapDirectionsService;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\nlet MapGeocoder = /*#__PURE__*/(() => {\n  class MapGeocoder {\n    _ngZone = inject(NgZone);\n    _geocoder;\n    constructor() {}\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n     */\n    geocode(request) {\n      return new Observable(observer => {\n        this._getGeocoder().then(geocoder => {\n          geocoder.geocode(request, (results, status) => {\n            this._ngZone.run(() => {\n              observer.next({\n                results: results || [],\n                status\n              });\n              observer.complete();\n            });\n          });\n        });\n      });\n    }\n    _getGeocoder() {\n      if (!this._geocoder) {\n        if (google.maps.Geocoder) {\n          this._geocoder = new google.maps.Geocoder();\n        } else {\n          return google.maps.importLibrary('geocoding').then(lib => {\n            this._geocoder = new lib.Geocoder();\n            return this._geocoder;\n          });\n        }\n      }\n      return Promise.resolve(this._geocoder);\n    }\n    static ɵfac = function MapGeocoder_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MapGeocoder)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MapGeocoder,\n      factory: MapGeocoder.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return MapGeocoder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nexport { DeprecatedMapMarkerClusterer, GoogleMap, GoogleMapsModule, MapAdvancedMarker, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapDirectionsService, MapEventManager, MapGeocoder, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer };\n","export default [\r\n    { lat: 39.669418334961094, lng: -7.532505035400387 },\r\n    { lat: 39.636665344238295, lng: -7.525000572204529 },\r\n    { lat: 39.60277175903329, lng: -7.502778053283687 },\r\n    { lat: 39.49374771118159, lng: -7.375694751739448 },\r\n    { lat: 39.38832855224609, lng: -7.322778701782229 },\r\n    { lat: 39.34471893310549, lng: -7.313611984252929 },\r\n    { lat: 39.21305084228519, lng: -7.242777824401859 },\r\n    { lat: 39.11388397216798, lng: -7.145833969116208 },\r\n    { lat: 39.106384277343885, lng: -7.124861717224008 },\r\n    { lat: 39.104721069335895, lng: -7.102778434753418 },\r\n    { lat: 39.11992263793949, lng: -7.053264141082758 },\r\n    { lat: 39.111801147460895, lng: -7.013194561004529 },\r\n    { lat: 39.09138488769529, lng: -6.982778549194339 },\r\n    { lat: 39.056663513183594, lng: -6.961112022399789 },\r\n    { lat: 39.023189544677685, lng: -6.955868721008298 },\r\n    { lat: 38.86054992675779, lng: -7.060000419616638 },\r\n    { lat: 38.83554840087899, lng: -7.084167480468748 },\r\n    { lat: 38.781944274902486, lng: -7.164167404174798 },\r\n    { lat: 38.74926757812509, lng: -7.207354545593148 },\r\n    { lat: 38.723400115966896, lng: -7.257153511047307 },\r\n    { lat: 38.703330993652486, lng: -7.267222404479917 },\r\n    { lat: 38.44471740722668, lng: -7.317083835601749 },\r\n    { lat: 38.431385040283295, lng: -7.296527862548769 },\r\n    { lat: 38.419441223144496, lng: -7.277639389038089 },\r\n    { lat: 38.32027435302739, lng: -7.192222595214838 },\r\n    { lat: 38.28443908691409, lng: -7.169722557067868 },\r\n    { lat: 38.246109008789084, lng: -7.145000457763619 },\r\n    { lat: 38.22583007812499, lng: -7.130000114440858 },\r\n    { lat: 38.18916320800779, lng: -7.102222442626948 },\r\n    { lat: 38.177009582519496, lng: -7.087778091430658 },\r\n    { lat: 38.193813323974695, lng: -7.016806125640868 },\r\n    { lat: 38.20944213867189, lng: -6.993333816528319 },\r\n    { lat: 38.21742630004889, lng: -6.947569847106818 },\r\n    { lat: 38.209068298339794, lng: -6.933746337890568 },\r\n    { lat: 38.170413970947294, lng: -6.941528320312498 },\r\n    { lat: 38.139999389648395, lng: -6.951666831970158 },\r\n    { lat: 38.03110885620129, lng: -7.004028320312438 },\r\n    { lat: 38.009994506835994, lng: -7.123611450195258 },\r\n    { lat: 37.99694061279299, lng: -7.210833549499509 },\r\n    { lat: 37.98367691040039, lng: -7.253541946411128 },\r\n    { lat: 37.959442138671896, lng: -7.251944541931148 },\r\n    { lat: 37.93096923828129, lng: -7.252778053283628 },\r\n    { lat: 37.86555099487319, lng: -7.281667232513368 },\r\n    { lat: 37.815277099609496, lng: -7.320000648498479 },\r\n    { lat: 37.769718170166094, lng: -7.386945247650148 },\r\n    { lat: 37.74388885498049, lng: -7.423055648803708 },\r\n    { lat: 37.699440002441484, lng: -7.446945190429688 },\r\n    { lat: 37.552497863769496, lng: -7.524444580078068 },\r\n    { lat: 37.528549194335994, lng: -7.512534141540528 },\r\n    { lat: 37.52249908447279, lng: -7.503055572509768 },\r\n    { lat: 37.498886108398594, lng: -7.484723091125429 },\r\n    { lat: 37.48138427734379, lng: -7.471389770507808 },\r\n    { lat: 37.45722198486329, lng: -7.461389541625859 },\r\n    { lat: 37.41860961914059, lng: -7.447222709655758 },\r\n    { lat: 37.366943359374986, lng: -7.434722900390568 },\r\n    { lat: 37.25318908691419, lng: -7.431854248046817 },\r\n    { lat: 37.180549621582095, lng: -7.419028282165527 },\r\n    { lat: 37.17874526977529, lng: -7.444583892822268 },\r\n    { lat: 37.17777252197269, lng: -7.471944808959898 },\r\n    { lat: 37.15319061279299, lng: -7.559583663940368 },\r\n    { lat: 37.14443969726569, lng: -7.580417156219428 },\r\n    { lat: 37.11547851562509, lng: -7.61868095397949 },\r\n    { lat: 37.03499603271499, lng: -7.758334159851068 },\r\n    { lat: 37.00888824462899, lng: -7.897778511047358 },\r\n    { lat: 37.00833129882809, lng: -7.973055839538458 },\r\n    { lat: 37.022079467773395, lng: -8.012917518615719 },\r\n    { lat: 37.04304885864259, lng: -8.044584274291989 },\r\n    { lat: 37.05471801757808, lng: -8.067779541015508 },\r\n    { lat: 37.07430267333999, lng: -8.110834121704038 },\r\n    { lat: 37.09221649169929, lng: -8.175279617309508 },\r\n    { lat: 37.102077484130795, lng: -8.373750686645447 },\r\n    { lat: 37.09069061279309, lng: -8.407778739929197 },\r\n    { lat: 37.086105346679794, lng: -8.439584732055659 },\r\n    { lat: 37.10305023193369, lng: -8.511112213134709 },\r\n    { lat: 37.10888671874999, lng: -8.658889770507809 },\r\n    { lat: 37.066940307617195, lng: -8.814723968505858 },\r\n    { lat: 37.01610565185559, lng: -8.926668167114258 },\r\n    { lat: 37.02631378173829, lng: -8.989236831664979 },\r\n    { lat: 37.052215576171896, lng: -8.984167098999018 },\r\n    { lat: 37.10131454467769, lng: -8.949097633361697 },\r\n    { lat: 37.130134582519595, lng: -8.924445152282598 },\r\n    { lat: 37.16062164306649, lng: -8.906528472900328 },\r\n    { lat: 37.272773742675795, lng: -8.858057022094728 },\r\n    { lat: 37.38055419921879, lng: -8.828889846801758 },\r\n    { lat: 37.44251251220709, lng: -8.795862197875858 },\r\n    { lat: 37.52416229248048, lng: -8.787223815917908 },\r\n    { lat: 37.72222137451179, lng: -8.787500381469728 },\r\n    { lat: 37.766387939453196, lng: -8.805833816528319 },\r\n    { lat: 37.81909179687509, lng: -8.791866302490229 },\r\n    { lat: 37.82916259765629, lng: -8.790972709655758 },\r\n    { lat: 37.914020538330185, lng: -8.799305915832518 },\r\n    { lat: 37.93193817138678, lng: -8.810556411743159 },\r\n    { lat: 38.014717102050795, lng: -8.839446067809998 },\r\n    { lat: 38.08902359008789, lng: -8.806806564330998 },\r\n    { lat: 38.118331909179695, lng: -8.796112060546879 },\r\n    { lat: 38.13944244384769, lng: -8.789445877075138 },\r\n    { lat: 38.180549621582095, lng: -8.779167175292969 },\r\n    { lat: 38.211761474609396, lng: -8.775821685791017 },\r\n    { lat: 38.25638198852549, lng: -8.777222633361758 },\r\n    { lat: 38.30110931396499, lng: -8.779724121093748 },\r\n    { lat: 38.328887939453196, lng: -8.786390304565366 },\r\n    { lat: 38.34915924072279, lng: -8.792222976684508 },\r\n    { lat: 38.37444305419928, lng: -8.802501678466797 },\r\n    { lat: 38.41666412353529, lng: -8.723333358764648 },\r\n    { lat: 38.413887023925795, lng: -8.673334121704098 },\r\n    { lat: 38.517219543457095, lng: -8.768890380859318 },\r\n    { lat: 38.51777267456049, lng: -8.898612022399899 },\r\n    { lat: 38.509994506835895, lng: -8.918889999389528 },\r\n    { lat: 38.463607788086094, lng: -8.992778778076168 },\r\n    { lat: 38.43721771240239, lng: -9.062778472900389 },\r\n    { lat: 38.433052062988295, lng: -9.083612442016598 },\r\n    { lat: 38.419715881347784, lng: -9.183889389038029 },\r\n    { lat: 38.45166015624999, lng: -9.200279235839838 },\r\n    { lat: 38.47805023193369, lng: -9.183751106262209 },\r\n    { lat: 38.509162902832095, lng: -9.178889274597168 },\r\n    { lat: 38.53694152832029, lng: -9.183889389038029 },\r\n    { lat: 38.595413208007884, lng: -9.205417633056527 },\r\n    { lat: 38.61944198608399, lng: -9.220140457153258 },\r\n    { lat: 38.64096832275399, lng: -9.239861488342228 },\r\n    { lat: 38.66874313354499, lng: -9.274236679077148 },\r\n    { lat: 38.678329467773494, lng: -9.215278625488278 },\r\n    { lat: 38.677913665771584, lng: -9.159723281860348 },\r\n    { lat: 38.677913665771584, lng: -9.159723281860348 },\r\n    { lat: 38.63110351562489, lng: -9.074445724487298 },\r\n    { lat: 38.699996948242195, lng: -9.028057098388668 },\r\n    { lat: 38.729438781738295, lng: -9.015556335449217 },\r\n    { lat: 38.762844085693395, lng: -8.948195457458498 },\r\n    { lat: 38.76589202880869, lng: -8.919746398925778 },\r\n    { lat: 38.770271301269595, lng: -8.919723510742188 },\r\n    { lat: 38.80041122436519, lng: -8.929445266723578 },\r\n    { lat: 38.84085845947279, lng: -8.955848693847658 },\r\n    { lat: 38.85013198852548, lng: -8.979549407958977 },\r\n    { lat: 38.90069198608409, lng: -8.989445686340328 },\r\n    { lat: 38.940620422363395, lng: -8.994306564330998 },\r\n    { lat: 38.85499572753919, lng: -9.065279006957889 },\r\n    { lat: 38.83055114746109, lng: -9.079028129577578 },\r\n    { lat: 38.804996490478494, lng: -9.089167594909668 },\r\n    { lat: 38.771450042724595, lng: -9.092778205871529 },\r\n    { lat: 38.747356414794886, lng: -9.095278739929196 },\r\n    { lat: 38.717220306396385, lng: -9.118473052978517 },\r\n    { lat: 38.69082641601559, lng: -9.212501525878908 },\r\n    { lat: 38.676666259765696, lng: -9.322223663330018 },\r\n    { lat: 38.69194030761709, lng: -9.429723739624018 },\r\n    { lat: 38.70527267456059, lng: -9.476042747497498 },\r\n    { lat: 38.79388427734379, lng: -9.490834236145018 },\r\n    { lat: 38.83958053588869, lng: -9.462500572204528 },\r\n    { lat: 38.863052368164084, lng: -9.444514274597166 },\r\n    { lat: 38.918052673339886, lng: -9.421945571899359 },\r\n    { lat: 38.949440002441285, lng: -9.412639617919869 },\r\n    { lat: 38.99172973632819, lng: -9.417361259460389 },\r\n    { lat: 39.01152420043939, lng: -9.426250457763668 },\r\n    { lat: 39.07860565185549, lng: -9.419168472289979 },\r\n    { lat: 39.11777496337899, lng: -9.396667480468748 },\r\n    { lat: 39.16305160522469, lng: -9.364723205566408 },\r\n    { lat: 39.224857330322294, lng: -9.339722633361697 },\r\n    { lat: 39.26332855224619, lng: -9.337362289428599 },\r\n    { lat: 39.292976379394496, lng: -9.338344573974547 },\r\n    { lat: 39.35666275024419, lng: -9.359583854675238 },\r\n    { lat: 39.39138793945308, lng: -9.293334960937438 },\r\n    { lat: 39.43527221679689, lng: -9.227222442626898 },\r\n    { lat: 39.52638244628918, lng: -9.144166946411126 },\r\n    { lat: 39.61499786376959, lng: -9.085556030273436 },\r\n    { lat: 39.64027404785149, lng: -9.079444885253908 },\r\n    { lat: 39.73221588134759, lng: -9.047500610351559 },\r\n    { lat: 39.77555084228519, lng: -9.026945114135739 },\r\n    { lat: 39.850555419921896, lng: -8.984724044799796 },\r\n    { lat: 39.96416473388669, lng: -8.931945800781248 },\r\n    { lat: 40.04540252685539, lng: -8.896362304687498 },\r\n    { lat: 40.054996490478594, lng: -8.890973091125488 },\r\n    { lat: 40.096107482910284, lng: -8.874723434448189 },\r\n    { lat: 40.13943862915039, lng: -8.862362861633299 },\r\n    { lat: 40.24277496337899, lng: -8.881389617919917 },\r\n    { lat: 40.30693817138669, lng: -8.850557327270508 },\r\n    { lat: 40.33638763427739, lng: -8.840278625488278 },\r\n    { lat: 40.468330383300795, lng: -8.800001144409178 },\r\n    { lat: 40.50416564941409, lng: -8.790279388427678 },\r\n    { lat: 40.520706176757784, lng: -8.785865783691348 },\r\n    { lat: 40.53777313232428, lng: -8.782501220703129 },\r\n    { lat: 40.56013488769539, lng: -8.777501106262148 },\r\n    { lat: 40.63571548461918, lng: -8.729681015014528 },\r\n    { lat: 40.66110992431639, lng: -8.691667556762699 },\r\n    { lat: 40.691108703613295, lng: -8.660139083862248 },\r\n    { lat: 40.77583312988289, lng: -8.678335189819279 },\r\n    { lat: 40.718605041503984, lng: -8.703056335449219 },\r\n    { lat: 40.68618774414069, lng: -8.730986595153809 },\r\n    { lat: 40.72777557373049, lng: -8.726667404174798 },\r\n    { lat: 40.752777099609496, lng: -8.717779159545898 },\r\n    { lat: 40.805896759033295, lng: -8.696597099304139 },\r\n    { lat: 40.86916351318369, lng: -8.677778244018498 },\r\n    { lat: 40.903884887695384, lng: -8.668056488037108 },\r\n    { lat: 41.002632141113295, lng: -8.645556449890078 },\r\n    { lat: 41.01857757568359, lng: -8.645544052123968 },\r\n    { lat: 41.041938781738395, lng: -8.657222747802678 },\r\n    { lat: 41.236663818359396, lng: -8.729444503784178 },\r\n    { lat: 41.42138671874999, lng: -8.789722442626948 },\r\n    { lat: 41.467575073242195, lng: -8.778841018676758 },\r\n    { lat: 41.484443664550895, lng: -8.781112670898379 },\r\n    { lat: 41.56666564941419, lng: -8.799722671508789 },\r\n    { lat: 41.61724090576169, lng: -8.815088272094728 },\r\n    { lat: 41.72430038452159, lng: -8.873056411743159 },\r\n    { lat: 41.751663208007884, lng: -8.880834579467656 },\r\n    { lat: 41.84138488769529, lng: -8.879723548889158 },\r\n    { lat: 41.86402511596679, lng: -8.862361907958926 },\r\n    { lat: 41.902496337890696, lng: -8.813611984252928 },\r\n    { lat: 41.91909027099619, lng: -8.786216735839838 },\r\n    { lat: 41.93173217773449, lng: -8.752418518066348 },\r\n    { lat: 41.952499389648594, lng: -8.745008468627868 },\r\n    { lat: 41.967838287353594, lng: -8.741181373596127 },\r\n    { lat: 42.045272827148395, lng: -8.640001296997008 },\r\n    { lat: 42.05638504028329, lng: -8.613889694213809 },\r\n    { lat: 42.08304977416999, lng: -8.518055915832518 },\r\n    { lat: 42.08471679687509, lng: -8.473611831664979 },\r\n    { lat: 42.08471679687509, lng: -8.446111679077148 },\r\n    { lat: 42.103607177734496, lng: -8.310556411743159 },\r\n    { lat: 42.13861083984379, lng: -8.251945495605469 },\r\n    { lat: 42.15067291259779, lng: -8.197834014892518 },\r\n    { lat: 42.060482025146484, lng: -8.083750724792418 },\r\n    { lat: 42.02298355102548, lng: -8.084652900695739 },\r\n    { lat: 42.01096725463879, lng: -8.102223396301207 },\r\n    { lat: 41.998886108398594, lng: -8.134723663330018 },\r\n    { lat: 41.97444152832039, lng: -8.165279388427729 },\r\n    { lat: 41.92874526977539, lng: -8.208750724792479 },\r\n    { lat: 41.90749359130869, lng: -8.218334197997988 },\r\n    { lat: 41.873397827148395, lng: -8.193682670593256 },\r\n    { lat: 41.858608245849695, lng: -8.165487289428599 },\r\n    { lat: 41.82749938964839, lng: -8.161666870117188 },\r\n    { lat: 41.817184448242195, lng: -8.163806915283148 },\r\n    { lat: 41.80916595458979, lng: -8.136112213134767 },\r\n    { lat: 41.80944061279299, lng: -8.087778091430659 },\r\n    { lat: 41.81527709960939, lng: -8.067501068115229 },\r\n    { lat: 41.819519042968786, lng: -8.055065155029238 },\r\n    { lat: 41.827217102050895, lng: -8.035278320312498 },\r\n    { lat: 41.87777328491219, lng: -7.926667213439938 },\r\n    { lat: 41.85263442993168, lng: -7.876667022704958 },\r\n    { lat: 41.85999679565429, lng: -7.858056068420348 },\r\n    { lat: 41.89749908447269, lng: -7.759445190429628 },\r\n    { lat: 41.90388488769539, lng: -7.692777633666988 },\r\n    { lat: 41.865272521972685, lng: -7.598055839538518 },\r\n    { lat: 41.83568954467779, lng: -7.609167098999018 },\r\n    { lat: 41.82277297973629, lng: -7.418611526489258 },\r\n    { lat: 41.844993591308594, lng: -7.331111907958977 },\r\n    { lat: 41.863609313964886, lng: -7.268333435058588 },\r\n    { lat: 41.88383483886729, lng: -7.207347869872988 },\r\n    { lat: 41.883605957031286, lng: -7.200555801391489 },\r\n    { lat: 41.89833068847668, lng: -7.186944961547847 },\r\n    { lat: 41.93159484863279, lng: -7.178611278533938 },\r\n    { lat: 41.97735595703119, lng: -7.185000419616638 },\r\n    { lat: 41.99381256103519, lng: -7.131180763244569 },\r\n    { lat: 41.983604431152486, lng: -7.098889350891108 },\r\n    { lat: 41.95916366577149, lng: -7.075833797454829 },\r\n    { lat: 41.95111083984379, lng: -7.056111335754339 },\r\n    { lat: 41.95458221435549, lng: -7.008750438690188 },\r\n    { lat: 41.973861694336094, lng: -6.982848167419379 },\r\n    { lat: 41.951107025146584, lng: -6.940417289733769 },\r\n    { lat: 41.94471740722669, lng: -6.906111717224118 },\r\n    { lat: 41.93666076660159, lng: -6.697222232818488 },\r\n    { lat: 41.949161529541094, lng: -6.602292060851938 },\r\n    { lat: 41.921943664550795, lng: -6.548611640930179 },\r\n    { lat: 41.83943939208999, lng: -6.528056144714359 },\r\n    { lat: 41.76499938964849, lng: -6.547500610351508 },\r\n    { lat: 41.68701171875009, lng: -6.545625209808288 },\r\n    { lat: 41.65943908691409, lng: -6.501805782318118 },\r\n    { lat: 41.67069244384769, lng: -6.460972309112549 },\r\n    { lat: 41.679996490478594, lng: -6.429444789886468 },\r\n    { lat: 41.67221832275389, lng: -6.347222328186038 },\r\n    { lat: 41.66333007812509, lng: -6.303611755371089 },\r\n    { lat: 41.640411376953196, lng: -6.256111621856689 },\r\n    { lat: 41.579635620117294, lng: -6.190450668334958 },\r\n    { lat: 41.536525726318395, lng: -6.212292194366398 },\r\n    { lat: 41.43610382080079, lng: -6.295833587646428 },\r\n    { lat: 41.380554199218786, lng: -6.357778549194278 },\r\n    { lat: 41.31888580322279, lng: -6.43805599212646 },\r\n    { lat: 41.264999389648395, lng: -6.510278701782168 },\r\n    { lat: 41.242218017578196, lng: -6.558333396911619 },\r\n    { lat: 41.24193954467779, lng: -6.589167118072398 },\r\n    { lat: 41.246383666992195, lng: -6.618056297302188 },\r\n    { lat: 41.24472045898449, lng: -6.643889427184998 },\r\n    { lat: 41.21027374267579, lng: -6.688472270965458 },\r\n    { lat: 41.13666534423829, lng: -6.753334045410039 },\r\n    { lat: 41.107494354248196, lng: -6.754306316375729 },\r\n    { lat: 41.07069015502919, lng: -6.774445056915278 },\r\n    { lat: 41.045555114746186, lng: -6.805556297302188 },\r\n    { lat: 41.030136108398594, lng: -6.841666698455809 },\r\n    { lat: 41.03096008300779, lng: -6.924407005310059 },\r\n    { lat: 41.015552520752095, lng: -6.930556297302248 },\r\n    { lat: 40.974716186523395, lng: -6.891388893127438 },\r\n    { lat: 40.952632904052685, lng: -6.862916946411129 },\r\n    { lat: 40.85700988769529, lng: -6.801736354827878 },\r\n    { lat: 40.73332977294928, lng: -6.819444656372008 },\r\n    { lat: 40.524436950683686, lng: -6.796112060546879 },\r\n    { lat: 40.38777160644529, lng: -6.815555572509769 },\r\n    { lat: 40.31721496582029, lng: -6.831111907958979 },\r\n    { lat: 40.27152252197269, lng: -6.862302780151368 },\r\n    { lat: 40.26180267333989, lng: -6.878333568572939 },\r\n    { lat: 40.25638580322269, lng: -6.910278320312438 },\r\n    { lat: 40.258979797363395, lng: -6.946525573730408 },\r\n    { lat: 40.22679901123049, lng: -7.008333683013918 },\r\n    { lat: 40.187774658203196, lng: -7.027222633361758 },\r\n    { lat: 40.132774353027294, lng: -7.008889198303218 },\r\n    { lat: 40.11916351318369, lng: -6.982639312744138 },\r\n    { lat: 40.113189697265696, lng: -6.946944713592528 },\r\n    { lat: 40.10166168212879, lng: -6.928889274597168 },\r\n    { lat: 40.044166564941484, lng: -6.882500648498538 },\r\n    { lat: 40.01596832275399, lng: -6.870694637298579 },\r\n    { lat: 39.724716186523594, lng: -6.989722251891978 },\r\n    { lat: 39.674995422363196, lng: -7.017222404479978 },\r\n    { lat: 39.66375350952149, lng: -7.052873611450198 },\r\n    { lat: 39.660343170166094, lng: -7.157708644866888 },\r\n    { lat: 39.667221069335895, lng: -7.205555915832459 },\r\n    { lat: 39.67208099365249, lng: -7.263611793518068 },\r\n    { lat: 39.65666198730479, lng: -7.307222366333007 },\r\n    { lat: 39.645271301269496, lng: -7.332847595214788 },\r\n    { lat: 39.648746490478594, lng: -7.411111354827818 },\r\n    { lat: 39.669418334961094, lng: -7.532505035400387 }\r\n];","import { Component, inject, Input, Renderer2 } from '@angular/core';\r\nimport { GoogleMapsModule, MapMarker } from '@angular/google-maps';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpService } from '../../Services/Http.service';\r\nimport { Definicoes } from '../../Definicoes';\r\nimport polygonPortugal from './polygon-portugal';\r\n\r\ntype Coordenada = {\r\n  lat: number\r\n  lng: number\r\n}\r\n\r\n@Component({\r\n  selector: 'mapa',\r\n  imports: [RouterModule, GoogleMapsModule],\r\n  templateUrl: './mapa.html',\r\n  styleUrl: './mapa.css'\r\n})\r\n\r\nexport class Mapa {\r\n\r\n  ServicoHttp = inject(HttpService)\r\n  Renderer = inject(Renderer2)\r\n\r\n  options: google.maps.MapOptions = {\r\n    mapId: \"DEMO_MAP_ID\",\r\n    center: {\r\n      lat: 40.211, lng: -8.4292\r\n    },\r\n    zoom: 6,\r\n    mapTypeId: 'satellite',\r\n\r\n    //minZoom: 5,\r\n    //maxZoom: 19,\r\n  };\r\n\r\n  Markers: any[] = []\r\n\r\n  PolygonPortugal = polygonPortugal\r\n\r\n  PontoA: Coordenada | undefined\r\n  PontoB: Coordenada | undefined\r\n  DistanciaKm: number | null = null;\r\n\r\n  VisuaisLinha: google.maps.PolylineOptions = {\r\n    strokeColor: '#FF0000',\r\n    strokeOpacity: 1.0,\r\n    strokeWeight: 2,\r\n  };\r\n\r\n  GetLocation(): Promise<GeolocationPosition> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!navigator.geolocation) {\r\n        reject('Geolocation not supported');\r\n      } else {\r\n        navigator.geolocation.getCurrentPosition(\r\n          position => resolve(position),\r\n          error => reject(error)\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  AdicionarMarcador(Marcador: any) {\r\n    this.Markers.push(Marcador)\r\n  }\r\n\r\n  async ngOnInit() {\r\n    const Location = await this.GetLocation();\r\n    this.options.center = { lat: Location.coords.latitude, lng: Location.coords.longitude };\r\n    this.AdicionarMarcador({\r\n      position: { lat: Location.coords.latitude, lng: Location.coords.longitude },\r\n      title: 'Voce esta aqui'\r\n    })\r\n\r\n\r\n    const Localidades = await this.ServicoHttp.Request(Definicoes.API_URL + 'localidades', 'GET', 'Falha ao carregar localidades')\r\n    for (const Localidade of Localidades) {\r\n      const Coordenadas: Coordenada = { lat: Localidade.latitude, lng: Localidade.longitude }\r\n      this.AdicionarMarcador({\r\n        position: Coordenadas,\r\n        title: Localidade.local,\r\n        content: this.CriarTexto(Localidade.local, Coordenadas),\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  CriarTexto(text: string, Coordenadas: Coordenada): HTMLElement {\r\n    const div = this.Renderer.createElement('div');\r\n    this.Renderer.setProperty(div, 'textContent', text);\r\n    this.Renderer.addClass(div, 'marcador');\r\n\r\n    // Parágrafo para a distância (fica escondido até que A e B estejam selecionados)\r\n    const distanciaTexto = this.Renderer.createElement('p');\r\n    this.Renderer.appendChild(div, distanciaTexto);\r\n\r\n    // Mantém a lógica de seleção\r\n    this.Renderer.listen(div, 'click', (event) => {\r\n      event.stopPropagation();\r\n\r\n      let pontoEquivalente: 'A' | 'B' | undefined;\r\n      if (this.PontoA?.lat === Coordenadas.lat && this.PontoA?.lng === Coordenadas.lng) {\r\n        pontoEquivalente = 'A';\r\n      } else if (this.PontoB?.lat === Coordenadas.lat && this.PontoB?.lng === Coordenadas.lng) {\r\n        pontoEquivalente = 'B';\r\n      }\r\n\r\n      if (!pontoEquivalente) {\r\n        if (!this.PontoA) {\r\n          this.PontoA = Coordenadas;\r\n        } else {\r\n          this.PontoB = Coordenadas;\r\n        }\r\n        this.Renderer.addClass(div, 'selecionado');\r\n      } else {\r\n        this.Renderer.removeClass(div, 'selecionado');\r\n        if (pontoEquivalente === 'A') {\r\n          this.PontoA = undefined;\r\n        } else if (pontoEquivalente === 'B') {\r\n          this.PontoB = undefined;\r\n        }\r\n      }\r\n\r\n      // Atualiza a distância se A e B estiverem definidos\r\n      if (this.PontoA && this.PontoB) {\r\n        const distancia = this.calcularDistancia(this.PontoA, this.PontoB);\r\n        this.Renderer.setProperty(distanciaTexto, 'textContent', `Distância: ${distancia.toFixed(2)} km`);\r\n      } else {\r\n        this.Renderer.setProperty(distanciaTexto, 'textContent', '');\r\n      }\r\n    });\r\n\r\n    return div;\r\n  }\r\n\r\n\r\n  calcularDistancia(ponto1: Coordenada, ponto2: Coordenada): number {\r\n    const R = 6371; // Raio da Terra em km\r\n    const dLat = this.grausParaRad(ponto2.lat - ponto1.lat);\r\n    const dLng = this.grausParaRad(ponto2.lng - ponto1.lng);\r\n\r\n    const a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos(this.grausParaRad(ponto1.lat)) *\r\n        Math.cos(this.grausParaRad(ponto2.lat)) *\r\n        Math.sin(dLng / 2) * Math.sin(dLng / 2);\r\n\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return R * c;\r\n  }\r\n\r\n  grausParaRad(graus: number): number {\r\n    return graus * (Math.PI / 180);\r\n  }\r\n}\r\n","<google-map height=\"100%\" width=\"100%\" [options]=\"options\"> <!--height=\"100%\" width=\"100%\"-->\r\n    @for (MarkerInfo of Markers; track $index){\r\n        <map-advanced-marker [position]=\"MarkerInfo.position\" [title]=\"MarkerInfo.title\" [content]=\"MarkerInfo.content\"></map-advanced-marker>\r\n    }    \r\n\r\n    @if (PontoA && PontoB){\r\n        <map-polyline [path]=\"[PontoA, PontoB]\" [options]=\"VisuaisLinha\"></map-polyline>\r\n    }\r\n\r\n    <map-polygon [paths]=\"PolygonPortugal\"\r\n        [options]=\"{ fillColor: 'transparent', fillOpacity: 0.2, strokeColor: '#5e0303', strokeWeight: 3 }\"></map-polygon> <!--#012778-->\r\n</google-map>","import { Component } from '@angular/core';\r\nimport { Footer } from '../../Componentes/Footer/footer';\r\nimport { Topbar } from '../../Componentes/Topbar/topbar';\r\nimport { Mapa } from '../../Componentes/Mapa/mapa';\r\nimport { ButaoVoltar } from \"../../Componentes/ButaoVoltar/butao-voltar\";\r\n\r\n@Component({\r\n  selector: 'pagina-localidades',\r\n  imports: [Footer, Topbar, Mapa, ButaoVoltar],\r\n  templateUrl: './localidades.html',\r\n  styleUrl: './localidades.less'\r\n})\r\nexport class PaginaLocalidades {\r\n\r\n}\r\n","<topbar></topbar>\r\n\r\n<mapa class=\"map\"></mapa>\r\n<br><br><br><br><br>\r\n\r\n<h2 class=\"texto\">Partidas e destinos</h2><br><br>\r\n\r\n<p class=\"centrar\">Aqui encontram-se as cidades pelas quais a nossa companhia passa! Entre elas... TODAS DE PORTUGAL!\r\n</p><br><br>\r\n\r\n<div class=\"cidades\">\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/viana_do_castelo.jpg\">\r\n        <p>Viana do Castelo</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/braga.jpg\">\r\n        <p>Braga</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/vila_real.jpg\">\r\n        <p>Vila Real</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/braganca.jpg\">\r\n        <p>Bragança</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/porto.jpg\">\r\n        <p>Porto</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/aveiro.jpg\">\r\n        <p>Aveiro</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/viseu.jpg\">\r\n        <p>Viseu</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/guarda.jpg\">\r\n        <p>Guarda</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/coimbra.jpg\">\r\n        <p>Coimbra</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/castelo_branco.jpg\">\r\n        <p>Castelo Branco</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/leiria.jpg\">\r\n        <p>Leiria</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/lisboa.jpg\">\r\n        <p>Lisboa</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/santarem.jpg\">\r\n        <p>Santarém</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/setubal.jpg\">\r\n        <p>Setúbal</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/portalegre.jpg\">\r\n        <p>Portalegre</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/evora.jpg\">\r\n        <p>Évora</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/beja.jpg\">\r\n        <p>Beja</p>\r\n    </div>\r\n    <div class=\"caixaImg\">\r\n        <img class=\"imagem\" src=\"img/faro.jpg\">\r\n        <p>Faro</p>\r\n    </div>\r\n</div><br><br><br>\r\n\r\n<!--botao para voltar para a página anterior-->\r\n<div class=\"botaoTopo\" id=\"botaoTopo\">\r\n    <button class=\"btTopo\" onclick=\"topFunction()\">Voltar ao topo</button>\r\n</div>\r\n\r\n<br><br><br>\r\n\r\n<butao-voltar></butao-voltar>\r\n<footer-componente></footer-componente>","import { Component, inject } from '@angular/core';\r\nimport { Footer } from '../../Componentes/Footer/footer';\r\nimport { Topbar } from '../../Componentes/Topbar/topbar';\r\nimport { ButaoVoltar } from \"../../Componentes/ButaoVoltar/butao-voltar\";\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { HttpService } from '../../Services/Http.service';\r\nimport { Definicoes } from '../../Definicoes';\r\nimport { Carregamento } from \"../../Componentes/Carregamento/carregamento\";\r\n\r\n@Component({\r\n  selector: 'pagina-contacto',\r\n  imports: [Footer, Topbar, ButaoVoltar, FormsModule, ReactiveFormsModule, Carregamento],\r\n  templateUrl: './contacto.html',\r\n  styleUrl: './contacto.less'\r\n})\r\nexport class PaginaContacto {\r\n  ModalSucessoVisivel: boolean = false;\r\n  AMandarEmail: boolean = false;\r\n\r\n  ServicoHttp = inject(HttpService)\r\n\r\n  FormContacto: FormGroup = new FormGroup({\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    assunto: new FormControl('', [Validators.required]),\r\n    mensagem: new FormControl('', [Validators.required]),\r\n  })\r\n\r\n  get email() {\r\n    return this.FormContacto.get('email');\r\n  }\r\n\r\n  async MandarEmail() {\r\n    this.AMandarEmail = true\r\n    this.FormContacto.disable()\r\n\r\n    const EmailMandado = await this.ServicoHttp.Request(Definicoes.API_URL + 'email-contacto', 'POST', 'Nao foi possivel contactar',\r\n      this.FormContacto.value) // Valores do form\r\n\r\n    if (EmailMandado) {\r\n      this.FormContacto.reset()\r\n      this.ModalSucessoVisivel = true\r\n    }\r\n    this.AMandarEmail = false\r\n    this.FormContacto.enable()\r\n  }\r\n}\r\n","<topbar></topbar>\r\n<carregamento [Visivel]=\"AMandarEmail\"></carregamento>\r\n\r\n<div class=\"column\">\r\n    <div class=\"column left\">\r\n        <img src=\"img/paisagem.jpg\" class=\"ImagemPaisagem\">\r\n    </div>\r\n\r\n    <div class=\"column right\" style=\"margin-top: 30px;\">\r\n        <div>\r\n            <h1 class=\"texto\">Entre em contacto conosco!</h1><br><br>\r\n\r\n            <form [formGroup]=\"FormContacto\" (ngSubmit)=\"MandarEmail()\">\r\n                <label class=\"texto\"><strong>Email: </strong><br><br>\r\n                    <input type=\"email\" formControlName=\"email\" class=\"inputs\" style=\"width: 300px; margin-bottom: 50px; padding-left: 10px\"\r\n                            placeholder=\"Insira o seu email...\"><br>\r\n                </label>\r\n\r\n                <label class=\"texto\"><strong>Assunto: </strong><br><br>\r\n                    <input type=\"text\" class=\"inputs\" formControlName=\"assunto\" style=\"width: 300px; margin-bottom: 50px; padding-left: 10px\"\r\n                        placeholder=\"Assunto da mensagem...\"><br>\r\n                </label>\r\n\r\n                <label class=\"texto\"><strong>Mensagem: </strong><br><br>\r\n                    <textarea class=\"inputs\" formControlName=\"mensagem\" style=\"text-align:justify; width: 600px; height: 300px; resize: none; padding-left: 15px; padding-right:15px; font-family: Calibri, Helvetica, sans-serif; padding-top:10px;\"\r\n                        placeholder=\"Texto...\"></textarea>\r\n                </label><br><br><br>\r\n\r\n                <button class=\"enviar\" type=\"submit\" [disabled]=\"FormContacto.invalid\">Enviar email</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n@if (ModalSucessoVisivel){\r\n    <div class='modal'>\r\n        <div class='modal-contentt animate'>\r\n            <div>\r\n                \r\n                <span (click)=\"ModalSucessoVisivel=false\" class='close'>&times;</span>\r\n                <br><br>\r\n    \r\n                <h3>Email enviado com sucesso!</h3><br>\r\n    \r\n                <label>Entraremos em contacto consigo o mais breve possível.</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n<butao-voltar></butao-voltar>\r\n<footer-componente></footer-componente>","import { Component, inject } from '@angular/core';\r\nimport { Footer } from '../../Componentes/Footer/footer';\r\nimport { Topbar } from '../../Componentes/Topbar/topbar';\r\nimport { ButaoVoltar } from \"../../Componentes/ButaoVoltar/butao-voltar\";\r\n\r\n@Component({\r\n  selector: 'sobre',\r\n  imports: [Footer, Topbar, ButaoVoltar],\r\n  templateUrl: './sobre.html',\r\n  styleUrl: './sobre.css'\r\n})\r\n\r\n\r\nexport class PaginaSobre {\r\n\r\n\r\n}","<topbar></topbar>\r\n\r\n<div class=\"pagina\">\r\n  <h2 class=\"texto\">Sobre mim!</h2><br><br>\r\n\r\n\r\n  <!--botao para voltar para o topo da pagina-->\r\n  <div class=\"botaoTopo\" id=\"botaoTopo\">\r\n    <button class=\"btTopo\" onclick=\"topFunction()\">Voltar ao topo</button>\r\n  </div>\r\n  <br>\r\n\r\n  <div class=\"container\">\r\n    <p class=\"texto2\">Olá, o meu nome é Sofia Miranda e sou estudante do curso de Técnico de Gestão e Programação de Sistemas Informáticos da Escola Secundária de Avelar Brotero, de Coimbra. \r\n\r\n      Tenho 19 anos e sou natural de São Paulo, Brasil. \r\n      Desde cedo, sempre tive uma paixão por tecnologia e programação, o que me levou a escolher esta área de estudo.\r\n    </p>\r\n    <!-- <p class=\"texto2\">Além dos meus estudos, gosto de praticar desporto, especialmente futebol e corrida. \r\n      Acredito que manter um estilo de vida ativo é importante para a minha saúde física e mental.\r\n    </p> -->\r\n    <!-- <p class=\"texto2\">Estou sempre à procura de aprender coisas novas e melhorar as minhas habilidades. \r\n      Espero que este site possa ser útil para quem procura informações sobre mim e os meus interesses.</p> -->\r\n  <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\r\n  </div>\r\n</div>\r\n\r\n<butao-voltar></butao-voltar>\r\n<footer-componente></footer-componente>","import { Component, effect, inject } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ServicoAutenticacao } from '../../../Services/Autenticacao.service';\r\nimport { Carregamento } from '../../../Componentes/Carregamento/carregamento';\r\nimport { HttpService } from '../../../Services/Http.service';\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Definicoes } from '../../../Definicoes';\r\nimport { ModalVerificacao } from \"../../../Componentes/ModalVerificacao/modal-verificacao\";\r\nimport { Validadores } from '../../../Services/Validadores';\r\n\r\n@Component({\r\n  selector: 'janela-privacidade',\r\n  imports: [RouterModule, Carregamento, FormsModule, ReactiveFormsModule, ModalVerificacao],\r\n  templateUrl: './privacidade.html',\r\n  styleUrl: '../definicoes.less'\r\n})\r\nexport class JanelaPrivacidade {\r\n  ServicoAutenticacao = inject(ServicoAutenticacao)\r\n  ServicoHttp = inject(HttpService)\r\n\r\n  Utilizador = this.ServicoAutenticacao.Utilizador\r\n  PasswordVisivel = false\r\n  \r\n  AMandarEmail: boolean = false;\r\n  ModalCodigo = false\r\n\r\n  TipoEdicao: 'email' | 'password' | null = null;\r\n\r\n  async MandarCodigoVerificacao() {\r\n    this.AMandarEmail = true\r\n    this.FormPrivacidade.disable()\r\n\r\n    const EmailMandado = await this.ServicoHttp.Request(Definicoes.API_URL + 'email-confirmacao', 'POST', \r\n      'Falha ao enviar o email de confirmação')\r\n\r\n    if (EmailMandado) {\r\n        this.ModalCodigo = true\r\n    }\r\n    this.AMandarEmail = false\r\n  }\r\n\r\n  async EditarCredenciais(Codigo:number) {\r\n\r\n    const valores = this.FormPrivacidade.value;\r\n\r\n    const carregado = {\r\n      codigo: Codigo,\r\n      email: this.TipoEdicao === 'email' ? valores.email : undefined,\r\n      password: this.TipoEdicao === 'password' ? valores.password : undefined,\r\n    };\r\n\r\n    console.log(carregado)\r\n\r\n    const DadosAlterados = await this.ServicoHttp.Request(Definicoes.API_URL + 'editar-privacidade', 'PATCH',\r\n       'Não foi possivel editar os dados de privacidade', carregado) // Valores do form\r\n\r\n    if (DadosAlterados) {\r\n        this.ModalCodigo = false\r\n    }\r\n    this.FormPrivacidade.enable()\r\n    this.TipoEdicao = null; // resetar depois da edição\r\n  }\r\n\r\n\r\n  FormPrivacidade: FormGroup = new FormGroup({\r\n    email: new FormControl(this.Utilizador()?.email, [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required, Validadores.SenhaForte]),\r\n  })\r\n\r\n\r\n  \r\n  constructor(){\r\n    // effect é uma função chamada quando sinais mudam de valor\r\n    effect(() => { \r\n      // como o utilizador é undefined inicialmente, depois de fazer a autenticação no servidor ele é definido. \r\n      // é preciso esperar para pôr o valor do email do form como o email do utilizador\r\n      this.FormPrivacidade.get('email')?.setValue(this.Utilizador()?.email)\r\n    })\r\n  }\r\n\r\n}\r\n","<carregamento [Visivel]=\"AMandarEmail\"></carregamento>\r\n\r\n<form [formGroup]=\"FormPrivacidade\" (ngSubmit)=\"MandarCodigoVerificacao()\">\r\n    <div class='box2 row'>\r\n        <div class='column left'>\r\n            <h2>Privacidade e Segurança</h2><br>\r\n\r\n            <label>Aqui poderás alterar o teu email e password com segurança! Atenção, será enviado um email\r\n                de confirmação.</label><br><br><br>\r\n\r\n            <!-- EMAIL -->\r\n            <label>Email:</label><br>\r\n            <input formControlName=\"email\" type='email' class='info caixa'>\r\n            <button type='submit' class='editar imagemEditar'\r\n                [disabled]=\"Utilizador()?.email == FormPrivacidade.value.email\"\r\n                (click)=\"ModalCodigo = true; TipoEdicao='email'\">\r\n                <img src='img/lapis.png' width='20px' height='20px'>\r\n            </button><br><br>\r\n\r\n\r\n            <!-- PASSWORD -->\r\n            <label>Password:</label><br>\r\n            <input formControlName=\"password\" [type]=\"PasswordVisivel ? 'text' : 'password'\" class='info caixa'>\r\n            <button type='button' class='ver' (click)=\"PasswordVisivel = !PasswordVisivel\">\r\n                <img [src]=\"PasswordVisivel ? 'img/aberto.png' : 'img/fechado.png'\" width='20px' height='20px'>\r\n            </button>\r\n\r\n            <button type='submit' class='editar imagemEditar' [disabled]=\"FormPrivacidade.invalid\"\r\n                (click)=\"ModalCodigo = true; TipoEdicao='password'\">\r\n                <img src='img/lapis.png' width='20px' height='20px'>\r\n            </button><br><br><br>\r\n\r\n            <label>Tenha certeza de que o email que está a utilizar está ativo ou que tenha espaço o\r\n                suficiente para receber emails de confirmação do nosso site.</label>\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<carregamento [Visivel]=\"AMandarEmail\"></carregamento>\r\n<modal-verificacao (submetido)=\"EditarCredenciais($event)\" [Aberto]=\"ModalCodigo\"></modal-verificacao>","import { Component, effect, inject } from '@angular/core';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { ServicoAutenticacao } from '../../../Services/Autenticacao.service';\r\nimport { Definicoes } from '../../../Definicoes';\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Validadores } from '../../../Services/Validadores';\r\nimport { HttpService } from '../../../Services/Http.service';\r\nimport { Reactive } from '@angular/core/primitives/signals';\r\nimport { SeletorImagens } from '../../../Componentes/SeletorImagens/seletor-imagens';\r\n\r\n@Component({\r\n  selector: 'janela-minha-conta',\r\n  imports: [RouterModule, FormsModule, ReactiveFormsModule, SeletorImagens],\r\n  templateUrl: './minha-conta.html',\r\n  styleUrl: '../definicoes.less'\r\n})\r\n\r\n\r\nexport class JanelaMinhaConta {\r\n  ServicoAutenticacao = inject(ServicoAutenticacao)\r\n  Utilizador = this.ServicoAutenticacao.Utilizador\r\n  ServicoHttp = inject(HttpService)\r\n  router = inject(Router)\r\n\r\n  CarregamentoVisivel = false\r\n  SelecionarImagem = false\r\n  Desativado = true;\r\n  ModalSucessoVisivel: boolean = false;\r\n\r\n\r\n  constructor() {\r\n    this.FormEditar.get('nif')?.disable();\r\n\r\n    effect(() => {\r\n      const Utilizador = this.Utilizador()\r\n      if (Utilizador) {\r\n        this.FormEditar.get('nome')?.setValue(this.Utilizador()?.nome)\r\n        this.FormEditar.get('nif')?.setValue(this.Utilizador()?.nif)\r\n        this.FormEditar.get('nascimento')?.setValue(this.Utilizador()?.nascimento)\r\n        this.FormEditar.get('telefone')?.setValue(this.Utilizador()?.telefone)\r\n        this.FormEditar.get('localidade')?.setValue(this.Utilizador()?.localidade)\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  URL_Imagens = Definicoes.API_URL + 'imagens/utilizador'\r\n\r\n  ImageSelecionada: string | ArrayBuffer | null = null;\r\n  FicheiroSelecionado: File | null = null;\r\n\r\n  //funcao para carregar a imagem do pc \r\n  async PreverImagem(Ficheiro: File) {\r\n    if (Ficheiro){\r\n    const reader = new FileReader();\r\n\r\n    this.FicheiroSelecionado = Ficheiro\r\n\r\n    reader.onload = () => {\r\n      this.ImageSelecionada = reader.result\r\n      this.MudarImagem(Ficheiro)\r\n    };\r\n\r\n    reader.readAsDataURL(Ficheiro);\r\n\r\n    }\r\n  }\r\n\r\n  async ImagemMudada(Event:Event){\r\n    const Input = Event.target as HTMLInputElement\r\n    this.PreverImagem(Input.files![0])\r\n  }\r\n\r\n\r\n\r\n  async MudarImagem(Ficheiro: File) {\r\n\r\n    const Data = new FormData()\r\n    Data.append('foto', Ficheiro)\r\n\r\n    const Sucesso = await this.ServicoHttp.Request(this.URL_Imagens, 'POST', 'Nao foi possivel editar a foto da conta', Data)\r\n  }\r\n\r\n\r\n\r\n  async SubmeterForm() {\r\n    this.FormEditar.disable()\r\n\r\n    const Resultado = await this.ServicoHttp.Request(Definicoes.API_URL + 'minha-conta', 'PATCH', 'Nao foi possivel editar os dados da conta',\r\n      this.FormEditar.value) // O body equivale ao valor do form criar. Este .value e um array, com o nome de todos os campos e os seus valores\r\n\r\n    if (Resultado) {\r\n      this.ModalSucessoVisivel = true\r\n      //await this.router.navigate(['/definicoes/minha-conta'])\r\n    }\r\n    this.FormEditar.enable()\r\n  }\r\n\r\n\r\n\r\n  // funcao para fechar o modal\r\n  FecharModalSucesso() {\r\n    this.ModalSucessoVisivel = false;\r\n    window.location.reload();\r\n  } \r\n\r\n\r\n\r\n  FormEditar: FormGroup = new FormGroup({\r\n    nome: new FormControl('', [Validators.required]),\r\n    nascimento: new FormControl('', [Validators.required]),\r\n    telefone: new FormControl('', [Validators.required, Validators.pattern(/^\\d{9}$/)]),  // ^\\d{9}$ -> 9 digitos\r\n    localidade: new FormControl('', [Validators.required]),\r\n  })\r\n\r\n\r\n\r\n  get nome() {\r\n    return this.FormEditar.get('nome');\r\n  }\r\n  get nascimento() {\r\n    return this.FormEditar.get('nascimento');\r\n  }\r\n  get telefone() {\r\n    return this.FormEditar.get('telefone');\r\n  }\r\n  get localidade() {\r\n    return this.FormEditar.get('localidade');\r\n  }\r\n\r\n\r\n  VerificarMudancas() {\r\n    const ValoresForm = this.FormEditar.value\r\n    return ValoresForm.nome !== this.Utilizador()?.nome ||\r\n      ValoresForm.nascimento !== this.Utilizador()?.nascimento ||\r\n      ValoresForm.telefone !== this.Utilizador()?.telefone ||\r\n      ValoresForm.localidade !== this.Utilizador()?.localidade\r\n  }\r\n\r\n  //funcao para permitir apenas a insercao de letras\r\n  permitirApenasLetras(event: any) {\r\n    const input = event.target as HTMLInputElement;\r\n    input.value = input.value.replace(/[^a-zA-ZÀ-ÿ\\s]/g, '');\r\n  }\r\n\r\n  //funcao para permitir apenas a insercao de numeros\r\n  permitirApenasNumeros(event: KeyboardEvent): void {\r\n    const tecla = event.key;\r\n    if (!/^\\d$/.test(tecla)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","<form [formGroup]=\"FormEditar\" (ngSubmit)=\"SubmeterForm()\" enctype=\"multipart/form-data\">\r\n    <div class='box2 row'>\r\n        <div class='column left'>\r\n            <h2 style=\"margin-bottom: 25px;\">Minha conta</h2>\r\n\r\n            <label>Nome: </label><br>\r\n            <input type='text' class='info campoTexto caixa' formControlName='nome' [value]='Utilizador()?.nome' (input)=\"permitirApenasLetras($event)\">\r\n            <br><br>\r\n\r\n            <label>NIF: </label><br>\r\n            <input type='tel' class='info campoTexto caixa' maxlength='9' [value]='Utilizador()?.nif' disabled \r\n                    style=\"cursor:not-allowed;\" ><br><br>\r\n\r\n            <label>Data de nascimento: </label><br>\r\n            <input type='date' class='info campoTexto caixa' formControlName='nascimento' [value]='Utilizador()?.nascimento' (keypress)=\"permitirApenasNumeros($event)\">\r\n            <br><br>\r\n\r\n            <label>Telemóvel: </label><br>\r\n            <input type='tel' class='info campoTexto caixa' formControlName='telefone' pattern='9[0-9]{8}'\r\n                title='O número de telemóvel deve conter 9 números e deve iniciar com 9.' maxlength='9'\r\n                [value]='Utilizador()?.telefone' (keypress)=\"permitirApenasNumeros($event)\">\r\n            <br><br>\r\n\r\n            <label>Localidade: </label><br>\r\n            <input type='text' class='info campoTexto caixa' formControlName='localidade' [value]='Utilizador()?.localidade' (input)=\"permitirApenasLetras($event)\">\r\n            <br>\r\n\r\n            <button type='submit' style='margin-top:30px;' id='botaoEditar' name='botaoEditar' [disabled]=\"!VerificarMudancas()\">Salvo</button> <!--|| !FormEditar.dirty\"-->\r\n        </div>\r\n\r\n        <div class='column right'>\r\n\r\n            <h3 class=\"foto-perfil\">Foto de perfil</h3>\r\n\r\n            <div class=\"bordas\">\r\n                <div class=\"alignment\">\r\n                    <img class=\"imagemUti\" [src]=\"ImageSelecionada || URL_Imagens\" onerror=\"this.src='img/default.png'\">\r\n\r\n                    <!-- <div style=\"display: flex; flex-direction: column; align-items: center;\"> -->\r\n                        \r\n                        <label for=\"file\" class=\"file-label\">Carregar imagem</label>\r\n                        <input type=\"file\" accept=\"image/*\" id=\"file\" class=\"file-input\" formControlName=\"foto\" (change)=\"ImagemMudada($event)\"> \r\n\r\n                        <label class=\"file-label\" style=\"margin-top: 10px;\">Selecionar imagem\r\n                            <input type=\"button\" class=\"file-input\" (click)=\"SelecionarImagem = true\">\r\n                        </label>\r\n                    <!-- </div> -->\r\n                    <br>\r\n                </div>\r\n            </div>\r\n\r\n            @if (SelecionarImagem) { \r\n                <seletor-imagens (imagemSelecionada)=\"PreverImagem($event)\" (close)=\"SelecionarImagem = false\"></seletor-imagens>\r\n            }\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n\r\n@if (ModalSucessoVisivel){\r\n    <div class='modalSucessoFundo'>\r\n        <div class='modalSucesso animate'>\r\n            <div>\r\n                <span (click)=\"FecharModalSucesso()\" class='fecharSu'>&times;</span>\r\n                <br><br>\r\n    \r\n                <h3>Dados alterados com sucesso!</h3><br>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n","import { Component, inject } from '@angular/core';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { ServicoAutenticacao } from '../../../Services/Autenticacao.service';\r\nimport { HttpService } from '../../../Services/Http.service';\r\nimport { Definicoes } from '../../../Definicoes';\r\n\r\n@Component({\r\n  selector: 'janela-utilizadores',\r\n  imports: [RouterModule],\r\n  templateUrl: './utilizadores.html',\r\n  styleUrl: '../definicoes.less'\r\n})\r\nexport class JanelaUtilizadores {\r\n  ServicoAutenticacao = inject(ServicoAutenticacao)\r\n  ServicoHttp = inject(HttpService)\r\n  router = inject(Router)\r\n  Utilizador = this.ServicoAutenticacao.Utilizador\r\n\r\n  Utilizadores:any = []\r\n\r\n  async ngOnInit() {\r\n    const ResultadoUtilizadores = await this.ServicoHttp.Request(Definicoes.API_URL + 'utilizadores', 'GET', \r\n      'Erro ao carregar utilizadores')\r\n\r\n    if (ResultadoUtilizadores) {\r\n      this.Utilizadores = ResultadoUtilizadores\r\n    }\r\n  }\r\n\r\n  MostrarGestao(Nif:number){\r\n    this.router.navigate(['/definicoes/editar-utilizador', Nif]);\r\n\r\n  }\r\n}\r\n","<div class=\"caixaContainer row\">\r\n    <div class=\"column left\">\r\n        <h2>Gestão de Utilizadores</h2><br>\r\n\r\n        <table class=\"tabela\">\r\n            <thead>\r\n                <tr>\r\n                    <th>NIF</th>\r\n                    <th>Nome</th>\r\n                    <th>Nascimento</th>\r\n                    <th>Telemóvel</th>\r\n                    <th>Localidade</th>\r\n                    <th>Email</th>\r\n                    <th>Atividade</th>\r\n                    <th>Utilizador</th>\r\n                    <th>Editar</th>\r\n                </tr>\r\n            </thead>\r\n\r\n\r\n            @for (Utilizador of Utilizadores; track $index){\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{{Utilizador.nif}}</td>\r\n                        <td>{{Utilizador.nome}}</td>\r\n                        <td>{{Utilizador.nascimento}}</td>\r\n                        <td>{{Utilizador.telefone}}</td>\r\n                        <td>{{Utilizador.localidade}}</td>\r\n                        <td>{{Utilizador.email}}</td>\r\n                        <td>\r\n                            @if (Utilizador.atividade == 0) {\r\n                               <span style=\"color: red;\">Inativa</span>\r\n                            }\r\n                            @else {\r\n                               <span style=\"color: green;\">Ativa</span>\r\n                            }\r\n                        </td>\r\n                        <td>\r\n                            @if (Utilizador.tipo_utilizador == 0) {\r\n                                Administrador\r\n                            } \r\n                            \r\n                            @else {\r\n                                Cliente\r\n                            }\r\n                        </td>\r\n                        <td>\r\n                            <button type=\"button\" class=\"editar imagemEditar\"\r\n                                (click)=\"MostrarGestao(Utilizador.nif)\">\r\n                                <img src=\"img/lapis.png\" width=\"20px\" height=\"20px\">\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            }\r\n            \r\n            @empty {\r\n                <tr>\r\n                    <td colspan=\"8\" style=\"text-align: center;\">Nenhum utilizador encontrado.</td>\r\n                </tr>\r\n            }\r\n        </table><br>\r\n    </div>\r\n</div>","import { Component, inject, signal, effect } from '@angular/core';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport { ServicoAutenticacao } from '../../../Services/Autenticacao.service';\r\nimport { HttpService } from '../../../Services/Http.service';\r\nimport { Definicoes } from '../../../Definicoes';\r\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\r\n\r\ninterface Utilizador {\r\n  nif: number;\r\n  telefone: number;\r\n  morada: string;\r\n  nascimento: string;\r\n  localidade: string;\r\n  nome: string;\r\n  email: string;\r\n  tipo_utilizador: number;\r\n  atividade: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'janela-editar-utilizador',\r\n  imports: [RouterModule, FormsModule, ReactiveFormsModule],\r\n  templateUrl: './editar-utilizador.html',\r\n  styleUrl: '../definicoes.less'\r\n})\r\n\r\n\r\nexport class JanelaEditarUtilizador {\r\n  ServicoAutenticacao = inject(ServicoAutenticacao)\r\n  route = inject(ActivatedRoute)\r\n  router = inject(Router)\r\n  ServicoHttp = inject(HttpService)\r\n  Utilizador = this.ServicoAutenticacao.Utilizador\r\n  PasswordVisivel = false\r\n\r\n  UtilizadorSelecionado = signal<null | Utilizador>(null)\r\n\r\n  async SubmeterForm() {\r\n    this.FormEditarUtilizador.disable()\r\n\r\n    const Resultado = await this.ServicoHttp.Request(Definicoes.API_URL + 'editar-utilizador', 'PATCH', 'Não foi possivel editar os dados da conta',\r\n      this.FormEditarUtilizador.value) // O body equivale ao valor do form criar. Este .value e um array, com o nome de todos os campos e os seus valores\r\n\r\n    if (Resultado) {\r\n      await this.router.navigate(['/definicoes/minha-conta'])\r\n      window.location.reload()\r\n    }\r\n    this.FormEditarUtilizador.enable()\r\n  }\r\n\r\n\r\n\r\n  FormEditarUtilizador: FormGroup = new FormGroup({\r\n    nome: new FormControl('', [Validators.required]),\r\n    nif: new FormControl('', [Validators.required, Validators.pattern(/^\\d{9}$/)]),  // ^\\d{9}$ -> 9 digitos\r\n    nascimento: new FormControl('', [Validators.required]),\r\n    telefone: new FormControl('', [Validators.required, Validators.pattern(/^\\d{9}$/)]),  // ^\\d{9}$ -> 9 digitos\r\n    localidade: new FormControl('', [Validators.required]),\r\n    foto: new FormControl('', [Validators.required]),\r\n  });\r\n\r\n  get nome() {\r\n    return this.FormEditarUtilizador.get('nome');\r\n  }\r\n  get nif() {\r\n    return this.FormEditarUtilizador.get('nif');\r\n  }\r\n  get nascimento() {\r\n    return this.FormEditarUtilizador.get('nascimento');\r\n  }\r\n  get telefone() {\r\n    return this.FormEditarUtilizador.get('telefone');\r\n  }\r\n  get localidade() {\r\n    return this.FormEditarUtilizador.get('localidade');\r\n  }\r\n  get foto() {\r\n    return this.FormEditarUtilizador.get('foto');\r\n  }\r\n\r\n\r\n  async ngOnInit() {\r\n    const NIFUtilizador = this.route.snapshot.paramMap.get('id');\r\n\r\n    if (NIFUtilizador) {\r\n      const LinkAPI = Definicoes.API_URL\r\n\r\n      const resultado = await this.ServicoHttp.Request(LinkAPI + `utilizadores/` + NIFUtilizador, 'GET')\r\n\r\n      if (resultado) {\r\n        this.UtilizadorSelecionado.set(resultado)\r\n        console.log(resultado)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  constructor() {\r\n    this.FormEditarUtilizador.get('nif')?.disable();\r\n\r\n    \r\n    const NIFUtilizador = this.route.snapshot.paramMap.get('id');\r\n\r\n    effect(() => {\r\n      const Utilizador = this.Utilizador()\r\n      if (Utilizador && !NIFUtilizador) {\r\n        this.FormEditarUtilizador.get('nome')?.setValue(this.Utilizador()?.nome)\r\n        this.FormEditarUtilizador.get('nif')?.setValue(this.Utilizador()?.nif)\r\n        this.FormEditarUtilizador.get('nascimento')?.setValue(this.Utilizador()?.nascimento)\r\n        this.FormEditarUtilizador.get('telefone')?.setValue(this.Utilizador()?.telefone)\r\n        this.FormEditarUtilizador.get('localidade')?.setValue(this.Utilizador()?.localidade)\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //funcao para permitir apenas a insercao de letras\r\n  permitirApenasLetras(event: any) {\r\n    const input = event.target as HTMLInputElement;\r\n    input.value = input.value.replace(/[^a-zA-ZÀ-ÿ\\s]/g, '');\r\n  }\r\n\r\n  //funcao para permitir apenas a insercao de numeros\r\n  permitirApenasNumeros(event: KeyboardEvent): void {\r\n    const tecla = event.key;\r\n    if (!/^\\d$/.test(tecla)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","<form [formGroup]=\"FormEditarUtilizador\" method=\"POST\">\r\n    <div class=\"box2 row\">\r\n        <div class=\"column left\">\r\n            <h2>Gestão de Utilizadores - Editar</h2><br>\r\n\r\n            <label>Nome:</label><br>\r\n            <input type=\"text\" class=\"info campoTexto caixa\" [value]=\"UtilizadorSelecionado()?.nome\" (input)=\"permitirApenasLetras($event)\"><br><br>\r\n\r\n            <label>NIF:</label><br>\r\n            <input type=\"tel\" class=\"info campoTexto caixa\" name=\"nif\" maxlength=\"9\" style=\"cursor: not-allowed;\" [value]=\"UtilizadorSelecionado()?.nif\" (keypress)=\"permitirApenasNumeros($event)\" disabled>\r\n            <br><br>\r\n\r\n            <label>Data de nascimento:</label><br>\r\n            <input type=\"date\" class=\"info campoTexto caixa\" name=\"nascimento\" [value]=\"UtilizadorSelecionado()?.nascimento\" style=\"cursor: pointer;\"><br><br>\r\n\r\n            <label>Password:</label><br>\r\n            <input [type]=\"PasswordVisivel ? 'text' : 'password'\" class='info caixa campoTexto' name='password' id='password' style=\"margin-bottom:30px; cursor:not-allowed\" disabled>\r\n            <button type='button' class='ver' name=\"iconPasswordConfirm\" id=\"iconPasswordConfirm\"\r\n                (click)=\"PasswordVisivel = !PasswordVisivel\">\r\n                <img [src]=\"PasswordVisivel ? 'img/aberto.png' : 'img/fechado.png'\" width='20px' height='20px'>\r\n            </button><br>\r\n\r\n            <button type=\"submit\" id=\"botaoEditar\" name=\"botaoEditar\" disabled>Salvo</button>\r\n        </div>\r\n\r\n        <div class=\"column right\">\r\n            <div style=\"padding-top: 70px;\">\r\n                <label>Telemóvel:</label><br>\r\n                <input type=\"tel\" class=\"info campoTexto caixa\" name=\"telefone\" maxlength=\"9\" [value]=\"UtilizadorSelecionado()?.telefone\" (keypress)=\"permitirApenasNumeros($event)\"><br><br>\r\n\r\n                <label>Localidade:</label><br>\r\n                <input type=\"text\" class=\"info campoTexto caixa\" name=\"localidade\" [value]=\"UtilizadorSelecionado()?.localidade\" (input)=\"permitirApenasLetras($event)\"><br><br>\r\n\r\n                <label>Email:</label><br>\r\n                <input type=\"email\" class=\"info campoTexto caixa\" name=\"email\" [value]=\"UtilizadorSelecionado()?.email\"><br><br>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"column left\" style=\"padding:0px; padding-top:10px;\">\r\n                        <label>Tipo de utilizador:</label><br>\r\n\r\n                        <select class=\"select-filtro\" style=\"cursor: pointer;\">\r\n                            <option value=\"0\" [selected]=\"UtilizadorSelecionado()?.tipo_utilizador == 0\">\r\n                                Administrador\r\n                            </option>\r\n                            <option value=\"1\" [selected]=\"UtilizadorSelecionado()?.tipo_utilizador == 1\">\r\n                                Cliente\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div class=\"column right\" style=\"padding:0px; padding-top:10px;\">\r\n                        <label>Atividade:</label><br>\r\n\r\n                        <select class=\"select-filtro\" style=\"cursor: pointer;\">\r\n                            <option value=\"0\" [selected]=\"UtilizadorSelecionado()?.atividade == 0\">\r\n                                Inativo\r\n                            </option>\r\n                            <option value=\"1\" [selected]=\"UtilizadorSelecionado()?.atividade == 1\">\r\n                                Ativo\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <br>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>","import { Routes } from '@angular/router';\r\nimport { PaginaDefinicoes } from './Paginas/Definicoes/definicoes';\r\nimport { PaginaInicial } from './Paginas/Inicial/inicial';\r\nimport { PaginaViagens } from './Paginas/Viagens/viagens';\r\nimport { PaginaCriarConta } from './Paginas/CriarConta/criar_conta';\r\nimport { PaginaCompras} from './Paginas/Compras/compras';\r\nimport { PaginaCarrinho } from './Paginas/Carrinho/carrinho';\r\nimport { PaginaLocalidades } from './Paginas/Localidades/localidades';\r\nimport { PaginaContacto } from './Paginas/Contacto/contacto';\r\nimport { PaginaSobre } from './Paginas/Sobre/sobre';\r\nimport { JanelaPrivacidade } from './Paginas/Definicoes/Privacidade/privacidade';\r\nimport { JanelaMinhaConta } from './Paginas/Definicoes/MinhaConta/minha-conta';\r\nimport { JanelaUtilizadores } from './Paginas/Definicoes/GerirUtilizadores/utilizadores';\r\nimport { JanelaEditarUtilizador } from './Paginas/Definicoes/EditarUtilizadores/editar-utilizador';\r\n\r\nexport const routes: Routes = [\r\n    {path:'', redirectTo:'inicial', pathMatch:'full'}, // Apenas redireciona para a página inicial quando o caminho é vazio\r\n\r\n    {path:'inicial', component:PaginaInicial},\r\n    {path:'viagens', component:PaginaViagens},\r\n    \r\n    {path:'localidades', component:PaginaLocalidades},\r\n    {path:'contacto', component:PaginaContacto},\r\n\r\n    {path:'definicoes', component:PaginaDefinicoes, children:[\r\n        {path:'', redirectTo:'minha-conta', pathMatch:'full'}, //Redireciona para minha conta quando o caminho e apenas /definicoes\r\n        {path:'minha-conta', component:JanelaMinhaConta},\r\n        {path:'privacidade', component:JanelaPrivacidade},\r\n        {path:'utilizadores', component:JanelaUtilizadores},\r\n        {path:'editar-utilizador/:id', component:JanelaEditarUtilizador},\r\n        {path:'editar-utilizador', component:JanelaEditarUtilizador}, // Como id e opcional, tambem e preciso definir rota sem id\r\n    ]},\r\n    {path:'carrinho', component:PaginaCarrinho},\r\n    {path:'compras', component:PaginaCompras},\r\n    \r\n    {path:'criarConta', component:PaginaCriarConta},\r\n\r\n    {path:'sobre', component:PaginaSobre}\r\n];\r\n","/**\n * @license Angular v19.2.7\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injector, ɵRuntimeError as _RuntimeError, ɵChangeDetectionScheduler as _ChangeDetectionScheduler, Injectable, ɵperformanceMarkFeature as _performanceMarkFeature, makeEnvironmentProviders, NgZone, RendererFactory2, ANIMATION_MODULE_TYPE } from '@angular/core';\nimport { DomRendererFactory2 } from '../dom_renderer-DGKzginR.mjs';\nconst ANIMATION_PREFIX = '@';\nlet AsyncAnimationRendererFactory = /*#__PURE__*/(() => {\n  class AsyncAnimationRendererFactory {\n    doc;\n    delegate;\n    zone;\n    animationType;\n    moduleImpl;\n    _rendererFactoryPromise = null;\n    scheduler = null;\n    injector = inject(Injector);\n    loadingSchedulerFn = inject(ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN, {\n      optional: true\n    });\n    _engine;\n    /**\n     *\n     * @param moduleImpl allows to provide a mock implmentation (or will load the animation module)\n     */\n    constructor(doc, delegate, zone, animationType, moduleImpl) {\n      this.doc = doc;\n      this.delegate = delegate;\n      this.zone = zone;\n      this.animationType = animationType;\n      this.moduleImpl = moduleImpl;\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      // When the root view is removed, the renderer defers the actual work to the\n      // `TransitionAnimationEngine` to do this, and the `TransitionAnimationEngine` doesn't actually\n      // remove the DOM node, but just calls `markElementAsRemoved()`. The actual DOM node is not\n      // removed until `TransitionAnimationEngine` \"flushes\".\n      // Note: we already flush on destroy within the `InjectableAnimationEngine`. The injectable\n      // engine is not provided when async animations are used.\n      this._engine?.flush();\n    }\n    /**\n     * @internal\n     */\n    loadImpl() {\n      // Note on the `.then(m => m)` part below: Closure compiler optimizations in g3 require\n      // `.then` to be present for a dynamic import (or an import should be `await`ed) to detect\n      // the set of imported symbols.\n      const loadFn = () => this.moduleImpl ?? import('@angular/animations/browser').then(m => m);\n      let moduleImplPromise;\n      if (this.loadingSchedulerFn) {\n        moduleImplPromise = this.loadingSchedulerFn(loadFn);\n      } else {\n        moduleImplPromise = loadFn();\n      }\n      return moduleImplPromise.catch(e => {\n        throw new _RuntimeError(5300 /* RuntimeErrorCode.ANIMATION_RENDERER_ASYNC_LOADING_FAILURE */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Async loading for animations package was ' + 'enabled, but loading failed. Angular falls back to using regular rendering. ' + \"No animations will be displayed and their styles won't be applied.\");\n      }).then(({\n        ɵcreateEngine,\n        ɵAnimationRendererFactory\n      }) => {\n        // We can't create the renderer yet because we might need the hostElement and the type\n        // Both are provided in createRenderer().\n        this._engine = ɵcreateEngine(this.animationType, this.doc);\n        const rendererFactory = new ɵAnimationRendererFactory(this.delegate, this._engine, this.zone);\n        this.delegate = rendererFactory;\n        return rendererFactory;\n      });\n    }\n    /**\n     * This method is delegating the renderer creation to the factories.\n     * It uses default factory while the animation factory isn't loaded\n     * and will rely on the animation factory once it is loaded.\n     *\n     * Calling this method will trigger as side effect the loading of the animation module\n     * if the renderered component uses animations.\n     */\n    createRenderer(hostElement, rendererType) {\n      const renderer = this.delegate.createRenderer(hostElement, rendererType);\n      if (renderer.ɵtype === 0 /* AnimationRendererType.Regular */) {\n        // The factory is already loaded, this is an animation renderer\n        return renderer;\n      }\n      // We need to prevent the DomRenderer to throw an error because of synthetic properties\n      if (typeof renderer.throwOnSyntheticProps === 'boolean') {\n        renderer.throwOnSyntheticProps = false;\n      }\n      // Using a dynamic renderer to switch the renderer implementation once the module is loaded.\n      const dynamicRenderer = new DynamicDelegationRenderer(renderer);\n      // Kick off the module loading if the component uses animations but the module hasn't been\n      // loaded yet.\n      if (rendererType?.data?.['animation'] && !this._rendererFactoryPromise) {\n        this._rendererFactoryPromise = this.loadImpl();\n      }\n      this._rendererFactoryPromise?.then(animationRendererFactory => {\n        const animationRenderer = animationRendererFactory.createRenderer(hostElement, rendererType);\n        dynamicRenderer.use(animationRenderer);\n        this.scheduler ??= this.injector.get(_ChangeDetectionScheduler, null, {\n          optional: true\n        });\n        this.scheduler?.notify(10 /* NotificationSource.AsyncAnimationsLoaded */);\n      }).catch(e => {\n        // Permanently use regular renderer when loading fails.\n        dynamicRenderer.use(renderer);\n      });\n      return dynamicRenderer;\n    }\n    begin() {\n      this.delegate.begin?.();\n    }\n    end() {\n      this.delegate.end?.();\n    }\n    whenRenderingDone() {\n      return this.delegate.whenRenderingDone?.() ?? Promise.resolve();\n    }\n    /**\n     * Used during HMR to clear any cached data about a component.\n     * @param componentId ID of the component that is being replaced.\n     */\n    componentReplaced(componentId) {\n      // Flush the engine since the renderer destruction waits for animations to be done.\n      this._engine?.flush();\n      this.delegate.componentReplaced?.(componentId);\n    }\n    static ɵfac = function AsyncAnimationRendererFactory_Factory(__ngFactoryType__) {\n      i0.ɵɵinvalidFactory();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: AsyncAnimationRendererFactory,\n      factory: AsyncAnimationRendererFactory.ɵfac\n    });\n  }\n  return AsyncAnimationRendererFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The class allows to dynamicly switch between different renderer implementations\n * by changing the delegate renderer.\n */\nclass DynamicDelegationRenderer {\n  delegate;\n  // List of callbacks that need to be replayed on the animation renderer once its loaded\n  replay = [];\n  ɵtype = 1 /* AnimationRendererType.Delegated */;\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n  use(impl) {\n    this.delegate = impl;\n    if (this.replay !== null) {\n      // Replay queued actions using the animation renderer to apply\n      // all events and properties collected while loading was in progress.\n      for (const fn of this.replay) {\n        fn(impl);\n      }\n      // Set to `null` to indicate that the queue was processed\n      // and we no longer need to collect events and properties.\n      this.replay = null;\n    }\n  }\n  get data() {\n    return this.delegate.data;\n  }\n  destroy() {\n    this.replay = null;\n    this.delegate.destroy();\n  }\n  createElement(name, namespace) {\n    return this.delegate.createElement(name, namespace);\n  }\n  createComment(value) {\n    return this.delegate.createComment(value);\n  }\n  createText(value) {\n    return this.delegate.createText(value);\n  }\n  get destroyNode() {\n    return this.delegate.destroyNode;\n  }\n  appendChild(parent, newChild) {\n    this.delegate.appendChild(parent, newChild);\n  }\n  insertBefore(parent, newChild, refChild, isMove) {\n    this.delegate.insertBefore(parent, newChild, refChild, isMove);\n  }\n  removeChild(parent, oldChild, isHostElement) {\n    this.delegate.removeChild(parent, oldChild, isHostElement);\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n  }\n  parentNode(node) {\n    return this.delegate.parentNode(node);\n  }\n  nextSibling(node) {\n    return this.delegate.nextSibling(node);\n  }\n  setAttribute(el, name, value, namespace) {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n  removeAttribute(el, name, namespace) {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n  addClass(el, name) {\n    this.delegate.addClass(el, name);\n  }\n  removeClass(el, name) {\n    this.delegate.removeClass(el, name);\n  }\n  setStyle(el, style, value, flags) {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n  removeStyle(el, style, flags) {\n    this.delegate.removeStyle(el, style, flags);\n  }\n  setProperty(el, name, value) {\n    // We need to keep track of animation properties set on default renderer\n    // So we can also set them also on the animation renderer\n    if (this.shouldReplay(name)) {\n      this.replay.push(renderer => renderer.setProperty(el, name, value));\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n  setValue(node, value) {\n    this.delegate.setValue(node, value);\n  }\n  listen(target, eventName, callback, options) {\n    // We need to keep track of animation events registred by the default renderer\n    // So we can also register them against the animation renderer\n    if (this.shouldReplay(eventName)) {\n      this.replay.push(renderer => renderer.listen(target, eventName, callback, options));\n    }\n    return this.delegate.listen(target, eventName, callback, options);\n  }\n  shouldReplay(propOrEventName) {\n    //`null` indicates that we no longer need to collect events and properties\n    return this.replay !== null && propOrEventName.startsWith(ANIMATION_PREFIX);\n  }\n}\n/**\n * Provides a custom scheduler function for the async loading of the animation package.\n *\n * Private token for investigation purposes\n */\nconst ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN = /*#__PURE__*/new InjectionToken(ngDevMode ? 'async_animation_loading_scheduler_fn' : '');\n\n/**\n * Returns the set of dependency-injection providers\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * When you use this function instead of the eager `provideAnimations()`, animations won't be\n * rendered until the renderer is loaded.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```ts\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimationsAsync()\n *   ]\n * });\n * ```\n *\n * @param type pass `'noop'` as argument to disable animations.\n *\n * @publicApi\n */\nfunction provideAnimationsAsync(type = 'animations') {\n  _performanceMarkFeature('NgAsyncAnimations');\n  // Animations don't work on the server so we switch them over to no-op automatically.\n  if (typeof ngServerMode !== 'undefined' && ngServerMode) {\n    type = 'noop';\n  }\n  return makeEnvironmentProviders([{\n    provide: RendererFactory2,\n    useFactory: (doc, renderer, zone) => {\n      return new AsyncAnimationRendererFactory(doc, renderer, zone, type);\n    },\n    deps: [DOCUMENT, DomRendererFactory2, NgZone]\n  }, {\n    provide: ANIMATION_MODULE_TYPE,\n    useValue: type === 'noop' ? 'NoopAnimations' : 'BrowserAnimations'\n  }]);\n}\nexport { provideAnimationsAsync, ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN, AsyncAnimationRendererFactory as ɵAsyncAnimationRendererFactory };\n","import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';\r\nimport { provideRouter } from '@angular/router';\r\n\r\nimport { routes } from './app.routes';\r\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideAnimationsAsync()],\r\n};\r\n","import { Component, Input, Output, EventEmitter, OnInit, inject } from '@angular/core';\r\nimport { Mensagem } from './mensagem';\r\nimport { ServicoMensagens } from './Mensagens.service';\r\n\r\n@Component({\r\n    selector: 'mensagem',\r\n    template: `\r\n    <div [class]='\"mensagem \"+mensagem.tipo'\r\n         (mouseenter)=\"pausar()\" (mouseleave)=\"retomar()\">\r\n      {{ mensagem.texto }}\r\n      <button (click)=\"Fechar.emit()\">×</button>\r\n    </div>\r\n  `,\r\n    styles: [`\r\n    .mensagem {\r\n      padding: 12px 16px;\r\n      border-radius: 4px;\r\n      color: white;\r\n      box-shadow: 0 2px 6px rgba(0,0,0,0.2);\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      min-width: 200px;\r\n      font-weight: 500;\r\n    }\r\n    .mensagem.erro { background: #ff4d4f; }\r\n    .mensagem.sucesso { background: #52c41a; }\r\n    .mensagem.info { background: #1890ff; }\r\n    .mensagem.aviso { background: #faad14; }\r\n    button {\r\n      background: none;\r\n      border: none;\r\n      color: white;\r\n      font-size: 16px;\r\n      cursor: pointer;\r\n    }\r\n  `]\r\n})\r\nexport class MensagemComponente implements OnInit {\r\n    @Input() mensagem!: Mensagem;\r\n    @Output() Fechar = new EventEmitter<void>();\r\n\r\n    ServicoMensagens = inject(ServicoMensagens)\r\n    private temporizador: any;\r\n\r\n    ngOnInit() {\r\n        this.iniciarTemporizador();\r\n\r\n        this.Fechar.subscribe(() => {\r\n            this.ServicoMensagens.removerMensagem(this.mensagem.id)\r\n        })\r\n    }\r\n\r\n\r\n    pausar() {\r\n        clearTimeout(this.temporizador);\r\n    }\r\n\r\n    retomar() {\r\n        this.iniciarTemporizador();\r\n    }\r\n\r\n    iniciarTemporizador() {\r\n        this.temporizador = setTimeout(() => this.Fechar.emit(), 3000);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Mensagem } from './mensagem';\r\nimport { ServicoMensagens } from './Mensagens.service';\r\nimport { MensagemComponente } from './mensagem.componente';\r\n\r\n@Component({\r\n    selector: 'container-mensagens',\r\n    imports: [MensagemComponente],\r\n    template: `\r\n    <div class=\"message-wrapper\">\r\n        @for (Mensagem of Mensagens; track $index){\r\n            <mensagem\r\n                [mensagem]=\"Mensagem\"\r\n                (close)=\"close(Mensagem.id)\">\r\n            </mensagem>\r\n        }\r\n    </div>\r\n  `,\r\n    styles: [`\r\n    .message-wrapper {\r\n      position: fixed;\r\n      top: 20px;\r\n      right: 20px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 8px;\r\n      z-index: 1000;\r\n    }\r\n  `]\r\n})\r\nexport class MessageContainerComponent implements OnInit {\r\n    Mensagens: Mensagem[] = [];\r\n\r\n    constructor(private ServicoMensagens: ServicoMensagens) { }\r\n\r\n    ngOnInit() {\r\n        this.ServicoMensagens.mensagens$.subscribe(msgs => this.Mensagens = msgs);\r\n    }\r\n\r\n    close(id: number) {\r\n        this.ServicoMensagens.removerMensagem(id);\r\n    }\r\n}\r\n","import { Component, inject } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { ServicoAutenticacao } from './Services/Autenticacao.service';\r\nimport { MessageContainerComponent } from \"./Componentes/ServicoMensagens/container-mensagens\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  imports: [RouterOutlet, MessageContainerComponent],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent {\r\n  title = 'AutoBus';\r\n\r\n  ServicoAutenticacao = inject(ServicoAutenticacao)\r\n\r\n  constructor() {\r\n    this.ServicoAutenticacao.Autenticar()\r\n  }\r\n}\r\n","<!-- Aqui deve ser html global. \r\nPor exemplo, se quiseres um componente como uma topbar presente em todas as paginas sera aqui\r\nFora isso, nao e necessario mexer em nada neste ficheiro -->\r\n<div class=\"contentor-pagina\">\r\n    <router-outlet />\r\n</div>\r\n<container-mensagens></container-mensagens>","// Nao modificar. Ficheiro principal que executa a aplicacao\r\n\r\nimport { bootstrapApplication } from '@angular/platform-browser';\r\nimport { appConfig } from './app/app.config';\r\nimport { AppComponent } from './app/app.component';\r\n\r\nbootstrapApplication(AppComponent, appConfig)\r\n  .catch((err) => console.error(err));\r\n"],"mappings":"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kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,iBAAiB,EAChD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,iBAAiB,EAChD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,kBAAmBC,IAAK,kBAAkB,EACjD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,IAAK,mBAAoBC,IAAK,kBAAkB,EAClD,CAAED,I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","names":["require_FileSaver_min","__commonJSMin","exports","module","a","b","c","d","g","e","f","h","i","j","k","l","m","DOCUMENT","InjectionToken","_DOM","getDOM","setRootDomAdapter","adapter","DomAdapter","PlatformLocation","relativePosition","__ngFactoryType__","ɵɵdefineInjectable","inject","BrowserPlatformLocation","LOCATION_INITIALIZED","InjectionToken","DOCUMENT","fn","window","newPath","state","title","url","joinWithSlash","start","end","stripTrailingSlash","pathEndIdx","normalizeQueryParams","params","LocationStrategy","PathLocationStrategy","APP_BASE_HREF","_platformLocation","href","internal","includeHash","pathname","hash","queryParams","externalUrl","ɵɵinject","Location","Subject","locationStrategy","baseHref","_stripOrigin","_stripIndexHtml","ev","path","query","_stripBasePath","v","fnIndex","onNext","onThrow","onReturn","createLocation","basePath","strippedUrl","HashLocationStrategy","LocationStrategy","_platformLocation","_baseHref","fn","includeHash","path","internal","url","joinWithSlash","state","title","queryParams","normalizeQueryParams","relativePosition","__ngFactoryType__","ɵɵinject","PlatformLocation","APP_BASE_HREF","ɵɵdefineInjectable","CURRENCIES_EN","NumberFormatStyle","NumberSymbol","getLocaleNumberSymbol","locale","symbol","data","findLocaleData","res","LocaleDataIndex","NumberSymbol","getLocaleNumberFormat","type","getLocaleCurrencies","locale","findLocaleData","LocaleDataIndex","getCurrencySymbol","code","format","locale","currency","getLocaleCurrencies","CURRENCIES_EN","symbolNarrow","DEFAULT_NB_OF_CURRENCY_DIGITS","getNumberOfCurrencyDigits","digits","NUMBER_FORMAT_REGEXP","MAX_DIGITS","DECIMAL_SEP","ZERO_CHAR","PATTERN_SEP","GROUP_SEP","DIGIT_CHAR","CURRENCY_CHAR","formatNumberToLocaleString","value","pattern","locale","groupSymbol","decimalSymbol","digitsInfo","isPercent","formattedText","isZero","getLocaleNumberSymbol","NumberSymbol","parsedNumber","parseNumber","toPercent","minInt","minFraction","maxFraction","parts","NUMBER_FORMAT_REGEXP","minIntPart","minFractionPart","maxFractionPart","parseIntAutoRadix","roundNumber","digits","integerLen","exponent","decimals","d","groups","formatCurrency","currency","currencyCode","format","getLocaleNumberFormat","NumberFormatStyle","parseNumberFormat","getNumberOfCurrencyDigits","CURRENCY_CHAR","parseNumberFormat","format","minusSign","p","patternParts","PATTERN_SEP","positive","negative","positiveParts","DECIMAL_SEP","ZERO_CHAR","integer","fraction","DIGIT_CHAR","i","ch","groups","GROUP_SEP","trunkLen","pos","toPercent","parsedNumber","fractionLen","parseNumber","num","numStr","exponent","digits","integerLen","j","zeros","MAX_DIGITS","roundNumber","minFrac","maxFrac","fractionSize","roundAt","digit","k","dropTrailingZeros","minLen","carry","d","parseIntAutoRadix","text","result","NgTemplateOutlet","_viewContainerRef","changes","viewContainerRef","viewContext","_target","prop","newValue","receiver","__ngFactoryType__","ɵɵdirectiveInject","ViewContainerRef","ɵɵdefineDirective","ɵɵNgOnChangesFeature","invalidPipeArgumentError","type","value","RuntimeError","CurrencyPipe","_locale","_defaultCurrencyCode","value","currencyCode","display","digitsInfo","locale","isValue","currency","getCurrencySymbol","num","strToNumber","formatCurrency","error","invalidPipeArgumentError","__ngFactoryType__","ɵɵdirectiveInject","LOCALE_ID","DEFAULT_CURRENCY_CODE","ɵɵdefinePipe","parseCookieValue","cookieStr","name","cookie","eqIndex","cookieName","cookieValue","PLATFORM_BROWSER_ID","PLATFORM_SERVER_ID","isPlatformBrowser","platformId","isPlatformServer","XhrFactory","ViewportScroller","ɵɵdefineInjectable","BrowserViewportScroller","inject","DOCUMENT","document","window","offset","position","target","elSelected","findAnchorFromDocument","scrollRestoration","el","rect","left","top","documentResult","treeWalker","currentNode","shadowRoot","result","EVENT_MANAGER_PLUGINS","InjectionToken","EventManager","plugins","_zone","plugin","element","eventName","handler","options","RuntimeError","__ngFactoryType__","ɵɵinject","NgZone","ɵɵdefineInjectable","EventManagerPlugin","_doc","APP_ID_ATTRIBUTE_NAME","removeElements","elements","createStyleElement","style","doc","styleElement","addServerStyles","appId","inline","external","createLinkElement","url","linkElement","SharedStylesHost","nonce","platformId","isPlatformServer","styles","urls","value","usages","creator","record","host","hostNode","DOCUMENT","APP_ID","CSP_NONCE","PLATFORM_ID","NAMESPACE_URIS","COMPONENT_REGEX","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT","REMOVE_STYLES_ON_COMPONENT_DESTROY","InjectionToken","shimContentAttribute","componentShortId","COMPONENT_REGEX","shimHostAttribute","shimStylesContent","compId","styles","s","DomRendererFactory2","eventManager","sharedStylesHost","appId","removeStylesOnCompDestroy","doc","platformId","ngZone","nonce","tracingService","isPlatformServer","DefaultDomRenderer2","element","type","ViewEncapsulation","__spreadProps","__spreadValues","renderer","EmulatedEncapsulationDomRenderer2","NoneEncapsulationDomRenderer","rendererByCompId","platformIsServer","ShadowDomRenderer","componentId","__ngFactoryType__","ɵɵinject","EventManager","SharedStylesHost","APP_ID","REMOVE_STYLES_ON_COMPONENT_DESTROY","DOCUMENT","PLATFORM_ID","NgZone","CSP_NONCE","TracingService","ɵɵdefineInjectable","name","namespace","NAMESPACE_URIS","value","parent","newChild","isTemplateNode","refChild","_parent","oldChild","selectorOrNode","preserveContent","el","RuntimeError","node","namespaceUri","style","flags","RendererStyleFlags2","target","event","callback","options","getDOM","wrappedCallback","eventHandler","isTemplateNode","node","ShadowDomRenderer","DefaultDomRenderer2","eventManager","sharedStylesHost","hostEl","component","doc","ngZone","nonce","platformIsServer","tracingService","styles","shimStylesContent","style","styleEl","styleUrls","styleUrl","linkEl","createLinkElement","parent","newChild","refChild","_parent","oldChild","NoneEncapsulationDomRenderer","removeStylesOnCompDestroy","compId","EmulatedEncapsulationDomRenderer2","appId","shimContentAttribute","shimHostAttribute","element","name","el","BrowserDomAdapter","_BrowserDomAdapter","DomAdapter","setRootDomAdapter","el","evt","listener","options","node","tagName","doc","target","href","getBaseElementHref","relativePath","baseElement","name","parseCookieValue","url","BrowserXhr","__ngFactoryType__","ɵɵdefineInjectable","DomEventsPlugin","EventManagerPlugin","doc","eventName","element","handler","options","target","callback","ɵɵinject","DOCUMENT","MODIFIER_KEYS","_keyMap","MODIFIER_KEY_GETTERS","event","KeyEventsPlugin","parsedEvent","outsideHandler","getDOM","parts","domEventName","key","fullKey","codeIX","modifierName","index","result","fullKeyCode","keycode","modifierGetter","zone","keyName","bootstrapApplication","rootComponent","internalCreateApplication","__spreadValues","createProvidersConfig","createProvidersConfig","options","BROWSER_MODULE_PROVIDERS","INTERNAL_BROWSER_PLATFORM_PROVIDERS","initDomAdapter","BrowserDomAdapter","errorHandler","ErrorHandler","_document","setDocument","INTERNAL_BROWSER_PLATFORM_PROVIDERS","PLATFORM_ID","PLATFORM_BROWSER_ID","PLATFORM_INITIALIZER","DOCUMENT","BROWSER_MODULE_PROVIDERS","INJECTOR_SCOPE","ErrorHandler","errorHandler","EVENT_MANAGER_PLUGINS","DomEventsPlugin","DOCUMENT","KeyEventsPlugin","DomRendererFactory2","SharedStylesHost","EventManager","RendererFactory2","XhrFactory","BrowserXhr","Title","_doc","newTitle","__ngFactoryType__","ɵɵinject","DOCUMENT","ɵɵdefineInjectable","PRIMARY_OUTLET","RouteTitleKey","ParamsAsMap","params","name","v","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","route","parts","posParams","index","part","segment","shallowEqualArrays","a","b","i","shallowEqual","k1","getDataKeys","k2","key","equalArraysOrString","obj","aSorted","bSorted","val","last","wrapIntoObservable","value","isObservable","isPromise","from","of","pathCompareMap","equalSegmentGroups","containsSegmentGroup","paramCompareMap","equalParams","containsParams","containsTree","container","containee","options","matrixParams","equalPath","matrixParamsMatch","c","containsSegmentGroupHelper","containeePaths","current","next","containerPaths","containeeSegment","UrlTree","root","UrlSegmentGroup","queryParams","fragment","DEFAULT_SERIALIZER","children","serializePaths","UrlSegment","path","parameters","serializePath","equalSegments","as","bs","mapChildrenIntoArray","fn","res","childOutlet","child","UrlSerializer","__ngFactoryType__","ɵɵdefineInjectable","DefaultUrlSerializer","url","p","UrlParser","tree","serializeSegment","query","serializeQueryParams","encodeUriFragment","primary","k","encodeUriString","s","encodeUriQuery","encodeUriSegment","decode","decodeQuery","serializeMatrixParams","strParams","SEGMENT_RE","matchSegments","str","match","MATRIX_PARAM_SEGMENT_RE","matchMatrixKeySegments","QUERY_PARAM_RE","matchQueryParams","QUERY_PARAM_VALUE_RE","matchUrlQueryParamValue","RuntimeError","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","outletName","createRoot","rootCandidate","squashSegmentGroup","newChildren","childCandidate","grandChildOutlet","grandChild","mergeTrivialChildren","isUrlTree","createUrlTreeFromSnapshot","relativeTo","commands","relativeToUrlSegmentGroup","createSegmentGroupFromRoute","createUrlTreeFromSegmentGroup","targetGroup","createSegmentGroupFromRouteRecursive","currentRoute","childOutlets","childSnapshot","rootSegmentGroup","nav","computeNavigation","position","findStartingPositionForTargetGroup","newSegmentGroup","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","isCommandWithOutlets","oldRoot","oldSegmentGroup","qp","replaceSegment","newRoot","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","cmdWithOutlet","cmd","cmdIdx","outlets","urlPart","partIndex","Position","processChildren","target","modifier","createPositionApplyingDoubleDots","group","g","ci","dd","getOutlets","startIndex","m","prefixedWith","slicedCommands","createNewSegmentGroup","childrenOfEmptyChild","outlet","currentCommandIndex","currentPathIndex","noMatch","curr","compare","paths","createNewSegmentChildren","stringify","IMPERATIVE_NAVIGATION","EventType","RouterEvent","id","NavigationStart","navigationTrigger","restoredState","NavigationEnd","urlAfterRedirects","NavigationCancellationCode","NavigationSkippedCode","NavigationCancel","reason","code","NavigationSkipped","NavigationError","error","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","RouteConfigLoadEnd","ChildActivationStart","snapshot","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","anchor","pos","BeforeActivateRoutes","RedirectRequest","navigationBehaviorOptions","getOrCreateRouteInjectorIfNeeded","route","currentInjector","createEnvironmentInjector","getOutlet","route","PRIMARY_OUTLET","sortByMatchingOutlets","routes","outletName","sortedConfig","r","getClosestRouteInjector","snapshot","s","OutletContext","rootInjector","ChildrenOutletContexts","childName","outlet","context","contexts","__ngFactoryType__","ɵɵinject","EnvironmentInjector","ɵɵdefineInjectable","Tree","root","t","p","n","findNode","findPath","c","cc","value","node","child","path","TreeNode","children","nodeChildrenAsMap","map","RouterState","setRouterState","createEmptyState","rootComponent","createEmptyStateSnapshot","emptyUrl","BehaviorSubject","UrlSegment","emptyParams","emptyData","emptyQueryParams","fragment","activated","ActivatedRoute","ActivatedRouteSnapshot","RouterStateSnapshot","urlSubject","paramsSubject","queryParamsSubject","fragmentSubject","dataSubject","component","futureSnapshot","d","RouteTitleKey","of","convertToParamMap","getInherited","parent","paramsInheritanceStrategy","inherited","routeConfig","__spreadValues","hasStaticTitle","url","params","queryParams","data","resolve","segment","matched","serializeNode","state","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqual","shallowEqualArrays","equalParamsAndUrlSegments","a","b","equalUrlParams","equalSegments","parentsMismatch","config","ROUTER_OUTLET_DATA","InjectionToken","RouterOutlet","EventEmitter","input","inject","ViewContainerRef","ChangeDetectorRef","INPUT_BINDER","changes","firstChange","previousValue","RuntimeError","cmp","ref","activatedRoute","environmentInjector","location","childContexts","injector","OutletInjector","ɵɵdefineDirective","ɵɵNgOnChangesFeature","outletData","token","notFoundValue","RoutedComponentInputBinder","dataSubscription","combineLatest","switchMap","index","mirror","reflectComponentType","templateName","createRouterState","routeReuseStrategy","curr","prevState","createNode","createOrReuseChildren","detachedRouteHandle","tree","createActivatedRoute","RedirectCommand","redirectTo","navigationBehaviorOptions","NAVIGATION_CANCELING_ERROR","redirectingNavigationError","urlSerializer","redirect","isUrlTree","error","navigationCancelingError","NavigationCancellationCode","message","code","isRedirectingNavigationCancelingError","isNavigationCancelingError","activateRoutes","rootContexts","routeReuseStrategy","forwardEvent","inputBindingEnabled","map","t","ActivateRoutes","futureState","currState","parentContexts","futureRoot","currRoot","advanceActivatedRoute","futureNode","currNode","contexts","children","nodeChildrenAsMap","futureChild","childOutletName","v","parentContext","future","curr","context","route","treeNode","componentRef","c","ActivationEnd","ChildActivationEnd","stored","CanActivate","path","CanDeactivate","component","getAllRouteGuards","getChildRouteGuards","getCanActivateChild","p","canActivateChild","getTokenOrFunctionIdentity","tokenOrFunction","injector","NOT_FOUND","result","isInjectable","futurePath","checks","prevChildren","getRouteGuards","k","deactivateRouteAndItsChildren","shouldRun","shouldRunGuardsAndResolvers","mode","equalPath","shallowEqual","equalParamsAndUrlSegments","childName","node","isFunction","isBoolean","isCanLoad","guard","isCanActivate","isCanActivateChild","isCanDeactivate","isCanMatch","isEmptyError","e","EmptyError","INITIAL_VALUE","prioritizedGuardValue","switchMap","obs","combineLatest","o","take","startWith","results","isRedirect","filter","item","val","isUrlTree","RedirectCommand","checkGuards","mergeMap","targetSnapshot","currentSnapshot","canActivateChecks","canDeactivateChecks","of","__spreadProps","__spreadValues","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","guardsResult","futureRSS","currRSS","from","check","runCanDeactivate","first","futureSnapshot","concatMap","concat","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","snapshot","ActivationStart","ChildActivationStart","futureARS","canActivate","canActivateObservables","defer","closestInjector","getClosestRouteInjector","guardVal","runInInjectionContext","wrapIntoObservable","canActivateChildGuardsMapped","_","d","guardsMapped","currARS","canDeactivateObservables","runCanLoadGuards","segments","urlSerializer","canLoad","canLoadObservables","injectionToken","redirectIfUrlTree","pipe","tap","redirectingNavigationError","runCanMatchGuards","canMatch","canMatchObservables","NoMatch","segmentGroup","AbsoluteRedirect","urlTree","noMatch$1","throwError","namedOutletsRedirect","redirectTo","RuntimeError","canLoadFails","navigationCancelingError","NavigationCancellationCode","ApplyRedirects","res","PRIMARY_OUTLET","posParams","redirectToFn","queryParams","fragment","routeConfig","url","outlet","params","data","title","newRedirect","UrlTree","newTree","newRoot","redirectToParams","actualParams","sourceName","group","updatedSegments","name","child","UrlSegmentGroup","redirectToSegments","actualSegments","s","redirectToUrlSegment","pos","idx","noMatch","matchWithChecks","match","getOrCreateRouteInjectorIfNeeded","createWildcardMatchResult","defaultUrlMatcher","parameters","last","split","consumedSegments","slicedSegments","config","containsEmptyPathMatchesWithNamedOutlets","createChildrenForEmptyPaths","containsEmptyPathMatches","addEmptyPathsToChildrenIfNeeded","routes","r","emptyPathMatch","getOutlet","primarySegment","noLeftoversInUrl","NoLeftoversInUrl","recognize$1","configLoader","rootComponentType","paramsInheritanceStrategy","Recognizer","MAX_ALLOWED_REDIRECTS","rootSegmentGroup","rootSnapshot","rootNode","TreeNode","routeState","RouterStateSnapshot","tree","createUrlTreeFromSnapshot","ActivatedRouteSnapshot","catchError","parentRoute","childOutlets","childOutlet","sortedConfig","sortByMatchingOutlets","scan","outletChildren","defaultIfEmpty","mergedChildren","mergeEmptyPathMatches","sortActivatedRouteSnapshots","allowRedirects","x","rawSegment","matched","positionalParamSegments","remainingSegments","getData","getResolve","inherited","getInherited","newSegments","matchResult","childConfig","childInjector","matchedOnOutlet","shouldLoadResult","cfg","nodes","a","b","hasEmptyPathConfig","mergedNodes","duplicateEmptyPathNode","resultNode","mergedNode","getData","route","getResolve","recognize","injector","configLoader","rootComponentType","config","serializer","paramsInheritanceStrategy","mergeMap","t","recognize$1","map","targetSnapshot","urlAfterRedirects","__spreadProps","__spreadValues","resolveData","canActivateChecks","of","routesWithResolversToRun","check","routesNeedingDataUpdates","newRoute","flattenRouteTree","routesProcessed","from","concatMap","runResolve","getInherited","tap","takeLast","_","EMPTY","descendants","child","futureARS","futureRSS","resolve","hasStaticTitle","RouteTitleKey","resolveNode","resolvedData","keys","getDataKeys","data","key","getResolver","first","value","RedirectCommand","redirectingNavigationError","DefaultUrlSerializer","catchError","e","isEmptyError","throwError","injectionToken","closestInjector","getClosestRouteInjector","resolver","getTokenOrFunctionIdentity","resolverValue","runInInjectionContext","wrapIntoObservable","switchTap","next","switchMap","v","nextResult","TitleStrategy","snapshot","pageTitle","PRIMARY_OUTLET","__ngFactoryType__","ɵɵdefineInjectable","inject","DefaultTitleStrategy","title","ɵɵinject","Title","ROUTER_CONFIGURATION","InjectionToken","ɵEmptyOutletComponent","ɵɵdefineComponent","rf","ctx","ɵɵelement","RouterOutlet","standardizeConfig","r","children","c","ROUTES","RouterConfigLoader","Compiler","loadRunner","maybeUnwrapDefaultExport","component","finalize","loader","ConnectableObservable","Subject","refCount","parentInjector","loadChildren","compiler","onLoadEndListener","NgModuleFactory$1","factoryOrRoutes","rawRoutes","requireStandaloneComponents","isWrappedDefaultExport","input","UrlHandlingStrategy","DefaultUrlHandlingStrategy","url","newUrlPart","wholeUrl","CREATE_VIEW_TRANSITION","VIEW_TRANSITION_OPTIONS","createViewTransition","to","transitionOptions","document","DOCUMENT","NgZone","resolveViewTransitionStarted","viewTransitionStarted","transition","createRenderPromise","onViewTransitionCreated","afterNextRender","NAVIGATION_ERROR_HANDLER","NavigationTransitions","EnvironmentInjector","DestroyRef","UrlSerializer","ChildrenOutletContexts","Location","INPUT_BINDER","onLoadStart","RouteConfigLoadStart","onLoadEnd","RouteConfigLoadEnd","request","id","router","BehaviorSubject","filter","overallTransitionState","completed","errored","NavigationCancellationCode","urlTransition","onSameUrlNavigation","reason","NavigationSkipped","NavigationSkippedCode","NavigationStart","routesRecognized","RoutesRecognized","extractedUrl","source","restoredState","extras","navStart","createEmptyState","guardsStart","GuardsCheckStart","getAllRouteGuards","checkGuards","evt","guardsEnd","GuardsCheckEnd","resolveStart","ResolveStart","dataResolved","resolveEnd","ResolveEnd","loadComponents","loaders","loadedComponent","combineLatest","defaultIfEmpty","take","currentSnapshot","targetRouterState","createRouterState","BeforeActivateRoutes","activateRoutes","NavigationEnd","takeUntil","err","isNavigationCancelingError","NavigationCancel","isRedirectingNavigationCancelingError","RedirectRequest","navigationError","NavigationError","navigationErrorHandlerResult","message","cancellationCode","ee","code","navCancel","currentBrowserUrl","targetBrowserUrl","isBrowserTriggeredNavigation","IMPERATIVE_NAVIGATION","RouteReuseStrategy","DefaultRouteReuseStrategy","BaseRouteReuseStrategy","detachedTree","future","curr","ɵDefaultRouteReuseStrategy_BaseFactory","ɵɵgetInheritedFactory","StateManager","UrlTree","finalUrl","initialUrl","rawUrl","HistoryStateManager","listener","event","currentTransition","path","replaceUrl","state","currentBrowserPageId","newState","navigation","restoringFromCaughtError","targetPagePosition","navigationId","routerPageId","ɵHistoryStateManager_BaseFactory","afterNextNavigation","action","result","exactMatchOptions","subsetMatchOptions","Router","Console","PendingTasksInternal","Subscription","subscription","currentNavigation","opts","mergedTree","isPublicRouterEvent","stateCopy","urlTree","commands","navigationExtras","relativeTo","queryParams","fragment","queryParamsHandling","preserveFragment","f","q","relativeToUrlSegmentGroup","relativeToSnapshot","createSegmentGroupFromRoute","createUrlTreeFromSegmentGroup","isUrlTree","validateCommands","matchOptions","options","containsTree","params","priorPromise","reject","promise","res","rej","taskId","RuntimeError","RouterLink","Subject","router","route","tabIndexAttribute","renderer","el","locationStrategy","tagName","s","NavigationEnd","newTabIndex","changes","commandsOrUrlTree","isUrlTree","button","ctrlKey","shiftKey","altKey","metaKey","urlTree","extras","sanitizedValue","ɵɵsanitizeUrlOrResourceUrl","attrName","attrValue","nativeElement","__ngFactoryType__","ɵɵdirectiveInject","Router","ActivatedRoute","ɵɵinjectAttribute","Renderer2","ElementRef","LocationStrategy","ɵɵdefineDirective","rf","ctx","ɵɵlistener","$event","ɵɵattribute","booleanAttribute","ɵɵNgOnChangesFeature","PreloadingStrategy","RouterPreloader","router","compiler","injector","preloadingStrategy","loader","filter","NavigationEnd","concatMap","routes","res","route","createEnvironmentInjector","injectorForCurrentRoute","injectorForChildren","from","mergeAll","loadedChildren$","of","recursiveLoadChildren$","mergeMap","config","loadComponent$","__ngFactoryType__","ɵɵinject","Router","Compiler","EnvironmentInjector","PreloadingStrategy","RouterConfigLoader","ɵɵdefineInjectable","ROUTER_SCROLLER","InjectionToken","RouterScroller","urlSerializer","transitions","viewportScroller","zone","options","NavigationStart","NavigationSkipped","NavigationSkippedCode","Scroll","routerEvent","anchor","ɵɵinvalidFactory","provideRouter","features","makeEnvironmentProviders","ROUTES","ActivatedRoute","rootRoute","APP_BOOTSTRAP_LISTENER","getBootstrapListener","feature","routerFeature","kind","providers","getBootstrapListener","injector","inject","Injector","bootstrappedComponentRef","ref","ApplicationRef","router","Router","bootstrapDone","BOOTSTRAP_DONE","INITIAL_NAVIGATION","ROUTER_PRELOADER","InjectFlags","ROUTER_SCROLLER","InjectionToken","Subject","withEnabledBlockingInitialNavigation","providers","provideAppInitializer","LOCATION_INITIALIZED","resolve","afterNextNavigation","NavigationTransitions","of","routerFeature","withDisabledInitialNavigation","ROUTER_PRELOADER","InjectionToken","withPreloading","preloadingStrategy","routerFeature","RouterPreloader","PreloadingStrategy","withComponentInputBinding","routerFeature","RoutedComponentInputBinder","INPUT_BINDER","withViewTransitions","options","performanceMarkFeature","providers","CREATE_VIEW_TRANSITION","createViewTransition","VIEW_TRANSITION_OPTIONS","__spreadValues","ROUTER_PROVIDERS","Location","UrlSerializer","DefaultUrlSerializer","Router","ChildrenOutletContexts","ActivatedRoute","rootRoute","RouterConfigLoader","RouterModule","routes","config","ROUTES","NAVIGATION_ERROR_HANDLER","ROUTER_CONFIGURATION","provideHashLocationStrategy","providePathLocationStrategy","provideRouterScroller","withPreloading","provideInitialNavigation","withComponentInputBinding","withViewTransitions","provideRouterInitializer","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ROUTER_SCROLLER","viewportScroller","inject","ViewportScroller","zone","NgZone","transitions","NavigationTransitions","urlSerializer","RouterScroller","LocationStrategy","HashLocationStrategy","PathLocationStrategy","provideInitialNavigation","config","withDisabledInitialNavigation","withEnabledBlockingInitialNavigation","ROUTER_INITIALIZER","InjectionToken","provideRouterInitializer","getBootstrapListener","APP_BOOTSTRAP_LISTENER","ServicoMensagens","mensagensSubject","BehaviorSubject","mensagens$","asObservable","contador","erro","texto","adicionarMensagem","sucesso","info","aviso","tipo","mensagem","id","atual","value","next","setTimeout","removerMensagem","filter","msg","factory","ɵfac","providedIn","HttpService","DefaultHeaders","ServicoMensagens","inject","Request","RequestURL","Method","ErrorSuffix","Data","__async","Promise","resolve","reject","RequestHeaders","URL","key","value","Object","entries","searchParams","append","String","undefined","FormDataBody","FormData","EncodedBody","URLSearchParams","JSON","stringify","fetch","headers","method","credentials","body","then","Response","ContentType","get","Result","includes","json","text","blob","ok","MensagemErro","statusText","console","error","erro","catch","Error","Wait","seconds","setTimeout","factory","ɵfac","providedIn","Definicoes","API_URL","window","location","href","includes","ServicoAutenticacao","router","inject","Router","HttpService","Utilizador","signal","undefined","Admin","Autenticar","__async","AuthURL","URL","Definicoes","API_URL","RespostaLogin","Request","set","tipo_utilizador","factory","ɵfac","providedIn","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","Footer_Conditional_2_Conditional_0_Template","Footer_Conditional_2_Conditional_1_Template","ɵɵconditional","ctx_r0","Caminho","includes","Footer","router","inject","Router","ServicoAutenticacao","url","selectors","decls","vars","consts","template","rf","ctx","Footer_Conditional_2_Template","ɵɵadvance","RouterModule","RouterLink","styles","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","JanelaAtiva","ɵɵtext","ɵɵelementEnd","PaginaDefinicoes","ServicoAutenticacao","inject","Utilizador","selectors","decls","vars","consts","template","rf","ctx","ɵɵtemplate","PaginaDefinicoes_Conditional_6_Template","ɵɵelement","ɵɵadvance","ɵɵconditional","Admin","RouterModule","RouterOutlet","RouterLink","Footer","styles","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","Carregamento","Visivel","selectors","inputs","decls","vars","consts","template","rf","ctx","ɵɵtemplate","Carregamento_Conditional_0_Template","ɵɵconditional","RouterModule","styles","BaseControlValueAccessor","_","_renderer","_elementRef","key","value","fn","isDisabled","__ngFactoryType__","ɵɵdirectiveInject","Renderer2","ElementRef","ɵɵdefineDirective","BuiltInControlValueAccessor","ɵBuiltInControlValueAccessor_BaseFactory","ɵɵgetInheritedFactory","ɵɵInheritDefinitionFeature","NG_VALUE_ACCESSOR","InjectionToken","CHECKBOX_VALUE_ACCESSOR","forwardRef","CheckboxControlValueAccessor","ɵCheckboxControlValueAccessor_BaseFactory","rf","ctx","ɵɵlistener","$event","ɵɵProvidersFeature","DEFAULT_VALUE_ACCESSOR","DefaultValueAccessor","_isAndroid","userAgent","getDOM","COMPOSITION_BUFFER_MODE","renderer","elementRef","_compositionMode","normalizedValue","isEmptyInputValue","lengthOrSize","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","Validators","min","minValidator","max","maxValidator","control","requiredValidator","requiredTrueValidator","emailValidator","minLength","minLengthValidator","maxLength","maxLengthValidator","pattern","patternValidator","nullValidator","validators","compose","composeAsync","length","regex","regexStr","isPresent","o","toObservable","isPromise","from","mergeErrors","arrayOfErrors","res","errors","__spreadValues","executeValidators","validator","isValidatorFn","normalizeValidators","c","presentValidators","composeValidators","observables","forkJoin","map","composeAsyncValidators","mergeValidators","controlValidators","dirValidator","getControlValidators","getControlAsyncValidators","makeValidatorsArray","hasValidator","addValidators","currentValidators","current","v","removeValidators","AbstractControlDirective","errorCode","path","ControlContainer","NgControl","AbstractControlStatus","cd","ngControlStatusHost","ngGroupStatusHost","__spreadProps","NgControlStatus","ɵɵclassProp","NgControlStatusGroup","VALID","INVALID","PENDING","DISABLED","ControlEvent","ValueChangeEvent","value","source","PristineChangeEvent","pristine","TouchedChangeEvent","touched","StatusChangeEvent","status","FormSubmittedEvent","FormResetEvent","pickValidators","validatorOrOpts","isOptionsObj","coerceToValidator","validator","composeValidators","pickAsyncValidators","asyncValidator","coerceToAsyncValidator","composeAsyncValidators","assertControlPresent","parent","isGroup","key","controls","RuntimeError","assertAllValuesPresent","control","_","AbstractControl","validators","asyncValidators","validatorFn","asyncValidatorFn","untracked","v","computed","signal","Subject","addValidators","removeValidators","hasValidator","opts","changed","sourceControl","__spreadProps","__spreadValues","skipPristineCheck","changeFn","shouldHaveEmitted","ctrl","emitEvent","obs","toObservable","errors","path","currPath","name","errorCode","x","changedControl","EventEmitter","newPristine","fn","onlySelf","parentDirty","FormGroup","options","controlName","acc","subtreeUpdated","updated","child","cb","condition","initValue","res","CALL_SET_DISABLED_STATE","InjectionToken","setDisabledStateDefault","controlPath","name","parent","setUpControl","control","dir","callSetDisabledState","setUpValidators","setUpViewChangePipeline","setUpModelChangePipeline","setUpBlurPipeline","setUpDisabledChangeHandler","cleanUpControl","validateControlPresenceOnChange","noop","cleanUpValidators","registerOnValidatorChange","validators","onChange","validator","onDisabledChange","isDisabled","getControlValidators","mergeValidators","asyncValidators","getControlAsyncValidators","onValidatorChange","isControlUpdated","updatedValidators","updatedAsyncValidators","asyncValidator","newValue","updateControl","emitModelEvent","setUpFormContainer","cleanUpFormContainer","isPropertyUpdated","changes","viewModel","change","isBuiltInAccessor","valueAccessor","BuiltInControlValueAccessor","syncPendingControls","form","directives","dir","control","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","v","DefaultValueAccessor","removeListItem$1","list","el","index","removeListItem","list","el","index","isFormControlState","formState","FormControl","AbstractControl","validatorOrOpts","asyncValidator","pickValidators","pickAsyncValidators","isOptionsObj","value","options","changeFn","condition","fn","cb","isFormControl","control","FormControl","ɵNgNoValidate","__ngFactoryType__","ɵɵdefineDirective","RADIO_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","RadioControlValueAccessor","RadioControlRegistry","control","accessor","i","c","controlPair","__ngFactoryType__","ɵɵdefineInjectable","RadioControlValueAccessor","BuiltInControlValueAccessor","inject","CALL_SET_DISABLED_STATE","setDisabledStateDefault","renderer","elementRef","_registry","_injector","NgControl","value","fn","isDisabled","ɵɵdirectiveInject","Renderer2","ElementRef","Injector","ɵɵdefineDirective","rf","ctx","ɵɵlistener","ɵɵProvidersFeature","RADIO_VALUE_ACCESSOR","ɵɵInheritDefinitionFeature","NG_MODEL_WITH_FORM_CONTROL_WARNING","InjectionToken","formDirectiveProvider","ControlContainer","forwardRef","FormGroupDirective","untracked","value","computed","signal","EventEmitter","validators","asyncValidators","callSetDisabledState","changes","cleanUpValidators","dir","ctrl","setUpControl","cleanUpControl","removeListItem$1","$event","syncPendingControls","FormSubmittedEvent","FormResetEvent","oldCtrl","newCtrl","isFormControl","setUpFormContainer","cleanUpFormContainer","setUpValidators","__ngFactoryType__","ɵɵdirectiveInject","NG_VALIDATORS","NG_ASYNC_VALIDATORS","CALL_SET_DISABLED_STATE","ɵɵdefineDirective","rf","ctx","ɵɵlistener","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","controlNameBinding","NgControl","forwardRef","FormControlName","isDisabled","EventEmitter","parent","validators","asyncValidators","valueAccessors","_ngModelWarningConfig","selectValueAccessor","changes","isPropertyUpdated","newValue","controlPath","__ngFactoryType__","ɵɵdirectiveInject","ControlContainer","NG_VALIDATORS","NG_ASYNC_VALIDATORS","NG_VALUE_ACCESSOR","NG_MODEL_WITH_FORM_CONTROL_WARNING","ɵɵdefineDirective","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","SELECT_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","SelectControlValueAccessor","_buildValueString$1","id","value","_extractId$1","valueString","BuiltInControlValueAccessor","fn","ɵSelectControlValueAccessor_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","rf","ctx","ɵɵlistener","$event","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","NgSelectOption","_element","_renderer","_select","ɵɵdirectiveInject","ElementRef","Renderer2","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","_buildValueString","_extractId","optionSelectedStateSetter","ids","v","opt","o","element","selected","selectedOptions","options","i","val","ɵSelectMultipleControlValueAccessor_BaseFactory","ɵNgSelectMultipleOption","toInteger","AbstractValidatorDirective","nullValidator","changes","input","control","fn","__ngFactoryType__","ɵɵdefineDirective","ɵɵNgOnChangesFeature","REQUIRED_VALIDATOR","NG_VALIDATORS","forwardRef","RequiredValidator","RequiredValidator","AbstractValidatorDirective","booleanAttribute","input","requiredValidator","ɵRequiredValidator_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","rf","ctx","ɵɵattribute","ɵɵProvidersFeature","REQUIRED_VALIDATOR","ɵɵInheritDefinitionFeature","MIN_LENGTH_VALIDATOR","NG_VALIDATORS","forwardRef","MinLengthValidator","AbstractValidatorDirective","input","toInteger","minlength","minLengthValidator","ɵMinLengthValidator_BaseFactory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵɵdefineDirective","rf","ctx","ɵɵattribute","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","MAX_LENGTH_VALIDATOR","MaxLengthValidator","maxlength","maxLengthValidator","ɵMaxLengthValidator_BaseFactory","PATTERN_VALIDATOR","PatternValidator","patternValidator","ɵPatternValidator_BaseFactory","ɵInternalFormsSharedModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","FormsModule","opts","CALL_SET_DISABLED_STATE","setDisabledStateDefault","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","ɵInternalFormsSharedModule","ReactiveFormsModule","NG_MODEL_WITH_FORM_CONTROL_WARNING","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","Logout","_r3","Login","ModalLoginVisivel","ɵɵadvance","ɵɵproperty","FormLogin","invalid","Topbar","DropdownVisivel","CarregamentoVisivel","ServicoHttp","inject","HttpService","ServicoAutenticacao","Utilizador","Router","URL_Imagens","Definicoes","API_URL","__async","ValoresForm","value","URLLogin","URL","Request","email","password","window","location","reload","URLLogout","navigate","FormGroup","FormControl","Validators","required","selectors","decls","vars","consts","template","rf","ctx","ɵɵtemplate","Topbar_Conditional_4_Template","Topbar_Conditional_12_Template","Topbar_Conditional_20_Template","ɵɵconditional","ɵɵsanitizeUrl","ɵɵtextInterpolate1","tmp_3_0","nome","RouterModule","RouterLink","Carregamento","FormsModule","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","ReactiveFormsModule","FormGroupDirective","FormControlName","styles","ɵɵelementContainer","ɵɵtemplate","FormPesquisaViagens_Conditional_13_ng_container_0_Template","ɵɵproperty","ButaoProcurar_r2","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","FormPesquisaViagens_Conditional_57_ng_container_0_Template","ɵɵstyleMap","ctx_r2","PaginaViagens","FormPesquisa","invalid","FormPesquisaViagens","Definicoes","router","inject","Router","ActiveRoute","ActivatedRoute","PaginaAtiva","url","includes","pag_vig","Ida","Volta","FormGroup","local_partida","FormControl","Validators","required","local_chegada","hora_ida","hora_volta","data_ida","data_volta","passageiros","tipo_viagem","RedirecionarPesquisa","navigate","queryParams","value","then","window","location","reload","ngOnInit","document","documentElement","style","setProperty","subscribe","params","setValue","selectors","hostVars","hostBindings","rf","ctx","ɵɵclassProp","ɵɵlistener","i0","ɵɵrestoreView","_r1","ɵɵresetView","FormPesquisaViagens_Conditional_13_Template","FormPesquisaViagens_Conditional_37_Template","FormPesquisaViagens_Conditional_38_Template","FormPesquisaViagens_Conditional_44_Template","FormPesquisaViagens_Conditional_46_Template","FormPesquisaViagens_Conditional_47_Template","FormPesquisaViagens_Conditional_53_Template","FormPesquisaViagens_Conditional_55_Template","FormPesquisaViagens_Conditional_56_Template","FormPesquisaViagens_Conditional_57_Template","FormPesquisaViagens_ng_template_58_Template","ɵɵtemplateRefExtractor","ɵɵadvance","ɵɵconditional","RouterModule","FormsModule","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","RadioControlValueAccessor","NgControlStatus","NgControlStatusGroup","ReactiveFormsModule","FormGroupDirective","FormControlName","NgTemplateOutlet","styles","ButaoVoltar","Visible","onWindowScroll","TamanhoJanela","window","innerHeight","PixeisParaMostrar","document","documentElement","scrollHeight","PosicaoScroll","scrollY","scrollTop","VoltarAoTopo","scrollTo","top","behavior","selectors","hostBindings","rf","ctx","ɵɵlistener","ɵɵresolveWindow","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵclassMap","ɵɵpureFunction1","_c0","RouterModule","styles","PaginaInicial","selectors","decls","vars","consts","template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","Footer","Topbar","FormsModule","ReactiveFormsModule","FormPesquisaViagens","ButaoVoltar","styles","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","IdaSelecionada","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ViagensIda","length","ViagensVolta","ɵɵelement","Viagem_r4","_r3","$implicit","abrirDetalhes","adicionarCarrinho","ɵɵtextInterpolate2","local_partida","local_chegada","ɵɵtextInterpolate","ɵɵpipeBind2","preco","hora_partida","_r5","ModalAdicionarBilhete","_r6","ModalVerDetalhes","ViagemSelecionada","data","PaginaViagens","route","inject","ActivatedRoute","ServicoHttp","HttpService","viagem","ngOnInit","__async","queryParams","snapshot","URL_Pedido","URL","Definicoes","API_URL","searchParams","append","Resultado","Request","tipo","Date","toISOString","split","Resposta","id_ponto_partida","id_ponto_chegada","success","status","console","error","erro","selectors","decls","vars","consts","template","rf","ctx","ɵɵtemplate","PaginaViagens_Conditional_6_Template","ɵɵdeclareLet","ɵɵrepeaterCreate","PaginaViagens_For_9_Template","ɵɵrepeaterTrackByIndex","PaginaViagens_Conditional_12_Template","PaginaViagens_Conditional_13_Template","ɵɵconditional","ɵɵrepeater","Viagens_r7","Topbar","FormPesquisaViagens","ButaoVoltar","CurrencyPipe","Carregamento","styles","Validadores","SenhaForte","Input","valor","value","erros","test","length","Object","keys","ConfirmacaoPassword","Form","parent","InputPassword","get","InputConfirmacaoPassword","error","PasswordNaoIgual","setErrors","console","warn","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","SelecionarImagem","ɵɵelementEnd","ɵɵproperty","Imagem_r3","ɵɵsanitizeUrl","SeletorImagens","close","EventEmitter","imagemSelecionada","Event","url","target","src","URLParaFicheiro","then","file","emit","filename","fetch","res","blob","File","type","imagensPerfil","onFechar","selectors","outputs","decls","vars","consts","template","rf","ctx","ɵɵtext","ɵɵelement","ɵɵrepeaterCreate","SeletorImagens_For_10_Template","ɵɵrepeaterTrackByIndex","ɵɵadvance","ɵɵrepeater","RouterModule","styles","ModalVerificacao","Aberto","AbertoChange","EventEmitter","MudarAberto","Estado","emit","display","submetido","router","inject","Router","ServicoAutenticacao","ServicoHttp","HttpService","Caminho","url","ReenviarCodigo","__async","FormVerificacao","FormGroup","codigo","FormControl","Validators","required","minLength","maxLength","permitirApenasNumeros","event","tecla","key","test","preventDefault","SubmeterModal","invalid","value","selectors","hostVars","hostBindings","rf","ctx","ɵɵstyleProp","ɵɵelementStart","ɵɵlistener","ɵɵtext","ɵɵelementEnd","ɵɵelement","$event","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","tmp_1_0","Utilizador","email","RouterModule","FormsModule","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MaxLengthValidator","ReactiveFormsModule","FormGroupDirective","FormControlName","styles","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r1","password","hasError","ɵɵlistener","$event","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","permitirApenasLetras","permitirApenasNumeros","ɵɵtemplate","PaginaCriarConta_Conditional_1_Conditional_19_Template","MostarPassword","PaginaCriarConta_Conditional_1_Conditional_53_Template","MostarConfirmacaoPassword","PaginaCriarConta_Conditional_1_Conditional_69_Template","Avancar","PaginaCriarConta_Conditional_1_Conditional_82_Template","FormCriar","ɵɵconditional","nif","invalid","value","ɵɵsanitizeUrl","telefone","confirm_password","Avancando","_r3","EnviarCodigo","MostrarFotoCriarConta","ImagemMudada","SelecionarImagens","ModalCodigo","FormFoto","ImagemSelecionada","ACriarConta","_r4","PreverImagem","PaginaCriarConta","ServicoHttp","inject","HttpService","ServicoMensagens","router","Router","ngOnInit","console","log","URL_Imagens","Definicoes","API_URL","AMandarEmail","__async","Request","email","CriarConta","Codigo","__spreadProps","__spreadValues","codigo_confirmacao","FicheiroSelecionado","Data","FormData","append","SucessoImagem","sucesso","navigate","enable","ValoresForm","existe","erro","Ficheiro","reader","FileReader","onload","result","readAsDataURL","Event","Input","target","files","FormGroup","foto","FormControl","Validators","required","nome","pattern","Validadores","SenhaForte","ConfirmacaoPassword","nascimento","localidade","get","event","input","replace","tecla","key","test","preventDefault","preencherFormComValoresAleatorios","randomNif","prefixos","Math","floor","random","length","toString","i","randomTelemovel","tel","randomEmail","dominios","dominio","substring","setValue","selectors","decls","vars","consts","template","rf","ctx","PaginaCriarConta_Conditional_1_Template","PaginaCriarConta_Conditional_2_Template","ɵɵtwoWayListener","i0","ɵɵtwoWayBindingSet","PaginaCriarConta_Conditional_6_Template","ɵɵtwoWayProperty","RouterModule","RouterLink","FormsModule","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MaxLengthValidator","ReactiveFormsModule","FormGroupDirective","FormControlName","SeletorImagens","ModalVerificacao","Carregamento","styles","import_file_saver","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","Recibo_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","transferirRecibo","id_compraRealizada","ɵɵadvance","ɵɵtextInterpolate","data_compra","ɵɵtextInterpolate2","local_partida","local_chegada","ɵɵtextInterpolate1","preco","PaginaCompras","ServicoAutenticacao","inject","Utilizador","Compras","ServicoHTTP","HttpService","ngOnInit","__async","Pedido_URL","URL","Definicoes","API_URL","Request","idCompra","blob","undefined","ficheiro","Blob","type","saveAs","ordenarCompras","criterio","sort","a","b","dataA","Date","split","reverse","join","dataB","getTime","descA","toLowerCase","descB","localeCompare","onFiltroAlterado","event","target","value","selectors","decls","vars","consts","template","rf","ctx","ɵɵtemplate","PaginaCompras_Conditional_4_Template","PaginaCompras_Conditional_5_Template","$event","ɵɵrepeaterCreate","PaginaCompras_For_36_Template","ɵɵrepeaterTrackByIndex","ɵɵconditional","length","ɵɵrepeater","Topbar","styles","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","Bilhete_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","removerBilhete","id_produto","ɵɵadvance","ɵɵtextInterpolate2","local_partida","local_chegada","ɵɵtextInterpolate","ɵɵpipeBind2","preco","ɵɵtextInterpolate1","hora_partida","_r4","ModalMetodo","ɵɵproperty","Carrinho","length","_r5","_r6","TipoPagamentoCartao","TipoPagamentoMB","_r7","SubmeterModal","$event","permitirApenasLetras","formatarCartao","formatarValidade","permitirApenasNumeros","ModalCodigo","FormCartao","_r8","tmp_2_0","ServicoAutenticacao","Utilizador","telefone","_r9","AMandarEmail","tmp_3_0","email","FormCodigo","ɵɵtemplate","PaginaCarrinho_Conditional_25_Conditional_1_Template","PaginaCarrinho_Conditional_25_Conditional_2_Template","PaginaCarrinho_Conditional_25_Conditional_3_Template","PaginaCarrinho_Conditional_25_Conditional_4_Template","ɵɵconditional","PaginaCarrinho","inject","ServicoHttp","HttpService","Total","submetido","EventEmitter","ngOnInit","__async","Pedido_URL","URL","Definicoes","API_URL","Request","forEach","produto","realizarCompra","resultadoCompra","nome_cartao","value","numero_cartao","validade","guardarCartao","idProduto","EmailMandado","FormGroup","FormControl","codigo","Validators","required","minLength","maxLength","event","input","target","replace","tecla","key","test","preventDefault","substring","mes","parseInt","mesStr","anoStr","split","ano","hoje","Date","anoAtual","getFullYear","mesAtual","getMonth","alert","selectors","outputs","decls","vars","consts","template","rf","ctx","PaginaCarrinho_Conditional_7_Template","PaginaCarrinho_Conditional_8_Template","ɵɵrepeaterCreate","PaginaCarrinho_For_10_Template","ɵɵrepeaterTrackByIndex","PaginaCarrinho_Conditional_23_Template","PaginaCarrinho_Conditional_24_Template","PaginaCarrinho_Conditional_25_Template","ɵɵrepeater","Topbar","FormsModule","ɵNgNoValidate","DefaultValueAccessor","CheckboxControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinLengthValidator","MaxLengthValidator","ReactiveFormsModule","FormGroupDirective","FormControlName","CurrencyPipe","Carregamento","styles","_c0","MapEventManager","BehaviorSubject","listener","_ngZone","name","switchMap","target","observable","Observable","observer","event","currentTarget","subscriber","DEFAULT_OPTIONS","DEFAULT_HEIGHT","DEFAULT_WIDTH","GoogleMap","inject","ElementRef","NgZone","center","zoom","options","EventEmitter","platformId","PLATFORM_ID","isPlatformBrowser","googleMapsWindow","changes","googleMap","lib","mapConstructor","bounds","padding","x","y","latLng","latLngBounds","take","styles","coerceCssPixelValue","__spreadProps","__spreadValues","__ngFactoryType__","ɵɵdefineComponent","ɵɵNgOnChangesFeature","rf","ctx","ɵɵprojectionDef","ɵɵelement","ɵɵprojection","cssUnitsPattern","value","MAP_MARKER","InjectionToken","MapPolygon","inject","GoogleMap","NgZone","MapEventManager","BehaviorSubject","Subject","options","paths","EventEmitter","take","map","lib","polygonConstructor","combineLatest","__spreadProps","__spreadValues","takeUntil","__ngFactoryType__","ɵɵdefineDirective","MapPolyline","path","polylineConstructor","DEFAULT_MARKER_OPTIONS","MapAdvancedMarker","inject","GoogleMap","NgZone","MapEventManager","title","position","content","draggable","options","zIndex","EventEmitter","map","lib","advancedMarkerConstructor","changes","advancedMarker","_content","_position","_title","_draggable","_zIndex","take","__spreadProps","__spreadValues","__ngFactoryType__","ɵɵdefineDirective","ɵɵProvidersFeature","MAP_MARKER","ɵɵNgOnChangesFeature","GoogleMapsModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","polygon_portugal_default","lat","lng","ɵɵelement","ɵɵproperty","MarkerInfo_r1","position","title","content","ɵɵpureFunction2","_c1","ctx_r1","PontoA","PontoB","VisuaisLinha","Mapa","ServicoHttp","inject","HttpService","Renderer","Renderer2","options","mapId","center","lat","lng","zoom","mapTypeId","Markers","PolygonPortugal","polygonPortugal","DistanciaKm","strokeColor","strokeOpacity","strokeWeight","GetLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","error","AdicionarMarcador","Marcador","push","ngOnInit","__async","Location","coords","latitude","longitude","Localidades","Request","Definicoes","API_URL","Localidade","Coordenadas","local","CriarTexto","text","div","createElement","setProperty","addClass","distanciaTexto","appendChild","listen","event","stopPropagation","pontoEquivalente","removeClass","undefined","distancia","calcularDistancia","toFixed","ponto1","ponto2","dLat","grausParaRad","dLng","a","Math","sin","cos","R","atan2","sqrt","graus","PI","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵrepeaterCreate","Mapa_For_2_Template","ɵɵrepeaterTrackByIndex","ɵɵtemplate","Mapa_Conditional_3_Template","ɵɵelementEnd","ɵɵadvance","ɵɵrepeater","ɵɵconditional","ɵɵpureFunction0","_c0","RouterModule","GoogleMapsModule","GoogleMap","MapAdvancedMarker","MapPolygon","MapPolyline","styles","PaginaLocalidades","selectors","decls","vars","consts","template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","Footer","Topbar","Mapa","ButaoVoltar","styles","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","ModalSucessoVisivel","ɵɵtext","ɵɵelementEnd","ɵɵelement","PaginaContacto","AMandarEmail","ServicoHttp","inject","HttpService","FormContacto","FormGroup","email","FormControl","Validators","required","assunto","mensagem","get","MandarEmail","__async","disable","Request","Definicoes","API_URL","value","reset","enable","selectors","decls","vars","consts","template","rf","ctx","ɵɵtemplate","PaginaContacto_Conditional_37_Template","ɵɵadvance","ɵɵproperty","invalid","ɵɵconditional","Footer","Topbar","ButaoVoltar","FormsModule","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","ReactiveFormsModule","FormGroupDirective","FormControlName","Carregamento","styles","PaginaSobre","selectors","decls","vars","consts","template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","Footer","Topbar","ButaoVoltar","styles","JanelaPrivacidade","ServicoAutenticacao","inject","ServicoHttp","HttpService","Utilizador","PasswordVisivel","AMandarEmail","ModalCodigo","TipoEdicao","MandarCodigoVerificacao","__async","FormPrivacidade","disable","Request","Definicoes","API_URL","EditarCredenciais","Codigo","valores","value","carregado","codigo","email","undefined","password","console","log","enable","FormGroup","FormControl","Validators","required","Validadores","SenhaForte","constructor","effect","get","setValue","selectors","decls","vars","consts","template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵlistener","ɵɵtext","ɵɵelementEnd","$event","ɵɵproperty","ɵɵadvance","tmp_2_0","ɵɵsanitizeUrl","invalid","RouterModule","Carregamento","FormsModule","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","ReactiveFormsModule","FormGroupDirective","FormControlName","ModalVerificacao","styles","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","PreverImagem","SelecionarImagem","ɵɵelementEnd","_r3","FecharModalSucesso","ɵɵtext","ɵɵelement","JanelaMinhaConta","ServicoAutenticacao","inject","Utilizador","ServicoHttp","HttpService","router","Router","CarregamentoVisivel","Desativado","ModalSucessoVisivel","constructor","FormEditar","get","disable","effect","setValue","nome","nif","nascimento","telefone","localidade","URL_Imagens","Definicoes","API_URL","ImageSelecionada","FicheiroSelecionado","Ficheiro","__async","reader","FileReader","onload","result","MudarImagem","readAsDataURL","ImagemMudada","Event","Input","target","files","Data","FormData","append","Sucesso","Request","SubmeterForm","value","enable","window","location","reload","FormGroup","FormControl","Validators","required","pattern","VerificarMudancas","ValoresForm","permitirApenasLetras","event","input","replace","permitirApenasNumeros","tecla","key","test","preventDefault","selectors","decls","vars","consts","template","rf","ctx","ɵɵtemplate","JanelaMinhaConta_Conditional_49_Template","JanelaMinhaConta_Conditional_50_Template","ɵɵproperty","ɵɵadvance","tmp_1_0","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","ɵɵsanitizeUrl","ɵɵconditional","RouterModule","FormsModule","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","MaxLengthValidator","PatternValidator","ReactiveFormsModule","FormGroupDirective","FormControlName","SeletorImagens","styles","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","JanelaUtilizadores_For_27_Conditional_15_Template","JanelaUtilizadores_For_27_Conditional_16_Template","JanelaUtilizadores_For_27_Conditional_18_Template","JanelaUtilizadores_For_27_Conditional_19_Template","ɵɵlistener","Utilizador_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","MostrarGestao","nif","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","nome","nascimento","telefone","localidade","email","ɵɵconditional","atividade","tipo_utilizador","JanelaUtilizadores","ServicoAutenticacao","inject","ServicoHttp","HttpService","router","Router","Utilizador","Utilizadores","ngOnInit","__async","ResultadoUtilizadores","Request","Definicoes","API_URL","Nif","navigate","selectors","decls","vars","consts","template","rf","ctx","ɵɵrepeaterCreate","JanelaUtilizadores_For_27_Template","ɵɵrepeaterTrackByIndex","JanelaUtilizadores_ForEmpty_28_Template","ɵɵrepeater","RouterModule","styles","JanelaEditarUtilizador","ServicoAutenticacao","inject","route","ActivatedRoute","router","Router","ServicoHttp","HttpService","Utilizador","PasswordVisivel","UtilizadorSelecionado","signal","SubmeterForm","__async","FormEditarUtilizador","disable","Request","Definicoes","API_URL","value","navigate","window","location","reload","enable","FormGroup","nome","FormControl","Validators","required","nif","pattern","nascimento","telefone","localidade","foto","get","ngOnInit","NIFUtilizador","snapshot","paramMap","LinkAPI","resultado","set","console","log","constructor","effect","setValue","permitirApenasLetras","event","input","target","replace","permitirApenasNumeros","tecla","key","test","preventDefault","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","$event","ɵɵproperty","ɵɵadvance","tmp_1_0","tmp_2_0","tmp_3_0","ɵɵsanitizeUrl","tmp_6_0","tmp_7_0","tmp_8_0","email","tmp_9_0","tipo_utilizador","tmp_10_0","tmp_11_0","atividade","tmp_12_0","RouterModule","FormsModule","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","NgControlStatusGroup","ReactiveFormsModule","FormGroupDirective","styles","routes","path","redirectTo","pathMatch","component","PaginaInicial","PaginaViagens","PaginaLocalidades","PaginaContacto","PaginaDefinicoes","children","JanelaMinhaConta","JanelaPrivacidade","JanelaUtilizadores","JanelaEditarUtilizador","PaginaCarrinho","PaginaCompras","PaginaCriarConta","PaginaSobre","ANIMATION_PREFIX","AsyncAnimationRendererFactory","inject","Injector","ɵASYNC_ANIMATION_LOADING_SCHEDULER_FN","doc","delegate","zone","animationType","moduleImpl","loadFn","m","moduleImplPromise","e","RuntimeError","ɵcreateEngine","ɵAnimationRendererFactory","rendererFactory","hostElement","rendererType","renderer","dynamicRenderer","DynamicDelegationRenderer","animationRendererFactory","animationRenderer","ChangeDetectionScheduler","componentId","__ngFactoryType__","ɵɵinvalidFactory","ɵɵdefineInjectable","impl","fn","name","namespace","value","parent","newChild","refChild","isMove","oldChild","isHostElement","selectorOrNode","preserveContent","node","el","style","flags","target","eventName","callback","options","propOrEventName","InjectionToken","provideAnimationsAsync","type","performanceMarkFeature","makeEnvironmentProviders","RendererFactory2","DOCUMENT","DomRendererFactory2","NgZone","ANIMATION_MODULE_TYPE","appConfig","providers","provideZoneChangeDetection","eventCoalescing","provideRouter","routes","provideAnimationsAsync","MensagemComponente","mensagem","Fechar","EventEmitter","ServicoMensagens","inject","temporizador","ngOnInit","iniciarTemporizador","subscribe","removerMensagem","id","pausar","clearTimeout","retomar","setTimeout","emit","selectors","inputs","outputs","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵlistener","ɵɵtext","ɵɵelementEnd","ɵɵclassMap","tipo","ɵɵadvance","ɵɵtextInterpolate1","texto","ɵɵelementStart","ɵɵlistener","Mensagem_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","close","id","ɵɵelementEnd","ɵɵproperty","MessageContainerComponent","ServicoMensagens","Mensagens","constructor","ngOnInit","mensagens$","subscribe","msgs","removerMensagem","ɵɵdirectiveInject","selectors","decls","vars","consts","template","rf","ctx","ɵɵrepeaterCreate","MessageContainerComponent_For_2_Template","ɵɵrepeaterTrackByIndex","ɵɵadvance","ɵɵrepeater","MensagemComponente","styles","AppComponent","title","ServicoAutenticacao","inject","constructor","Autenticar","selectors","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","RouterOutlet","MessageContainerComponent","styles","bootstrapApplication","AppComponent","appConfig","catch","err","console","error"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,21,43,62]}